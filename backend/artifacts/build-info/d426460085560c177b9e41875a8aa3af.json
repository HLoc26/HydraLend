{"id":"d426460085560c177b9e41875a8aa3af","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/HydraPool.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport {Helper} from \"./libraries/Helper.sol\";\nimport {VaultAccounting} from \"./libraries/VaultAccounting.sol\";\nimport {InterestRate} from \"./libraries/InterestRate.sol\";\nimport {Pausing} from \"./utils/Pausing.sol\";\nimport {Structs} from \"./interfaces/Structs.sol\";\nimport {FlashLoanReceiverInterface} from \"./interfaces/FlashLoanReceiverInterface.sol\";\nimport {NFTPledging} from \"./NFTPledging.sol\";\nimport \"./libraries/Helper.sol\";\n\ncontract HydraPool is Pausing, NFTPledging {\n    using VaultAccounting for Structs.Vault;\n    using InterestRate for Structs.VaultInfo;\n    using Helper for address;\n\n    mapping(address => Structs.TokenVault) private vaults;\n    mapping(address => mapping(address => Structs.AccountShares))\n        private userShares;\n    mapping(address => mapping(address => mapping(uint256 => Structs.LiquidatedWarning)))\n        private nftLiquidationWarning;\n\n    error TooHighSlipage(uint256 sharesOutOrAmountIn);\n    error InsufficientBalance();\n    error BelowHealthFactor();\n    error BorrowerIsSolvant();\n    error SelfLiquidation();\n    error InvalidNFTLiquidation(\n        address borrower,\n        address nftAddress,\n        uint256 tokenId\n    );\n    error InvalidFeeRate(uint256 fee);\n    error InvalidReserveRatio(uint256 ratio);\n    error FlashloanPaused(address token);\n    error FlashloanFailed();\n    error NoLiquidationWarning();\n    error WarningDelayHasNotPassed();\n    error MustPayMoreDebt();\n    error LiquidatorDelayHasNotPassed();\n    error EmptyArray();\n    error ArrayMismatch();\n\n    event Deposit(address user, address token, uint256 amount, uint256 shares);\n    event Borrow(address user, address token, uint256 amount, uint256 shares);\n    event Repay(address user, address token, uint256 amount, uint256 shares);\n    event Withdraw(address user, address token, uint256 amount, uint256 shares);\n    event Liquidated(\n        address borrower,\n        address liquidator,\n        uint repaidAmount,\n        uint256 liquidatedCollateral,\n        uint256 reward\n    );\n    event UpdateInterestRate(uint256 elapsedTime, uint64 newInterestRate);\n    event AccuredInterest(\n        uint64 interestRatePerSec,\n        uint256 interestEarned,\n        uint256 feesAmount,\n        uint256 feesShare\n    );\n    event FlashloanSuccess(\n        address initiator,\n        address[] token,\n        uint256[] amount,\n        uint256[] fees,\n        bytes data\n    );\n    event DepositNFT(address user, address nftAddress, uint256 tokenId);\n    event WithdrawNFT(\n        address user,\n        address recipient,\n        address nftAddress,\n        uint256 tokenId\n    );\n    event LiquidatingNFTWarning(\n        address liquidator,\n        address borrower,\n        address nftAddress,\n        uint256 tokenId\n    );\n    event LiquidatingNFTStopped(\n        address borrower,\n        address nftAddres,\n        uint256 tokenId\n    );\n    event NFTLiquidated(\n        address liquidator,\n        address borrower,\n        address nftAddress,\n        uint256 tokenId,\n        uint256 totalRepayDebt,\n        uint256 nftBuyPrice\n    );\n    event NewVaultSetup(\n        address token,\n        Structs.VaultSetupParamemters params\n    );\n\n    //Make a subnet that create a token, then replace daiAddress with token address and everything\n    constructor(\n        address daiAddress,\n        address daiPriceFeed,\n        Structs.VaultSetupParamemters memory daiVaultParams\n    ) {\n        _setupVault(\n            daiAddress,\n            daiPriceFeed,\n            Structs.TokenType.ERC20,\n            daiVaultParams,\n            true\n        );\n    }\n    /*/////////////////////////////////////////////\n                ERC20 FUNCTIONS\n    //////////////////////////////////////////////*/\n\n    //dua token de lay lai suat\n    function supply(\n        address token,\n        uint256 amount,\n        uint256 minSharesOut\n    )  payable external {\n        WhenNotPaused(token);\n        allowedToken(token);\n        _accuredInterest(token);\n\n        token.transferERC20(msg.sender, address(this),amount);\n        uint256 shares = vaults[token].totalAsset.toShares(amount, false);\n        if (shares < minSharesOut) revert TooHighSlipage(shares);\n\n        vaults[token].totalAsset.shares += uint128(shares);\n        vaults[token].totalAsset.amount += uint128(amount);\n        userShares[msg.sender][token].collateral += shares;\n\n        emit Deposit(msg.sender, token, amount, shares);\n    }\n\n    //Muon token\n    function borrow(address token, uint256 amount) payable external {\n        WhenNotPaused(token);\n        if(!vaultAboveReserveRatio(token,amount))\n            revert InsufficientBalance();\n        _accuredInterest(token);\n\n        uint256 shares = vaults[token].totalBorrow.toShares(amount, false);\n        vaults[token].totalBorrow.shares += uint128(shares);\n        vaults[token].totalBorrow.amount += uint128(amount);\n        userShares[msg.sender][token].borrow += shares;\n        \n        token.transferERC20(address(this), msg.sender, amount);\n        if(healthFactor(msg.sender) < MIN_HEALTH_FACTOR)\n            revert BelowHealthFactor();\n\n        emit Borrow(msg.sender, token, amount, shares);\n    }\n    //Tra token da muon\n    function repay(address token, uint256 amount) external {\n        _accuredInterest(token);\n        uint256 userBorrowShare = userShares[msg.sender][token].borrow;\n        uint256 shares = vaults[token].totalBorrow.toShares(amount, true);\n        if (amount == type(uint256).max || shares > userBorrowShare) {\n            shares = userBorrowShare;\n            amount = vaults[token].totalBorrow.toAmount(shares, true);\n        }\n        token.transferERC20(msg.sender, address(this), amount);\n        unchecked {\n            vaults[token].totalBorrow.shares -= uint128(shares);\n            vaults[token].totalBorrow.amount -= uint128(amount);\n            userShares[msg.sender][token].borrow = userBorrowShare - shares;\n        }\n\n        emit Repay(msg.sender, token, amount, shares);\n    }\n    //Rut ra\n    function withdraw(\n        address token,\n        uint256 amount,\n        uint256 maxShareIn\n    ) external {\n        _withdraw(token, amount, maxShareIn, false);\n    }\n    //Khoi\n    function redeem(\n        address token,\n        uint256 shares,\n        uint256 minAmountOut\n    ) external {\n        _withdraw(token, shares, minAmountOut, true);\n    }\n\n    function liquidate(\n        address account,\n        address collateral,\n        address userBorrowToken,\n        uint256 amountToLiquidate\n    ) external {\n        if (msg.sender == account) revert SelfLiquidation();\n        uint256 accountHealth = healthFactor(account);\n        if (accountHealth >= MIN_HEALTH_FACTOR) revert BorrowerIsSolvant();\n\n        uint256 collateralShares = userShares[account][collateral].collateral;\n        uint256 borrowShares = userShares[account][userBorrowToken].borrow;\n        if (collateralShares == 0 || borrowShares == 0) return;\n        {\n            uint256 totalBorrowAmount = vaults[userBorrowToken]\n                .totalBorrow\n                .toAmount(borrowShares, true);\n\n            uint256 maxBorrowAmountToLiquidate = accountHealth >=\n                FULL_LIQUIDATION_THRESHOLD\n                ? (totalBorrowAmount * DEFAULT_LIQUIDATION_CLOSE) / BPS\n                : totalBorrowAmount;\n            amountToLiquidate = amountToLiquidate > maxBorrowAmountToLiquidate\n                ? maxBorrowAmountToLiquidate\n                : amountToLiquidate;\n        } \n\n        uint256 collateralAmountToLiquidate;\n        uint256 liquidationReward;\n        {\n            address user = account;\n            address borrowToken = userBorrowToken;\n            address collateralToken = collateral;\n            uint256 liquidationAmount = amountToLiquidate;\n\n            uint256 _userTotalCollateralAmount = vaults[collateralToken]\n                .totalAsset\n                .toAmount(collateralShares, false);\n            \n            uint256 collateralPrice = getTokenPrice(collateralToken);\n            uint256 borrowTokenPrice = getTokenPrice(borrowToken);\n            uint8 collateralDecimals = collateralToken.tokenDecimals();\n            uint8 borrowTokenDecimals = borrowToken.tokenDecimals();\n\n            collateralAmountToLiquidate =\n                (liquidationAmount *\n                    borrowTokenPrice *\n                    10 ** collateralDecimals) /\n                (collateralPrice * 10 ** borrowTokenDecimals);\n            uint256 maxLiquidationReward = (collateralAmountToLiquidate *\n                LIQUIDATION_REWARD) / BPS;\n            if (collateralAmountToLiquidate > _userTotalCollateralAmount) {\n                collateralAmountToLiquidate = _userTotalCollateralAmount;\n                liquidationReward = \n                    ((_userTotalCollateralAmount *\n                        collateralPrice *\n                        10 ** borrowTokenDecimals) / borrowTokenPrice) *\n                    10 ** collateralDecimals;\n                amountToLiquidate = liquidationAmount;\n            } else {\n                uint256 collateralBalanceAfter = _userTotalCollateralAmount -\n                    collateralAmountToLiquidate;\n                liquidationReward = maxLiquidationReward >\n                    collateralBalanceAfter\n                    ? collateralBalanceAfter\n                    : maxLiquidationReward;\n            }\n            //Update borrow vault\n            uint128 repaidBorrowShares = uint128(\n                vaults[borrowToken].totalBorrow.toShares(\n                    liquidationAmount,\n                    false\n                )\n            );\n            vaults[borrowToken].totalBorrow.shares -= repaidBorrowShares;\n            vaults[borrowToken].totalBorrow.amount -= uint128(\n                liquidationAmount\n            );\n\n            //Update collateral vault\n            uint128 liquidatedCollShares = uint128(\n                vaults[collateralToken].totalAsset.toShares(\n                    collateralAmountToLiquidate + liquidationReward,\n                    false\n                )\n            );\n            vaults[collateralToken].totalAsset.shares -= liquidatedCollShares;\n            vaults[collateralToken].totalAsset.amount -= uint128(\n                collateralAmountToLiquidate + liquidationReward\n            );\n            userShares[user][borrowToken].borrow -= repaidBorrowShares;\n            userShares[user][collateralToken].collateral -= liquidatedCollShares;\n        }\n\n        //Repay borrowed amount\n        userBorrowToken.transferERC20(\n            address(this),\n            msg.sender,\n            collateralAmountToLiquidate + liquidationReward\n        );\n        //Transfer collateral & liquidation reward to liquidator\n        collateral.transferERC20(\n            address(this),\n            msg.sender,\n            collateralAmountToLiquidate + liquidationReward\n        );\n\n        emit Liquidated(\n            account,\n            msg.sender,\n            amountToLiquidate,\n            collateralAmountToLiquidate + liquidationReward,\n            liquidationReward\n        );\n    }\n    //\n    function flashloan(\n        address receiverAddress,\n        address[] calldata tokens,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external {\n        if (tokens.length == 0) revert EmptyArray();\n        if (tokens.length != amounts.length) revert ArrayMismatch();\n\n        FlashLoanReceiverInterface receiver = FlashLoanReceiverInterface(receiverAddress);\n        uint256[] memory fees = new uint256[](tokens.length);\n        for (uint256 i; i < tokens.length; ) {\n            if (maxFlashloan(tokens[i]) == 0) revert FlashloanPaused(tokens[i]);\n            fees[i] = flashloanFee(tokens[i], amounts[i]);\n            tokens[i].transferERC20(address(this), receiverAddress, amounts[i]);\n            unchecked {\n                ++i;\n            }\n        }\n        if (!receiver.onFlashLoan(\n            msg.sender,\n            tokens,\n            amounts,\n            fees,\n            data\n        )) revert FlashloanFailed();\n\n        uint256 amountPlusFee;\n        for (uint256 i; i < tokens.length; ) {\n            amountPlusFee = amounts[i] + fees[i];\n            tokens[i].transferERC20(\n                receiverAddress,\n                address(this),\n                amountPlusFee\n            );\n            vaults[tokens[i]].totalAsset.amount += uint128(fees[i]);\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit FlashloanSuccess(msg.sender, tokens, amounts, fees, data);\n    }\n    //Lai tich luy\n    function accureInterest(\n        address token\n    ) \n        external\n        returns (\n            uint256 _interestEarned,\n            uint256 _feesAmount,\n            uint256 _feesShare,\n            uint64 _newRate\n        ) \n    {\n        return _accuredInterest(token);\n    }\n\n    /*//////////////////////////////////////////////\n                NFT FUNCTIONS\n    //////////////////////////////////////////////*/\n    //Cam NFT\n    function depositNft(\n        address recipient,\n        address nftAddress,\n        uint256 tokenId\n    ) external {\n        _withdrawNft(msg.sender, recipient, nftAddress, tokenId);\n        if (healthFactor(msg.sender) < MIN_HEALTH_FACTOR) revert BelowHealthFactor();\n        emit WithdrawNFT(msg.sender, recipient, nftAddress, tokenId);\n    }\n    //\n    function triggerNFTiquidation(\n        address account,\n        address nftAddress,\n        uint256 tokenId\n    ) external {\n        if (!hasDepositedNFT(account, nftAddress, tokenId)) revert InvalidNFT();\n        uint256 totalTokenCollateralValue = getUserTotalTokenCollateral(\n            account\n        );\n\n        if (\n            healthFactor(account) >= MIN_HEALTH_FACTOR ||\n            totalTokenCollateralValue != 0\n        ) revert InvalidNFTLiquidation(account, nftAddress, tokenId);\n\n        Structs.LiquidatedWarning storage warning = nftLiquidationWarning[\n            account\n        ][nftAddress][tokenId];\n        warning.liquidator = msg.sender;\n        warning.liquidationTimestamp = uint64(block.timestamp + NFT_WARNING_DELAY);\n\n        emit LiquidatingNFTWarning(msg.sender, account, nftAddress, tokenId);\n    }\n\n    function stopNFTLiquidation(\n        address account,\n        address nftAddress,\n        uint256 tokenId\n    ) external {\n        if (healthFactor(account) < MIN_HEALTH_FACTOR)\n            revert BelowHealthFactor();\n        delete nftLiquidationWarning[account][nftAddress][tokenId];\n        emit LiquidatingNFTStopped(account, nftAddress, tokenId);\n    }\n\n    function executeNFTLiquidation(\n        address account,\n        address nftAddress,\n        uint256 tokenId,\n        address[] calldata repayTokens,\n        uint256[] calldata repayAmounts\n    ) external {\n        if (repayTokens.length == 0) revert EmptyArray();\n        if (repayTokens.length != repayAmounts.length) revert ArrayMismatch();\n        canLiquidateNFT(account, nftAddress, tokenId);\n\n        uint256 totalDebtValue = getUserTotalBorrow(account);\n        uint256 nftFloorPrice = getTokenPrice(nftAddress);\n        uint256 totalRepaidDebtValue;\n        {\n            address borrower = account;\n            address token;\n            uint256 amount;\n            uint256 borrowShares;\n            for (uint256 i; i < repayTokens.length; ) {\n                token = repayTokens[i];\n                amount = repayAmounts[i];\n                _accuredInterest(token);\n                borrowShares = vaults[token].totalBorrow.toShares(amount, true);\n                token.transferERC20(msg.sender, address(this), amount);\n                vaults[token].totalBorrow.shares -= uint128(borrowShares);\n                vaults[token].totalBorrow.amount -= uint128(amount);\n\n                userShares[borrower][token].borrow -= uint128(borrowShares);\n\n                totalRepaidDebtValue += getAmountInUSD(token, amount);\n                unchecked {\n                    ++i;\n                }\n            }\n\n            //must repay at least debt equivalent of half NFT value\n            if (\n                totalDebtValue > nftFloorPrice &&\n                totalRepaidDebtValue <\n                (nftFloorPrice * DEFAULT_LIQUIDATION_CLOSE) / BPS\n            ) revert MustPayMoreDebt();\n        }\n\n        uint256 nftBuyPrice;\n        {\n            address borrower = account;\n            uint256 totalLiquidatorDiscount = (totalRepaidDebtValue *\n                (BPS + NFT_LIQUIDATION_DISCOUNT)) / BPS;\n            nftBuyPrice = nftFloorPrice - totalLiquidatorDiscount;\n\n            address DAI =  supportedERC20s[0];\n            DAI.transferERC20(msg.sender, address(this), nftBuyPrice);\n\n            uint256 shares = vaults[DAI].totalAsset.toShares(\n                nftBuyPrice,\n                false\n            );\n            vaults[DAI].totalAsset.shares += uint128(shares);\n            vaults[DAI].totalAsset.amount += uint128(nftBuyPrice);\n            userShares[borrower][DAI].collateral += shares;\n        }\n\n        _withdrawNft(account, msg.sender, nftAddress, tokenId);\n\n        emit NFTLiquidated(\n            msg.sender,\n            account,\n            nftAddress,\n            tokenId,\n            totalRepaidDebtValue,\n            nftBuyPrice\n        );\n    }\n\n    function canLiquidateNFT(\n        address account,\n        address nftAddress,\n        uint256 tokenId\n    ) public view {\n        if (healthFactor(account) < MIN_HEALTH_FACTOR)\n             revert BorrowerIsSolvant();\n        Structs.LiquidatedWarning storage warning = nftLiquidationWarning[\n            account\n        ][nftAddress][tokenId];\n        if (warning.liquidator == address(0)) revert NoLiquidationWarning();\n        if (block.timestamp < warning.liquidationTimestamp)\n            revert WarningDelayHasNotPassed();\n        if (\n            block.timestamp <=\n            warning.liquidationTimestamp + NFT_LIQUIDATOR_DELAY &&\n            msg.sender != warning.liquidator\n        ) revert LiquidatorDelayHasNotPassed();\n        \n    }\n    /*//////////////////////////////////////////////\n                 GETTER FUNCTIONS\n    //////////////////////////////////////////////*/\n\n    function getUserData(\n        address user\n    ) public view \n    returns (\n        uint256 totalTokenCollateral,\n        uint256 totalNFTCollateral,\n        uint256 totalBorrowValue\n    )\n    {\n        totalTokenCollateral = getUserTotalTokenCollateral(user);\n        totalNFTCollateral = getUserNFTCollateral(user);\n        totalBorrowValue = getUserTotalBorrow(user);\n    }\n\n    function getUserTotalTokenCollateral(\n        address user\n    ) public view returns (uint256 totalValueInUSD) {\n        uint len = supportedERC20s.length;\n        for (uint256 i; i < len;) {\n            address token = supportedERC20s[i];\n            uint256 tokenAmount = vaults[token].totalAsset.toAmount(\n                userShares[user][token].collateral,\n                false\n            );\n            if (tokenAmount != 0) {\n                totalValueInUSD += getAmountInUSD(token, tokenAmount);\n            }\n            unchecked {\n                ++i;\n            }\n        } \n    }\n\n    function getUserNFTCollateral(address user) public view returns(uint256 totalValueInUSD) {\n        uint len = supportedNFTs.length;\n        for (uint256 i; i < len;) {\n            address nftAddress = supportedNFTs[i];\n            uint256 userDepositedNFTs = getDepositedNFTCount(user, nftAddress);\n            if (userDepositedNFTs != 0) {\n                uint256 nftFloorPrice = getTokenPrice(nftAddress);\n                totalValueInUSD += userDepositedNFTs * nftFloorPrice;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    function getUserTotalBorrow(\n        address user\n    ) public view returns (uint256 totalValueInUSD) {\n        uint len = supportedERC20s.length;\n        for (uint256 i; i < len;) {\n            address token = supportedERC20s[i];\n            uint256 tokenAmount = vaults[token].totalBorrow.toAmount(\n                userShares[user][token].borrow,\n                false\n            );\n            if (tokenAmount != 0) {\n                totalValueInUSD += getAmountInUSD(token, tokenAmount);\n            }\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    function getUserTokenCollateralAndBorrow(\n        address user,\n        address token\n    ) \n        external \n        view\n        returns (uint256 tokenCollateralShare, uint256 tokenBorrowShare)\n    {\n        tokenCollateralShare = userShares[user][token].collateral;\n        tokenBorrowShare = userShares[user][token].borrow;\n    }\n\n    function healthFactor(address user) public view returns (uint256 factor) {\n        (\n            uint256 totalTokenCollateral,\n            uint256 totalNFTCollateral,\n            uint256 totalBorrowValue\n        ) = getUserData(user);\n\n        uint256 userTotalCollateralValue = totalTokenCollateral +\n            totalNFTCollateral;\n        if (totalBorrowValue == 0) return 100 * MIN_HEALTH_FACTOR;\n        uint256 collateralValueWithThreshold = (userTotalCollateralValue * \n            LIQUIDATION_THRESHOLD) / BPS;\n        factor = \n            (collateralValueWithThreshold * MIN_HEALTH_FACTOR) /\n            totalBorrowValue;\n    }\n\n    function getAmountInUSD(\n        address token,\n        uint256 amount\n    ) public view returns (uint256 value) {\n        uint256 price = getTokenPrice(token);\n        uint8 decimals = token.tokenDecimals();\n        uint256 amountIn18Decimals = amount * 10**(18 -decimals);\n        value = (amountIn18Decimals * price) / PRECISION;\n    }\n\n    function getTokenVault(\n        address token\n    ) public view returns (Structs.TokenVault memory vault) {\n        vault = vaults[token];\n    }\n\n    function getNFTLiquidationWarning(\n        address account,\n        address nftAddress,\n        uint256 tokenId\n    ) external view returns (Structs.LiquidatedWarning memory) {\n        return nftLiquidationWarning[account][nftAddress][tokenId];\n    }\n\n    function amountToShares(\n        address token, \n        uint256 amount,\n        bool isAsset\n    ) external view returns (uint256 shares) {\n        if (isAsset) {\n            shares = uint256(vaults[token].totalAsset.toShares(amount, false));\n        } else {\n            shares = uint256(vaults[token].totalBorrow.toShares(amount, false));\n        }\n    }\n\n    function sharesToAmount(\n        address token,\n        uint256 shares,\n        bool isAsset\n    ) external view returns (uint256 amount) {\n         if (isAsset) {\n            amount = uint256(vaults[token].totalAsset.toAmount(shares, false));\n        } else {\n            amount = uint256(vaults[token].totalBorrow.toAmount(shares, false));\n        }\n    }\n\n    function maxFlashloan(\n        address token\n    ) public view returns (uint256 maxFlashloanAmount) {\n        maxFlashloanAmount = pausedStatus(token) ? 0 : type(uint256).max;\n    }\n\n    function flashloanFee(\n        address token,\n        uint256 amount\n    ) public view returns (uint256) {\n        return (amount * vaults[token].vaultInfo.flashFeeRate) / BPS;\n    }\n\n    /*///////////////////////////////////////////////\n                 OWNER FUNCTIONS\n    ////////////////////////////////////////////////*/\n\n    function setupVault(\n        address token,\n        address priceFeed,\n        Structs.TokenType tokenType,\n        Structs.VaultSetupParamemters memory params,\n        bool addToken\n    ) external onlyOwner {\n        _setupVault(token, priceFeed, tokenType, params, addToken);\n    }\n\n    ////////INTERNAL FUNCTIONS////////\n\n    //pulledAmount parameter represents an amount of tokens\n    //that are being withdrawn or pulled from the vault. \n    //The function checks if the vault's remaining balance after\n    // this withdrawal would still be above a certain reserve ratio.\n    function vaultAboveReserveRatio(\n        address token,\n        uint256 pulledAmount\n    ) internal view returns (bool isAboveReserveRatio) {\n        uint256 minVaultReserve = (vaults[token].totalAsset.amount *\n            vaults[token].vaultInfo.reserveRatio) / BPS;\n        isAboveReserveRatio =\n            vaults[token].totalAsset.amount != 0 &&\n            IERC20(token).balanceOf(address(this)) >= \n            minVaultReserve + pulledAmount;\n    }\n\n    function _withdraw(\n        address token,\n        uint256 amount,\n        uint256 minAmountOutOrMaxShareIn,\n        bool share\n    ) internal {\n        _accuredInterest(token);\n\n        uint256 userCollateralShares = userShares[msg.sender][token].collateral;\n        uint256 shares;\n        if(share) {\n            shares = amount;\n            amount = vaults[token].totalAsset.toAmount(shares, false);\n            if (amount < minAmountOutOrMaxShareIn)\n                revert TooHighSlipage(amount);\n        } else {\n            shares = vaults[token].totalAsset.toShares(amount, false);\n            if (shares > minAmountOutOrMaxShareIn)\n                revert TooHighSlipage(shares);\n        }\n        if (\n            userCollateralShares < shares ||\n            IERC20(token).balanceOf(address(this)) < amount\n        ) revert InsufficientBalance();\n        unchecked {\n            vaults[token].totalAsset.shares -= uint128(shares);\n            vaults[token].totalAsset.amount -= uint128(amount);\n            userShares[msg.sender][token].collateral -= shares;\n        }\n\n        token.transferERC20(address(this), msg.sender, amount);\n        if (healthFactor(msg.sender) < MIN_HEALTH_FACTOR)\n            revert BelowHealthFactor();\n        emit Withdraw(msg.sender, token, amount, shares);\n    }\n\n    function _accuredInterest(\n        address token\n    ) \n        internal\n        returns(\n            uint256 _interestEarned,\n            uint256 _feesAmount,\n            uint256 _feesShare,\n            uint64 newRate\n        )\n    {\n        Structs.TokenVault memory _vault = vaults[token];\n        if (_vault.totalAsset.amount == 0) {\n            return (0, 0, 0, 0);\n        }\n\n        //Add interest only once per block\n        Structs.VaultInfo memory _currentRateInfo = _vault.vaultInfo;\n        if (_currentRateInfo.lastTimestamp == block.timestamp) {\n            newRate = _currentRateInfo.ratePerSec;\n            return (_interestEarned, _feesAmount, _feesShare, newRate);\n        }\n\n        //If there are no borrows or vault or system is paused, no interest accured\n        if(_vault.totalBorrow.shares ==0 || pausedStatus(token)) {\n            _currentRateInfo.lastTimestamp =uint64(block.timestamp);\n            _currentRateInfo.lastBlock = uint64(block.number);\n            _vault.vaultInfo = _currentRateInfo;\n        } else {\n            uint256 _deltaTime = block.number - _currentRateInfo.lastBlock;\n            uint256 _utilization = (_vault.totalBorrow.amount * PRECISION) /\n                _vault.totalAsset.amount;\n            uint256 _newRate = _currentRateInfo.getInterestRate(\n                _utilization\n            );\n            _currentRateInfo.ratePerSec = uint64(newRate);\n            _currentRateInfo.lastTimestamp = uint64(block.timestamp);\n            _currentRateInfo.lastBlock = uint64(block.number);\n\n            emit UpdateInterestRate(_deltaTime, uint64(_newRate));\n\n            //Calculate interest accures\n            _interestEarned =\n                (_deltaTime *\n                _vault.totalBorrow.amount *\n                _currentRateInfo.ratePerSec) /\n            (PRECISION * BLOCKS_PER_YEAR);\n\n            // Accumulate interest and fees\n            _vault.totalBorrow.amount += uint128(_interestEarned);\n            _vault.totalAsset.amount += uint128(_interestEarned);\n            _vault.vaultInfo = _currentRateInfo;\n            if (_currentRateInfo.feeToProtocolRate > 0) {\n                _feesAmount =\n                    (_interestEarned * _currentRateInfo.feeToProtocolRate) /\n                    BPS;\n                _feesShare =\n                    (_feesAmount * _vault.totalAsset.shares) /\n                    (_vault.totalAsset.amount - _feesAmount);\n                _vault.totalAsset.shares += uint128(_feesShare);\n\n                // accure protocol fee shares to this contract\n                userShares[address(this)][token].collateral += _feesShare;\n            }\n            emit AccuredInterest(\n                _currentRateInfo.ratePerSec,\n                _interestEarned,\n                _feesAmount,\n                _feesShare\n            );\n        }\n        //Save to storage \n        vaults[token] = _vault;\n    }\n\n    function _setupVault(\n        address token,\n        address priceFeed,\n        Structs.TokenType tokenType,\n        Structs.VaultSetupParamemters memory params,\n        bool addToken\n    ) internal {\n        if (addToken) {\n            addSupportedToken(token, priceFeed, tokenType);\n        } else {\n            //Cannot change vault setup when pausing\n            WhenPaused(token);\n        }\n        if (tokenType == Structs.TokenType.ERC20) {\n            if (params.reserveRatio > BPS)\n                revert InvalidReserveRatio(params.reserveRatio);\n            if (params.feeToProtocolRate > MAX_PROTOCOL_FEE)\n                revert InvalidFeeRate(params.feeToProtocolRate);\n            if(params.flashFeeRate > MAX_PROTOCOL_FEE)\n                revert InvalidFeeRate(params.flashFeeRate);\n            Structs.VaultInfo storage _vaultInfo = vaults[token].vaultInfo;\n            _vaultInfo.reserveRatio = params.reserveRatio;\n            _vaultInfo.feeToProtocolRate = params.feeToProtocolRate;\n            _vaultInfo.flashFeeRate = params.flashFeeRate;\n            _vaultInfo.baseRate = params.baseRate;\n            _vaultInfo.slope1 = params.slope1;\n            _vaultInfo.slope2 = params.slope2;\n            _vaultInfo.optimalUtilization = params.optimalUtilization;\n\n            emit NewVaultSetup(token, params);\n        }\n    }\n    \n}\n\n\n"},"contracts/interfaces/FlashLoanReceiverInterface.sol":{"content":"//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\ninterface FlashLoanReceiverInterface {\n    /**\n     * @param initiator ng bat dau khoan vay\n     * @param token token vay\n     * @param amounts so tien vay\n     * @param fees phi vay\n     * @param data user-defined parameters\n     * @return bool success or not\n     */\n    function onFlashLoan(\n        address initiator,\n        address[] calldata token,\n        uint256[] calldata amounts,\n        uint256[] calldata fees,\n        bytes calldata data\n    ) external returns (bool);\n}"},"contracts/interfaces/Structs.sol":{"content":"//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\ninterface Structs {\n    enum TokenType {\n        ERC20,\n        ERC721\n    }\n\n    struct SupportedToken {\n        address usdPriceFeed;\n        TokenType tokenType;\n        bool supported;\n    }\n\n    struct AccountShares {\n        uint256 collateral;\n        uint256 borrow;\n    }\n\n    struct Vault {\n        uint256 amount;\n        uint256 shares;\n    }\n\n    struct TokenVault {\n        Vault totalAsset;\n        Vault totalBorrow;\n        VaultInfo vaultInfo;\n    }\n\n    struct VaultInfo {\n        uint256 reserveRatio;\n        uint64 feeToProtocolRate;\n        uint64 flashFeeRate;\n        uint64 ratePerSec;\n        uint64 lastTimestamp;\n        uint64 lastBlock;\n        uint64 baseRate;\n        uint64 slope1;\n        uint64 slope2;\n        uint256 optimalUtilization;\n    }\n\n    struct LiquidatedWarning {\n        address liquidator;\n        uint64 liquidationTimestamp;\n    }\n\n    struct VaultSetupParamemters {\n        uint64 reserveRatio;\n        uint64 feeToProtocolRate;\n        uint64 flashFeeRate;\n        uint64 baseRate;\n        uint64 slope1;\n        uint64 slope2;\n        uint256 optimalUtilization;\n    }\n}"},"contracts/libraries/ChainlinkOracle.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\nlibrary ChainlinkOracle {\n    error InvalidPrice();\n\n    uint256 private constant TIME_OUT = 2 hours;\n\n    uint256 private constant USD_ORACLE_DECIMALS = 10;\n\n    function getPrice(\n        AggregatorV3Interface priceFeed\n    ) internal view returns (uint256 price) {\n        (\n            uint80 roundId,\n            int256 answer,\n            ,\n            uint256 updatedAt,\n            uint80 answerInRound\n        ) = priceFeed.latestRoundData();\n\n        if (\n            answer <= 0 ||\n            updatedAt == 0 ||\n            answerInRound < roundId ||\n            block.timestamp - updatedAt > TIME_OUT\n        ) revert InvalidPrice();\n\n        price = uint256(answer) * 10 ** USD_ORACLE_DECIMALS;\n    } \n\n    function getTimeOut(AggregatorV3Interface) public pure returns (uint256) {\n        return TIME_OUT;\n    }\n}"},"contracts/libraries/Helper.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport {IERC20, IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\nlibrary  Helper {\n    error TransferFailed();\n    \n    function tokenDecimals(\n        address token\n    ) internal view returns (uint8 decimals) {\n        decimals = IERC20Metadata(token).decimals();\n    }\n\n    function transferERC20(\n        address _token,\n        address _from,\n        address  _to,\n        uint256 _amount\n    ) internal {\n        bool success;\n        if (_from == address(this)) {\n            success = IERC20(_token).transfer(_to, _amount);\n        } else {\n            success = IERC20(_token).transferFrom(_from, _to, _amount);\n        }\n        if (!success) revert TransferFailed();\n    }\n}"},"contracts/libraries/InterestRate.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"../interfaces/Structs.sol\";\n\nlibrary InterestRate {\n    uint256 internal constant RATE_PRECISION = 1e18;\n\n    function getInterestRate(\n        Structs.VaultInfo memory _interestRateInfo,\n        uint256 utilization\n    ) internal pure returns (uint256 newRate) {\n        uint256 optimalUtilization = _interestRateInfo.optimalUtilization;\n        uint256 baseRate = uint256(_interestRateInfo.baseRate);\n        uint256 slope1 = uint256(_interestRateInfo.slope1);\n        uint256 slope2 = uint256(_interestRateInfo.slope2);\n\n        if (utilization <= optimalUtilization) {\n            uint256 rate = (utilization * slope1) / optimalUtilization;\n            newRate = baseRate + rate;\n        } else {\n            uint256 delta = utilization - optimalUtilization;\n            uint256 excessUtilizationRate = \n                (delta * RATE_PRECISION) / (RATE_PRECISION - optimalUtilization);\n            newRate = baseRate + slope1 + (excessUtilizationRate * slope2)\n                / RATE_PRECISION;\n        }\n    }\n}"},"contracts/libraries/VaultAccounting.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"../interfaces/Structs.sol\";\n\nlibrary VaultAccounting {\n    function toShares(\n        Structs.Vault memory total,\n        uint256 amount,\n        bool roundUp\n    ) internal pure returns (uint256 shares) {\n        if(total.amount == 0) {\n            shares = amount;\n        } else {\n            shares = (amount * total.shares) / total.amount;\n            if (roundUp && (shares * total.amount) / total.shares < amount) {\n                shares = shares + 1;\n            }\n        }\n    }\n\n    function toAmount(\n        Structs.Vault memory total,\n        uint256 shares,\n        bool roundUp\n    ) internal pure returns (uint256 amount) {\n        if(total.shares == 0) {\n            amount = shares;\n        } else {\n            amount = (shares * total.amount) / total.shares;\n            if (roundUp && (amount * total.shares) / total.amount < shares) {\n                amount = amount + 1;\n            }\n        }\n    }\n}"},"contracts/NFTPledging.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport {TokenSupporter} from \"./TokenSupporter.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"./interfaces/Structs.sol\";\n\ncontract NFTPledging is TokenSupporter, IERC721Receiver {\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    error InvalidNFT();\n\n    mapping(address user => mapping(address nft => EnumerableSet.UintSet tokenIds)) depositedNFTs;\n\n    function _depositNFT(address nftAddress, uint256 tokenId) internal {\n        allowedToken(nftAddress);\n        IERC721(nftAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            tokenId\n        );\n        depositedNFTs[msg.sender][nftAddress].add(tokenId);\n    }\n\n    function _withdrawNft(\n        address owner,\n        address recipient,\n        address nftAddress,\n        uint256 tokenId\n    ) internal {\n        if (!hasDepositedNFT(owner, nftAddress, tokenId)) revert InvalidNFT();\n        depositedNFTs[owner][nftAddress].remove(tokenId);\n        IERC721(nftAddress).safeTransferFrom(\n            address(this), recipient, tokenId\n        );\n    }\n\n    function hasDepositedNFT(\n        address owner,\n        address nftAddress,\n        uint256 tokenId\n    ) public view returns (bool) {\n        return depositedNFTs[owner][nftAddress].contains(tokenId);\n    }\n\n    function getDepositedNFT(\n        address owner,\n        address nftAddress\n    ) public view returns (uint256[] memory) {\n        return depositedNFTs[owner][nftAddress].values();\n    }\n\n    function getDepositedNFTCount(address owner, address nftAddress)\n        public view returns (uint256) {\n            return depositedNFTs[owner][nftAddress].length();\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n}"},"contracts/TokenSupporter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./libraries/ChainlinkOracle.sol\";\nimport \"./interfaces/Structs.sol\";\nimport \"./utils/Constants.sol\";\n\ncontract TokenSupporter is Constants {\n    using ChainlinkOracle for AggregatorV3Interface;\n\n    address[] internal supportedERC20s;\n    address[] internal supportedNFTs;\n\n    mapping(address => Structs.SupportedToken) internal supportedToken;\n\n    error TokenNotSupported();\n    error AlreadySupported();\n    error InvalidTokenType(Structs.TokenType tokenType);\n\n    event AddSupportedToken(address token, Structs.TokenType tokenType);\n\n    function addSupportedToken(\n        address token,\n        address priceFeed,\n        Structs.TokenType tokenType\n    ) internal {\n        if (supportedToken[token].supported) revert AlreadySupported();\n        if (uint(tokenType) > 1) revert InvalidTokenType(tokenType);\n\n        supportedToken[token].usdPriceFeed = priceFeed;\n        supportedToken[token].tokenType = tokenType;\n        supportedToken[token].supported = true;\n\n        if (tokenType == Structs.TokenType.ERC721) {\n            supportedNFTs.push(token);\n        } else {\n            supportedERC20s.push(token);\n        }\n\n        emit AddSupportedToken(token, tokenType);\n    }\n\n    function getTokenPrice(address token) public view returns (uint256 price) {\n        if (!supportedToken[token].supported) return 0;\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            supportedToken[token].usdPriceFeed\n        );\n        price = priceFeed.getPrice();\n    }\n\n    function allowedToken(address token) internal view {\n        if (!supportedToken[token].supported) revert TokenNotSupported();\n    }\n}"},"contracts/utils/Constants.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nabstract contract Constants {\n    uint256 public constant BPS = 1e5; //Basis point, 1e5 means 5 decimals precision\n    uint256 public constant PRECISION = 1e18; //18 decimals \n    uint256 internal constant MIN_HEALTH_FACTOR = 1e18;\n    uint256 internal constant FULL_LIQUIDATION_THRESHOLD = 0.9e18;\n    uint256 internal constant LIQUIDATION_THRESHOLD = 8e4; //80%\n    uint256 internal constant DEFAULT_LIQUIDATION_CLOSE = 5e4; //50%\n    uint256 internal constant LIQUIDATION_REWARD = 5e3; //5%\n\n    uint256 internal constant NFT_LIQUIDATION_DISCOUNT = 1e4; //10%\n    uint256 internal constant NFT_WARNING_DELAY = 24 hours;\n    uint256 internal constant NFT_LIQUIDATOR_DELAY = 5 minutes;\n\n    //default interest if borrow = 0\n    uint64 internal constant DEFAULT_INTEREST = 158247046; //0.5% annual rate 1e18 precision \n    uint256 internal constant MAX_PROTOCOL_FEE = 0.5e4;\n    uint256 public constant BLOCKS_PER_YEAR = 2102400; //Average ethereum blocks per year\n}\n"},"contracts/utils/Pausing.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Pausing is Ownable {\n\n    bool public globalPaused = true;\n\n    mapping (address vaulToken => bool status) vaultPaused;\n\n    error isPaused();\n    error isNotPaused();\n\n    event SystemPaused(bool state);\n    event VaultPaused(address vault, bool state);\n\n    function WhenPaused(address vault) internal view {\n        if (!globalPaused && !vaultPaused[vault]) revert isNotPaused();\n    }\n\n    function WhenNotPaused(address vault) internal view {\n        if (pausedStatus(vault)) revert isPaused();\n    }\n\n    function pausedStatus(address vault) public view returns (bool) {\n        return globalPaused || vaultPaused[vault];\n    }\n\n    function setPausedStatus(address vault, bool status) external onlyOwner {\n        if (vault == address(0)) {\n            // pass address(0) to pause/unpause all vaults\n            globalPaused = status;\n            emit SystemPaused(status);\n        } else {\n            vaultPaused[vault] = status;\n            emit VaultPaused(vault, status);\n        }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"301:8:0","nodeType":"VariableDeclaration","scope":31,"src":"294:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"294:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:25:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"344:7:0","nodeType":"VariableDeclaration","scope":31,"src":"337:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"337:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"360:6:0","nodeType":"VariableDeclaration","scope":31,"src":"353:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"353:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"376:9:0","nodeType":"VariableDeclaration","scope":31,"src":"368:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"395:9:0","nodeType":"VariableDeclaration","scope":31,"src":"387:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"413:15:0","nodeType":"VariableDeclaration","scope":31,"src":"406:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"406:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"336:93:0"},"scope":45,"src":"267:163:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"443:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"458:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"503:7:0","nodeType":"VariableDeclaration","scope":44,"src":"496:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"496:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"519:6:0","nodeType":"VariableDeclaration","scope":44,"src":"512:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"512:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"535:9:0","nodeType":"VariableDeclaration","scope":44,"src":"527:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"554:9:0","nodeType":"VariableDeclaration","scope":44,"src":"546:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"572:15:0","nodeType":"VariableDeclaration","scope":44,"src":"565:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"495:93:0"},"scope":45,"src":"434:155:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:534:0","usedErrors":[],"usedEvents":[]}],"src":"32:560:0"},"id":0},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1601],"Ownable":[158]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":159,"sourceUnit":1602,"src":"127:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":50,"name":"Context","nameLocations":["683:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1601,"src":"683:7:1"},"id":51,"nodeType":"InheritanceSpecifier","src":"683:7:1"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"159:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":158,"linearizedBaseContracts":[158,1601],"name":"Ownable","nameLocation":"672:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":53,"mutability":"mutable","name":"_owner","nameLocation":"713:6:1","nodeType":"VariableDeclaration","scope":158,"src":"697:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":59,"name":"OwnershipTransferred","nameLocation":"732:20:1","nodeType":"EventDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:1","nodeType":"VariableDeclaration","scope":59,"src":"753:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:1","nodeType":"VariableDeclaration","scope":59,"src":"784:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:1"},"src":"726:84:1"},{"body":{"id":68,"nodeType":"Block","src":"926:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":64,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"955:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":63,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"936:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"936:32:1"}]},"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"816:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":69,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"923:2:1"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"926:0:1"},"scope":158,"src":"912:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1084:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":72,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1094:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":74,"nodeType":"ExpressionStatement","src":"1094:13:1"},{"id":75,"nodeType":"PlaceholderStatement","src":"1117:1:1"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"981:77:1","text":" @dev Throws if called by any account other than the owner."},"id":77,"name":"onlyOwner","nameLocation":"1072:9:1","nodeType":"ModifierDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1081:2:1"},"src":"1063:62:1","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1256:30:1","statements":[{"expression":{"id":83,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1273:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":82,"id":84,"nodeType":"Return","src":"1266:13:1"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1131:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":86,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:1","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"1215:2:1"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1247:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:1"},"scope":158,"src":"1201:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":99,"nodeType":"Block","src":"1404:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":91,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1422:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":93,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1433:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"1414:68:1"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1292:62:1","text":" @dev Throws if the sender is not the owner."},"id":100,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"1379:2:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1404:0:1"},"scope":158,"src":"1359:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"1878:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:1","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":106,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1888:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1888:30:1"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1495:324:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":114,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["1868:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1868:9:1"},"nodeType":"ModifierInvocation","src":"1868:9:1"}],"name":"renounceOwnership","nameLocation":"1833:17:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"1850:2:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"1878:0:1"},"scope":158,"src":"1824:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":136,"nodeType":"Block","src":"2144:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2162:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:1","typeDescriptions":{}}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"2154:73:1"},{"expression":{"arguments":[{"id":133,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2256:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":132,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2237:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":135,"nodeType":"ExpressionStatement","src":"2237:28:1"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"1931:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":137,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nameLocations":["2134:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2134:9:1"},"nodeType":"ModifierInvocation","src":"2134:9:1"}],"name":"transferOwnership","nameLocation":"2083:17:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:1","nodeType":"VariableDeclaration","scope":137,"src":"2101:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:1"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"2144:0:1"},"scope":158,"src":"2074:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":156,"nodeType":"Block","src":"2489:124:1","statements":[{"assignments":[144],"declarations":[{"constant":false,"id":144,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:1","nodeType":"VariableDeclaration","scope":156,"src":"2499:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":146,"initialValue":{"id":145,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2518:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:1"},{"expression":{"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":147,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2534:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":148,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2543:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":150,"nodeType":"ExpressionStatement","src":"2534:17:1"},{"eventCall":{"arguments":[{"id":152,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2587:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":153,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2597:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":151,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"2566:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"EmitStatement","src":"2561:45:1"}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2278:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:1","nodeType":"VariableDeclaration","scope":157,"src":"2454:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:1"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"2489:0:1"},"scope":158,"src":"2426:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":159,"src":"654:1961:1","usedErrors":[],"usedEvents":[59]}],"src":"102:2514:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[295],"IERC20Errors":[200],"IERC721Errors":[248]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"138:139:2","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":200,"linearizedBaseContracts":[200],"name":"IERC20Errors","nameLocation":"288:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"307:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":170,"name":"ERC20InsufficientBalance","nameLocation":"627:24:2","nodeType":"ErrorDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"sender","nameLocation":"660:6:2","nodeType":"VariableDeclaration","scope":170,"src":"652:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"balance","nameLocation":"676:7:2","nodeType":"VariableDeclaration","scope":170,"src":"668:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"needed","nameLocation":"693:6:2","nodeType":"VariableDeclaration","scope":170,"src":"685:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:2"},"src":"621:80:2"},{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"707:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":175,"name":"ERC20InvalidSender","nameLocation":"870:18:2","nodeType":"ErrorDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"sender","nameLocation":"897:6:2","nodeType":"VariableDeclaration","scope":175,"src":"889:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:2"},"src":"864:41:2"},{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"911:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":180,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:2","nodeType":"ErrorDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:2","nodeType":"VariableDeclaration","scope":180,"src":"1102:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:2"},"src":"1075:45:2"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"1126:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":189,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"spender","nameLocation":"1517:7:2","nodeType":"VariableDeclaration","scope":189,"src":"1509:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:2","nodeType":"VariableDeclaration","scope":189,"src":"1526:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"needed","nameLocation":"1553:6:2","nodeType":"VariableDeclaration","scope":189,"src":"1545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:2"},"src":"1476:85:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1567:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":194,"name":"ERC20InvalidApprover","nameLocation":"1752:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"approver","nameLocation":"1781:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:2"},"src":"1746:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1797:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":199,"name":"ERC20InvalidSpender","nameLocation":"2003:19:2","nodeType":"ErrorDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"2031:7:2","nodeType":"VariableDeclaration","scope":199,"src":"2023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:2"},"src":"1997:43:2"}],"scope":296,"src":"278:1764:2","usedErrors":[170,175,180,189,194,199],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2044:141:2","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":248,"linearizedBaseContracts":[248],"name":"IERC721Errors","nameLocation":"2196:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"2216:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":206,"name":"ERC721InvalidOwner","nameLocation":"2446:18:2","nodeType":"ErrorDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"owner","nameLocation":"2473:5:2","nodeType":"VariableDeclaration","scope":206,"src":"2465:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:2"},"src":"2440:40:2"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2486:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":211,"name":"ERC721NonexistentToken","nameLocation":"2629:22:2","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:2","nodeType":"VariableDeclaration","scope":211,"src":"2652:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:2"},"src":"2623:46:2"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"2675:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":220,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"sender","nameLocation":"3004:6:2","nodeType":"VariableDeclaration","scope":220,"src":"2996:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:2","nodeType":"VariableDeclaration","scope":220,"src":"3012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"3037:5:2","nodeType":"VariableDeclaration","scope":220,"src":"3029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:2"},"src":"2969:75:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"3050:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":225,"name":"ERC721InvalidSender","nameLocation":"3213:19:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"sender","nameLocation":"3241:6:2","nodeType":"VariableDeclaration","scope":225,"src":"3233:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:2"},"src":"3207:42:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"3255:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":230,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:2","nodeType":"ErrorDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:2","nodeType":"VariableDeclaration","scope":230,"src":"3447:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:2"},"src":"3419:46:2"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"3471:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":237,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:2","nodeType":"ErrorDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"operator","nameLocation":"3764:8:2","nodeType":"VariableDeclaration","scope":237,"src":"3756:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:2","nodeType":"VariableDeclaration","scope":237,"src":"3774:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:2"},"src":"3723:68:2"},{"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3797:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":242,"name":"ERC721InvalidApprover","nameLocation":"3982:21:2","nodeType":"ErrorDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"approver","nameLocation":"4012:8:2","nodeType":"VariableDeclaration","scope":242,"src":"4004:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:2"},"src":"3976:46:2"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"4028:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":247,"name":"ERC721InvalidOperator","nameLocation":"4236:21:2","nodeType":"ErrorDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"operator","nameLocation":"4266:8:2","nodeType":"VariableDeclaration","scope":247,"src":"4258:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:2"},"src":"4230:46:2"}],"scope":296,"src":"2186:2092:2","usedErrors":[206,211,220,225,230,237,242,247],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"4280:143:2","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295],"name":"IERC1155Errors","nameLocation":"4434:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4455:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":260,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:2","nodeType":"ErrorDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"4862:6:2","nodeType":"VariableDeclaration","scope":260,"src":"4854:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"balance","nameLocation":"4878:7:2","nodeType":"VariableDeclaration","scope":260,"src":"4870:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"needed","nameLocation":"4895:6:2","nodeType":"VariableDeclaration","scope":260,"src":"4887:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:2","nodeType":"VariableDeclaration","scope":260,"src":"4903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:2"},"src":"4821:99:2"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"4926:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":265,"name":"ERC1155InvalidSender","nameLocation":"5089:20:2","nodeType":"ErrorDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"sender","nameLocation":"5118:6:2","nodeType":"VariableDeclaration","scope":265,"src":"5110:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:2"},"src":"5083:43:2"},{"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"5132:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":270,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:2","nodeType":"ErrorDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:2","nodeType":"VariableDeclaration","scope":270,"src":"5325:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:2"},"src":"5296:47:2"},{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"5349:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":277,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:2","nodeType":"ErrorDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"operator","nameLocation":"5653:8:2","nodeType":"VariableDeclaration","scope":277,"src":"5645:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"owner","nameLocation":"5671:5:2","nodeType":"VariableDeclaration","scope":277,"src":"5663:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:2"},"src":"5610:68:2"},{"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"5684:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":282,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:2","nodeType":"ErrorDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"approver","nameLocation":"5900:8:2","nodeType":"VariableDeclaration","scope":282,"src":"5892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:2"},"src":"5863:47:2"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"5916:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":287,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:2","nodeType":"ErrorDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"operator","nameLocation":"6155:8:2","nodeType":"VariableDeclaration","scope":287,"src":"6147:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:2"},"src":"6118:47:2"},{"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"6171:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":294,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:2","nodeType":"ErrorDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:2","nodeType":"VariableDeclaration","scope":294,"src":"6488:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:2","nodeType":"VariableDeclaration","scope":294,"src":"6507:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:2"},"src":"6456:73:2"}],"scope":296,"src":"4424:2107:2","usedErrors":[260,265,270,277,282,287,294],"usedEvents":[]}],"src":"112:6420:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[373]},"id":374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"132:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":373,"linearizedBaseContracts":[373],"name":"IERC20","nameLocation":"213:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"226:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":307,"name":"Transfer","nameLocation":"395:8:3","nodeType":"EventDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:3","nodeType":"VariableDeclaration","scope":307,"src":"404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:3","nodeType":"VariableDeclaration","scope":307,"src":"426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:3","nodeType":"VariableDeclaration","scope":307,"src":"446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:3"},"src":"389:72:3"},{"anonymous":false,"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"467:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":316,"name":"Approval","nameLocation":"626:8:3","nodeType":"EventDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:3","nodeType":"VariableDeclaration","scope":316,"src":"635:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:3","nodeType":"VariableDeclaration","scope":316,"src":"658:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:3","nodeType":"VariableDeclaration","scope":316,"src":"683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:3"},"src":"620:78:3"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"704:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":322,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":322,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":373,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"835:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":330,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:3","nodeType":"FunctionDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"account","nameLocation":"938:7:3","nodeType":"VariableDeclaration","scope":330,"src":"930:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:3"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:3"},"scope":373,"src":"911:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"985:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":340,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:3","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"to","nameLocation":"1229:2:3","nodeType":"VariableDeclaration","scope":340,"src":"1221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"value","nameLocation":"1241:5:3","nodeType":"VariableDeclaration","scope":340,"src":"1233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:3"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"1266:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":337,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:3"},"scope":373,"src":"1203:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"1278:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":350,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:3","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"owner","nameLocation":"1574:5:3","nodeType":"VariableDeclaration","scope":350,"src":"1566:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"spender","nameLocation":"1589:7:3","nodeType":"VariableDeclaration","scope":350,"src":"1581:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:3"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":350,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:3"},"scope":373,"src":"1547:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"1636:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":360,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:3","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"spender","nameLocation":"2333:7:3","nodeType":"VariableDeclaration","scope":360,"src":"2325:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"value","nameLocation":"2350:5:3","nodeType":"VariableDeclaration","scope":360,"src":"2342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:3"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"2375:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":357,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:3"},"scope":373,"src":"2308:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"2387:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":372,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:3","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"from","nameLocation":"2719:4:3","nodeType":"VariableDeclaration","scope":372,"src":"2711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"to","nameLocation":"2733:2:3","nodeType":"VariableDeclaration","scope":372,"src":"2725:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"value","nameLocation":"2745:5:3","nodeType":"VariableDeclaration","scope":372,"src":"2737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:3"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"2770:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":369,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:3"},"scope":373,"src":"2689:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":374,"src":"203:2575:3","usedErrors":[],"usedEvents":[307,316]}],"src":"106:2673:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[373],"IERC20Metadata":[399]},"id":400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":375,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":400,"sourceUnit":374,"src":"151:37:4","symbolAliases":[{"foreign":{"id":376,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":379,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"305:6:4"},"id":380,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"190:86:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":399,"linearizedBaseContracts":[399,373],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":386,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":383,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":399,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":392,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":389,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":399,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":398,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":395,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":399,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":400,"src":"277:405:4","usedErrors":[],"usedEvents":[307,316]}],"src":"125:558:4"},"id":4},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1601],"ERC165":[1880],"ERC721":[1408],"IERC165":[1892],"IERC721":[1525],"IERC721Errors":[248],"IERC721Metadata":[1571],"IERC721Receiver":[1543],"Strings":[1856]},"id":1409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1409,"sourceUnit":1526,"src":"133:38:5","symbolAliases":[{"foreign":{"id":402,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"141:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1409,"sourceUnit":1544,"src":"172:54:5","symbolAliases":[{"foreign":{"id":404,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"180:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1409,"sourceUnit":1572,"src":"227:65:5","symbolAliases":[{"foreign":{"id":406,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"235:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1409,"sourceUnit":1602,"src":"293:48:5","symbolAliases":[{"foreign":{"id":408,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"301:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1409,"sourceUnit":1857,"src":"342:48:5","symbolAliases":[{"foreign":{"id":410,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"350:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1409,"sourceUnit":1881,"src":"391:69:5","symbolAliases":[{"foreign":{"id":412,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"399:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":413,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"408:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1409,"sourceUnit":296,"src":"461:66:5","symbolAliases":[{"foreign":{"id":415,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"469:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":418,"name":"Context","nameLocations":["804:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1601,"src":"804:7:5"},"id":419,"nodeType":"InheritanceSpecifier","src":"804:7:5"},{"baseName":{"id":420,"name":"ERC165","nameLocations":["813:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"813:6:5"},"id":421,"nodeType":"InheritanceSpecifier","src":"813:6:5"},{"baseName":{"id":422,"name":"IERC721","nameLocations":["821:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1525,"src":"821:7:5"},"id":423,"nodeType":"InheritanceSpecifier","src":"821:7:5"},{"baseName":{"id":424,"name":"IERC721Metadata","nameLocations":["830:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1571,"src":"830:15:5"},"id":425,"nodeType":"InheritanceSpecifier","src":"830:15:5"},{"baseName":{"id":426,"name":"IERC721Errors","nameLocations":["847:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"847:13:5"},"id":427,"nodeType":"InheritanceSpecifier","src":"847:13:5"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"529:246:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1408,"linearizedBaseContracts":[1408,248,1571,1525,1880,1892,1601],"name":"ERC721","nameLocation":"794:6:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":430,"libraryName":{"id":428,"name":"Strings","nameLocations":["873:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1856,"src":"873:7:5"},"nodeType":"UsingForDirective","src":"867:26:5","typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":432,"mutability":"mutable","name":"_name","nameLocation":"932:5:5","nodeType":"VariableDeclaration","scope":1408,"src":"917:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"917:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":434,"mutability":"mutable","name":"_symbol","nameLocation":"979:7:5","nodeType":"VariableDeclaration","scope":1408,"src":"964:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":438,"mutability":"mutable","name":"_owners","nameLocation":"1037:7:5","nodeType":"VariableDeclaration","scope":1408,"src":"993:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":437,"keyName":"tokenId","keyNameLocation":"1009:7:5","keyType":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"993:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":442,"mutability":"mutable","name":"_balances","nameLocation":"1093:9:5","nodeType":"VariableDeclaration","scope":1408,"src":"1051:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":441,"keyName":"owner","keyNameLocation":"1067:5:5","keyType":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1051:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":446,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1153:15:5","nodeType":"VariableDeclaration","scope":1408,"src":"1109:59:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":445,"keyName":"tokenId","keyNameLocation":"1125:7:5","keyType":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":452,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1243:18:5","nodeType":"VariableDeclaration","scope":1408,"src":"1175:86:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":451,"keyName":"owner","keyNameLocation":"1191:5:5","keyType":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1175:59:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":450,"keyName":"operator","keyNameLocation":"1216:8:5","keyType":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":449,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":468,"nodeType":"Block","src":"1437:57:5","statements":[{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":460,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1447:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":461,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"1455:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1447:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":463,"nodeType":"ExpressionStatement","src":"1447:13:5"},{"expression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":464,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1470:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":465,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"1480:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1470:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":467,"nodeType":"ExpressionStatement","src":"1470:17:5"}]},"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"1268:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":469,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"name_","nameLocation":"1407:5:5","nodeType":"VariableDeclaration","scope":469,"src":"1393:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":454,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"symbol_","nameLocation":"1428:7:5","nodeType":"VariableDeclaration","scope":469,"src":"1414:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"1414:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1392:44:5"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"1437:0:5"},"scope":1408,"src":"1381:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1879,1891],"body":{"id":499,"nodeType":"Block","src":"1669:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"1698:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":482,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"1718:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1525_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1525_$","typeString":"type(contract IERC721)"}],"id":481,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1713:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1525","typeString":"type(contract IERC721)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1727:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1713:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1698:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"1754:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":488,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1774:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1571_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1571_$","typeString":"type(contract IERC721Metadata)"}],"id":487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1571","typeString":"type(contract IERC721Metadata)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1769:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1754:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":495,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"1842:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":493,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1408_$","typeString":"type(contract super ERC721)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"1818:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":479,"id":498,"nodeType":"Return","src":"1679:175:5"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"1500:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1570:17:5","nodeType":"FunctionDefinition","overrides":{"id":476,"nodeType":"OverrideSpecifier","overrides":[{"id":474,"name":"ERC165","nameLocations":["1637:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1880,"src":"1637:6:5"},{"id":475,"name":"IERC165","nameLocations":["1645:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"1645:7:5"}],"src":"1628:25:5"},"parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"interfaceId","nameLocation":"1595:11:5","nodeType":"VariableDeclaration","scope":500,"src":"1588:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":471,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1588:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1587:20:5"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"1663:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:6:5"},"scope":1408,"src":"1561:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1450],"body":{"id":527,"nodeType":"Block","src":"1992:136:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":508,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2006:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2015:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:5","typeDescriptions":{}}},"id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":522,"nodeType":"IfStatement","src":"2002:87:5","trueBody":{"id":521,"nodeType":"Block","src":"2027:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:5","typeDescriptions":{}}},"id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":514,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"2048:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"RevertStatement","src":"2041:37:5"}]}},{"expression":{"baseExpression":{"id":523,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"2105:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":525,"indexExpression":{"id":524,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2115:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":507,"id":526,"nodeType":"Return","src":"2098:23:5"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"1867:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":528,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1929:9:5","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"owner","nameLocation":"1947:5:5","nodeType":"VariableDeclaration","scope":528,"src":"1939:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:15:5"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"1983:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:5"},"scope":1408,"src":"1920:208:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1458],"body":{"id":540,"nodeType":"Block","src":"2257:46:5","statements":[{"expression":{"arguments":[{"id":537,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2288:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":536,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2274:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":535,"id":539,"nodeType":"Return","src":"2267:29:5"}]},"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"2134:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2194:7:5","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"tokenId","nameLocation":"2210:7:5","nodeType":"VariableDeclaration","scope":541,"src":"2202:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:17:5"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"2248:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2247:9:5"},"scope":1408,"src":"2185:118:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1556],"body":{"id":549,"nodeType":"Block","src":"2425:29:5","statements":[{"expression":{"id":547,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2442:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":546,"id":548,"nodeType":"Return","src":"2435:12:5"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"2309:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":550,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2374:4:5","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"2378:2:5"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"2410:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":544,"name":"string","nodeType":"ElementaryTypeName","src":"2410:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2409:15:5"},"scope":1408,"src":"2365:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1562],"body":{"id":558,"nodeType":"Block","src":"2580:31:5","statements":[{"expression":{"id":556,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2597:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":555,"id":557,"nodeType":"Return","src":"2590:14:5"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"2460:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2527:6:5","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"2533:2:5"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"2565:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":553,"name":"string","nodeType":"ElementaryTypeName","src":"2565:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2564:15:5"},"scope":1408,"src":"2518:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1570],"body":{"id":594,"nodeType":"Block","src":"2756:176:5","statements":[{"expression":{"arguments":[{"id":568,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2780:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":567,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2766:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":570,"nodeType":"ExpressionStatement","src":"2766:22:5"},{"assignments":[572],"declarations":[{"constant":false,"id":572,"mutability":"mutable","name":"baseURI","nameLocation":"2813:7:5","nodeType":"VariableDeclaration","scope":594,"src":"2799:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":571,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":575,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":573,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"2823:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2799:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":578,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2856:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":576,"name":"bytes","nodeType":"ElementaryTypeName","src":"2850:5:5","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:6:5","memberName":"length","nodeType":"MemberAccess","src":"2850:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2850:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2850:75:5","trueExpression":{"arguments":[{"id":586,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2892:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":587,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2901:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1669,"src":"2901:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2878:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":583,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:5","typeDescriptions":{}}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2878:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2878:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":566,"id":593,"nodeType":"Return","src":"2843:82:5"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"2617:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":595,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2686:8:5","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"2703:7:5","nodeType":"VariableDeclaration","scope":595,"src":"2695:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:17:5"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"2741:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":564,"name":"string","nodeType":"ElementaryTypeName","src":"2741:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2740:15:5"},"scope":1408,"src":"2677:255:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":603,"nodeType":"Block","src":"3240:26:5","statements":[{"expression":{"hexValue":"","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":600,"id":602,"nodeType":"Return","src":"3250:9:5"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"2938:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":604,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3183:8:5","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"3191:2:5"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":604,"src":"3225:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":598,"name":"string","nodeType":"ElementaryTypeName","src":"3225:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3224:15:5"},"scope":1408,"src":"3174:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1498],"body":{"id":619,"nodeType":"Block","src":"3384:52:5","statements":[{"expression":{"arguments":[{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"3403:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3407:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":615,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3416:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":612,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1211,1277],"referencedDeclaration":1211,"src":"3394:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":618,"nodeType":"ExpressionStatement","src":"3394:35:5"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"3272:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":620,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3332:7:5","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"to","nameLocation":"3348:2:5","nodeType":"VariableDeclaration","scope":620,"src":"3340:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:5","nodeType":"VariableDeclaration","scope":620,"src":"3352:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:29:5"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"3384:0:5"},"scope":1408,"src":"3323:113:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1514],"body":{"id":636,"nodeType":"Block","src":"3573:78:5","statements":[{"expression":{"arguments":[{"id":629,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"3597:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":628,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3583:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":631,"nodeType":"ExpressionStatement","src":"3583:22:5"},{"expression":{"arguments":[{"id":633,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"3636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":632,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3623:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":627,"id":635,"nodeType":"Return","src":"3616:28:5"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"3442:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":637,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3506:11:5","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:5","nodeType":"VariableDeclaration","scope":637,"src":"3518:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3517:17:5"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":637,"src":"3564:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:9:5"},"scope":1408,"src":"3497:154:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1506],"body":{"id":652,"nodeType":"Block","src":"3793:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":646,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3822:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":648,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3836:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"3846:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":645,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"3803:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"ExpressionStatement","src":"3803:52:5"}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"3657:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":653,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3727:17:5","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"operator","nameLocation":"3753:8:5","nodeType":"VariableDeclaration","scope":653,"src":"3745:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"approved","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":653,"src":"3763:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":641,"name":"bool","nodeType":"ElementaryTypeName","src":"3763:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3744:33:5"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"3793:0:5"},"scope":1408,"src":"3718:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1524],"body":{"id":669,"nodeType":"Block","src":"4022:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":663,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"4039:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":665,"indexExpression":{"id":664,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"4058:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":667,"indexExpression":{"id":666,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4065:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":662,"id":668,"nodeType":"Return","src":"4032:42:5"}]},"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"3868:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":670,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3937:16:5","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"owner","nameLocation":"3962:5:5","nodeType":"VariableDeclaration","scope":670,"src":"3954:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"3954:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"operator","nameLocation":"3977:8:5","nodeType":"VariableDeclaration","scope":670,"src":"3969:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3953:33:5"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"4016:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:5"},"scope":1408,"src":"3928:153:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1490],"body":{"id":715,"nodeType":"Block","src":"4223:498:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"4237:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:5","typeDescriptions":{}}},"id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4237:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"IfStatement","src":"4233:87:5","trueBody":{"id":693,"nodeType":"Block","src":"4255:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4298:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:5","typeDescriptions":{}}},"id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":686,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4276:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"RevertStatement","src":"4269:40:5"}]}},{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"previousOwner","nameLocation":"4546:13:5","nodeType":"VariableDeclaration","scope":715,"src":"4538:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":703,"initialValue":{"arguments":[{"id":698,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"4570:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4574:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":700,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"4583:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":697,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4562:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:58:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"4610:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"4627:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":714,"nodeType":"IfStatement","src":"4606:109:5","trueBody":{"id":713,"nodeType":"Block","src":"4633:82:5","statements":[{"errorCall":{"arguments":[{"id":708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"4675:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4681:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":710,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"4690:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":707,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"4654:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"RevertStatement","src":"4647:57:5"}]}}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"4087:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":716,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4152:12:5","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"from","nameLocation":"4173:4:5","nodeType":"VariableDeclaration","scope":716,"src":"4165:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"to","nameLocation":"4187:2:5","nodeType":"VariableDeclaration","scope":716,"src":"4179:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"tokenId","nameLocation":"4199:7:5","nodeType":"VariableDeclaration","scope":716,"src":"4191:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4164:43:5"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"4223:0:5"},"scope":1408,"src":"4143:578:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1480],"body":{"id":733,"nodeType":"Block","src":"4863:56:5","statements":[{"expression":{"arguments":[{"id":727,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4890:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":728,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4896:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":729,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4900:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":726,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[734,760],"referencedDeclaration":760,"src":"4873:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"4873:39:5"}]},"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"4727:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":734,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4796:16:5","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"4821:4:5","nodeType":"VariableDeclaration","scope":734,"src":"4813:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"4835:2:5","nodeType":"VariableDeclaration","scope":734,"src":"4827:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"tokenId","nameLocation":"4847:7:5","nodeType":"VariableDeclaration","scope":734,"src":"4839:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:43:5"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[],"src":"4863:0:5"},"scope":1408,"src":"4787:132:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1470],"body":{"id":759,"nodeType":"Block","src":"5088:105:5","statements":[{"expression":{"arguments":[{"id":747,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5111:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5117:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5121:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":746,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5098:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"ExpressionStatement","src":"5098:31:5"},{"expression":{"arguments":[{"id":753,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5162:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5168:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5172:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":756,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5181:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":752,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5139:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"5139:47:5"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"4925:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":760,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4994:16:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"from","nameLocation":"5019:4:5","nodeType":"VariableDeclaration","scope":760,"src":"5011:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"to","nameLocation":"5033:2:5","nodeType":"VariableDeclaration","scope":760,"src":"5025:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"tokenId","nameLocation":"5045:7:5","nodeType":"VariableDeclaration","scope":760,"src":"5037:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"data","nameLocation":"5067:4:5","nodeType":"VariableDeclaration","scope":760,"src":"5054:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":742,"name":"bytes","nodeType":"ElementaryTypeName","src":"5054:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:5"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[],"src":"5088:0:5"},"scope":1408,"src":"4985:208:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":772,"nodeType":"Block","src":"5782:40:5","statements":[{"expression":{"baseExpression":{"id":768,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5799:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":770,"indexExpression":{"id":769,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"5807:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5799:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":767,"id":771,"nodeType":"Return","src":"5792:23:5"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"5199:503:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5716:8:5","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"5733:7:5","nodeType":"VariableDeclaration","scope":773,"src":"5725:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"5725:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5724:17:5"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"5773:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:9:5"},"scope":1408,"src":"5707:115:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":785,"nodeType":"Block","src":"6017:48:5","statements":[{"expression":{"baseExpression":{"id":781,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6034:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":783,"indexExpression":{"id":782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6034:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":780,"id":784,"nodeType":"Return","src":"6027:31:5"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"5828:105:5","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":786,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5947:12:5","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"tokenId","nameLocation":"5968:7:5","nodeType":"VariableDeclaration","scope":786,"src":"5960:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:17:5"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"6008:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:9:5"},"scope":1408,"src":"5938:127:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":821,"nodeType":"Block","src":"6485:163:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6514:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6525:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"6525:7:5","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6514:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6552:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":805,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6561:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":808,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6589:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":809,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6596:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":807,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"6572:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":813,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6621:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":812,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"6608:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":815,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6633:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6608:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:90:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6514:127:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":797,"id":820,"nodeType":"Return","src":"6495:146:5"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"6071:300:5","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6385:13:5","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"owner","nameLocation":"6407:5:5","nodeType":"VariableDeclaration","scope":822,"src":"6399:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"spender","nameLocation":"6422:7:5","nodeType":"VariableDeclaration","scope":822,"src":"6414:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"tokenId","nameLocation":"6439:7:5","nodeType":"VariableDeclaration","scope":822,"src":"6431:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6398:49:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"6479:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"6479:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6478:6:5"},"scope":1408,"src":"6376:272:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":858,"nodeType":"Block","src":"7179:271:5","statements":[{"condition":{"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7193:39:5","subExpression":{"arguments":[{"id":833,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7208:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":834,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7215:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7194:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":857,"nodeType":"IfStatement","src":"7189:255:5","trueBody":{"id":856,"nodeType":"Block","src":"7234:210:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7252:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7261:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:5","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":854,"nodeType":"Block","src":"7350:84:5","statements":[{"errorCall":{"arguments":[{"id":850,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7402:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7411:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":849,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7375:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"RevertStatement","src":"7368:51:5"}]},"id":855,"nodeType":"IfStatement","src":"7248:186:5","trueBody":{"id":848,"nodeType":"Block","src":"7273:71:5","statements":[{"errorCall":{"arguments":[{"id":845,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":844,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7298:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"RevertStatement","src":"7291:38:5"}]}}]}}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"6654:423:5","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":859,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7091:16:5","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"owner","nameLocation":"7116:5:5","nodeType":"VariableDeclaration","scope":859,"src":"7108:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"spender","nameLocation":"7131:7:5","nodeType":"VariableDeclaration","scope":859,"src":"7123:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"7123:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"tokenId","nameLocation":"7148:7:5","nodeType":"VariableDeclaration","scope":859,"src":"7140:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:49:5"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"7179:0:5"},"scope":1408,"src":"7082:368:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":874,"nodeType":"Block","src":"8167:78:5","statements":[{"id":873,"nodeType":"UncheckedBlock","src":"8177:62:5","statements":[{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":867,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"8201:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":869,"indexExpression":{"id":868,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8211:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8201:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"8223:5:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8201:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"8201:27:5"}]}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"7456:631:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8101:16:5","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"account","nameLocation":"8126:7:5","nodeType":"VariableDeclaration","scope":875,"src":"8118:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"8143:5:5","nodeType":"VariableDeclaration","scope":875,"src":"8135:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":863,"name":"uint128","nodeType":"ElementaryTypeName","src":"8135:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8117:32:5"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"8167:0:5"},"scope":1408,"src":"8092:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":964,"nodeType":"Block","src":"8933:700:5","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"from","nameLocation":"8951:4:5","nodeType":"VariableDeclaration","scope":964,"src":"8943:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":892,"initialValue":{"arguments":[{"id":890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"8967:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":889,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8958:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9035:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9051:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:5","typeDescriptions":{}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9035:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":906,"nodeType":"IfStatement","src":"9031:86:5","trueBody":{"id":905,"nodeType":"Block","src":"9055:62:5","statements":[{"expression":{"arguments":[{"id":900,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9086:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9092:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"9098:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":899,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"9069:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"ExpressionStatement","src":"9069:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9161:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:5","typeDescriptions":{}}},"id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9161:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":934,"nodeType":"IfStatement","src":"9157:256:5","trueBody":{"id":933,"nodeType":"Block","src":"9181:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:5","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"9298:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:5","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9319:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":913,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1211,1277],"referencedDeclaration":1277,"src":"9277:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":925,"nodeType":"ExpressionStatement","src":"9277:48:5"},{"id":932,"nodeType":"UncheckedBlock","src":"9340:63:5","statements":[{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":926,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"9368:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":928,"indexExpression":{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9378:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9368:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9387:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9368:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"9368:20:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9427:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9441:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9433:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:5","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9433:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9427:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":949,"nodeType":"IfStatement","src":"9423:107:5","trueBody":{"id":948,"nodeType":"Block","src":"9445:85:5","statements":[{"id":947,"nodeType":"UncheckedBlock","src":"9459:61:5","statements":[{"expression":{"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":941,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"9487:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":943,"indexExpression":{"id":942,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9497:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9487:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9487:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":946,"nodeType":"ExpressionStatement","src":"9487:18:5"}]}]}},{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":950,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"9540:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":952,"indexExpression":{"id":951,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"9548:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9540:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":953,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9559:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9540:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":955,"nodeType":"ExpressionStatement","src":"9540:21:5"},{"eventCall":{"arguments":[{"id":957,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9586:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9592:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"9596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":956,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"9577:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"EmitStatement","src":"9572:32:5"},{"expression":{"id":962,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9622:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":886,"id":963,"nodeType":"Return","src":"9615:11:5"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"8251:582:5","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":965,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8847:7:5","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"to","nameLocation":"8863:2:5","nodeType":"VariableDeclaration","scope":965,"src":"8855:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"tokenId","nameLocation":"8875:7:5","nodeType":"VariableDeclaration","scope":965,"src":"8867:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"auth","nameLocation":"8892:4:5","nodeType":"VariableDeclaration","scope":965,"src":"8884:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:43:5"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":965,"src":"8924:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8923:9:5"},"scope":1408,"src":"8838:795:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1014,"nodeType":"Block","src":"10008:274:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"10022:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10028:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:5","typeDescriptions":{}}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10022:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":987,"nodeType":"IfStatement","src":"10018:87:5","trueBody":{"id":986,"nodeType":"Block","src":"10040:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10091:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10083:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:5","typeDescriptions":{}}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10083:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":979,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"10061:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"RevertStatement","src":"10054:40:5"}]}},{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"previousOwner","nameLocation":"10122:13:5","nodeType":"VariableDeclaration","scope":1014,"src":"10114:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"10114:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":998,"initialValue":{"arguments":[{"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"10146:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"10150:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:5","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10159:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":990,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10138:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10114:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"10184:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10201:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:5","typeDescriptions":{}}},"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10184:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1013,"nodeType":"IfStatement","src":"10180:96:5","trueBody":{"id":1012,"nodeType":"Block","src":"10213:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10262:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:5","typeDescriptions":{}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"10234:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"RevertStatement","src":"10227:38:5"}]}}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"9639:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1015,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9964:5:5","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"to","nameLocation":"9978:2:5","nodeType":"VariableDeclaration","scope":1015,"src":"9970:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"9970:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"tokenId","nameLocation":"9990:7:5","nodeType":"VariableDeclaration","scope":1015,"src":"9982:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9969:29:5"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[],"src":"10008:0:5"},"scope":1408,"src":"9955:327:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1029,"nodeType":"Block","src":"10690:43:5","statements":[{"expression":{"arguments":[{"id":1024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"10710:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"10714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10723:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1023,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1030,1056],"referencedDeclaration":1056,"src":"10700:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"10700:26:5"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"10288:340:5","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10642:9:5","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"to","nameLocation":"10660:2:5","nodeType":"VariableDeclaration","scope":1030,"src":"10652:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:5","nodeType":"VariableDeclaration","scope":1030,"src":"10664:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10651:29:5"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"10690:0:5"},"scope":1408,"src":"10633:100:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1055,"nodeType":"Block","src":"11038:98:5","statements":[{"expression":{"arguments":[{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11054:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11058:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1040,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"11048:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"ExpressionStatement","src":"11048:18:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11099:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"11099:7:5","typeDescriptions":{}}},"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11111:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11115:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1052,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11124:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1045,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"11076:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1054,"nodeType":"ExpressionStatement","src":"11076:53:5"}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"10739:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10963:9:5","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"to","nameLocation":"10981:2:5","nodeType":"VariableDeclaration","scope":1056,"src":"10973:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"tokenId","nameLocation":"10993:7:5","nodeType":"VariableDeclaration","scope":1056,"src":"10985:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"10985:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"data","nameLocation":"11015:4:5","nodeType":"VariableDeclaration","scope":1056,"src":"11002:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"11002:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10972:48:5"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"11038:0:5"},"scope":1408,"src":"10954:182:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1088,"nodeType":"Block","src":"11503:186:5","statements":[{"assignments":[1063],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"previousOwner","nameLocation":"11521:13:5","nodeType":"VariableDeclaration","scope":1088,"src":"11513:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"11513:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1075,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11545:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:5","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11545:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11557:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11566:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"11566:7:5","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1064,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11537:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11513:64:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1076,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"11591:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11608:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"11608:7:5","typeDescriptions":{}}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11591:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"nodeType":"IfStatement","src":"11587:96:5","trueBody":{"id":1086,"nodeType":"Block","src":"11620:63:5","statements":[{"errorCall":{"arguments":[{"id":1083,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1082,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"11641:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"RevertStatement","src":"11634:38:5"}]}}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"11142:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11471:5:5","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"tokenId","nameLocation":"11485:7:5","nodeType":"VariableDeclaration","scope":1089,"src":"11477:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11476:17:5"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"11503:0:5"},"scope":1408,"src":"11462:227:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1148,"nodeType":"Block","src":"12084:389:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"12098:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12104:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:5","typeDescriptions":{}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12098:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1113,"nodeType":"IfStatement","src":"12094:87:5","trueBody":{"id":1112,"nodeType":"Block","src":"12116:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12167:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12159:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:5","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1105,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"12137:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"RevertStatement","src":"12130:40:5"}]}},{"assignments":[1115],"declarations":[{"constant":false,"id":1115,"mutability":"mutable","name":"previousOwner","nameLocation":"12198:13:5","nodeType":"VariableDeclaration","scope":1148,"src":"12190:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"12190:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1124,"initialValue":{"arguments":[{"id":1117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"12222:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1118,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12226:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12235:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"12235:7:5","typeDescriptions":{}}},"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1116,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"12214:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12190:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"12260:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"12277:7:5","typeDescriptions":{}}},"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"12362:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1137,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"12379:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12362:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1146,"nodeType":"IfStatement","src":"12358:109:5","trueBody":{"id":1145,"nodeType":"Block","src":"12385:82:5","statements":[{"errorCall":{"arguments":[{"id":1140,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"12427:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1141,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1142,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"12442:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1139,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"12406:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1144,"nodeType":"RevertStatement","src":"12399:57:5"}]}},"id":1147,"nodeType":"IfStatement","src":"12256:211:5","trueBody":{"id":1135,"nodeType":"Block","src":"12289:63:5","statements":[{"errorCall":{"arguments":[{"id":1132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12333:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1131,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"12310:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12310:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1134,"nodeType":"RevertStatement","src":"12303:38:5"}]}}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"11695:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12022:9:5","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"from","nameLocation":"12040:4:5","nodeType":"VariableDeclaration","scope":1149,"src":"12032:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"12032:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"to","nameLocation":"12054:2:5","nodeType":"VariableDeclaration","scope":1149,"src":"12046:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"tokenId","nameLocation":"12066:7:5","nodeType":"VariableDeclaration","scope":1149,"src":"12058:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"12058:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12031:43:5"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"12084:0:5"},"scope":1408,"src":"12013:460:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"13481:53:5","statements":[{"expression":{"arguments":[{"id":1160,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"13505:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"13511:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1162,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"13515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1159,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1167,1193],"referencedDeclaration":1193,"src":"13491:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1165,"nodeType":"ExpressionStatement","src":"13491:36:5"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"12479:922:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13415:13:5","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"from","nameLocation":"13437:4:5","nodeType":"VariableDeclaration","scope":1167,"src":"13429:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"13429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"to","nameLocation":"13451:2:5","nodeType":"VariableDeclaration","scope":1167,"src":"13443:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"tokenId","nameLocation":"13463:7:5","nodeType":"VariableDeclaration","scope":1167,"src":"13455:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"13455:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13428:43:5"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"13481:0:5"},"scope":1408,"src":"13406:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1192,"nodeType":"Block","src":"13873:102:5","statements":[{"expression":{"arguments":[{"id":1180,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13893:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"13899:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"13903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1179,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13883:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13883:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1184,"nodeType":"ExpressionStatement","src":"13883:28:5"},{"expression":{"arguments":[{"id":1186,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13944:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1187,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"13950:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"13954:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1189,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"13963:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1185,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"13921:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"13921:47:5"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"13540:226:5","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13780:13:5","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"from","nameLocation":"13802:4:5","nodeType":"VariableDeclaration","scope":1193,"src":"13794:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"13794:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"to","nameLocation":"13816:2:5","nodeType":"VariableDeclaration","scope":1193,"src":"13808:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"13808:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"tokenId","nameLocation":"13828:7:5","nodeType":"VariableDeclaration","scope":1193,"src":"13820:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"data","nameLocation":"13850:4:5","nodeType":"VariableDeclaration","scope":1193,"src":"13837:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"13837:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13793:62:5"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"13873:0:5"},"scope":1408,"src":"13771:204:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"14488:50:5","statements":[{"expression":{"arguments":[{"id":1204,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"14507:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1205,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"14511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1206,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"14520:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14526:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1203,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1211,1277],"referencedDeclaration":1277,"src":"14498:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14498:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"14498:33:5"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"13981:432:5","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14427:8:5","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"to","nameLocation":"14444:2:5","nodeType":"VariableDeclaration","scope":1211,"src":"14436:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"14436:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"tokenId","nameLocation":"14456:7:5","nodeType":"VariableDeclaration","scope":1211,"src":"14448:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"auth","nameLocation":"14473:4:5","nodeType":"VariableDeclaration","scope":1211,"src":"14465:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"14465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14435:43:5"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"14488:0:5"},"scope":1408,"src":"14418:120:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1276,"nodeType":"Block","src":"14814:568:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14880:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"14893:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14901:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"14901:7:5","typeDescriptions":{}}},"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14901:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14893:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14880:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1269,"nodeType":"IfStatement","src":"14876:460:5","trueBody":{"id":1268,"nodeType":"Block","src":"14913:423:5","statements":[{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"owner","nameLocation":"14935:5:5","nodeType":"VariableDeclaration","scope":1268,"src":"14927:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1236,"initialValue":{"arguments":[{"id":1234,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"14957:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1233,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"14943:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14943:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14927:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"15093:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15109:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"15101:7:5","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15093:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1243,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"15115:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1244,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"15124:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15115:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15132:30:5","subExpression":{"arguments":[{"id":1248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"15150:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"15157:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1247,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"15133:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1258,"nodeType":"IfStatement","src":"15089:142:5","trueBody":{"id":1257,"nodeType":"Block","src":"15164:67:5","statements":[{"errorCall":{"arguments":[{"id":1254,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"15211:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1253,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"15189:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15189:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1256,"nodeType":"RevertStatement","src":"15182:34:5"}]}},{"condition":{"id":1259,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"15249:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1267,"nodeType":"IfStatement","src":"15245:81:5","trueBody":{"id":1266,"nodeType":"Block","src":"15260:66:5","statements":[{"eventCall":{"arguments":[{"id":1261,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"15292:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"15299:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"15303:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"15283:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15283:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1265,"nodeType":"EmitStatement","src":"15278:33:5"}]}}]}},{"expression":{"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1270,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"15346:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1272,"indexExpression":{"id":1271,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"15362:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15346:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1273,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"15373:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15346:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1275,"nodeType":"ExpressionStatement","src":"15346:29:5"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"14544:171:5","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14729:8:5","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"to","nameLocation":"14746:2:5","nodeType":"VariableDeclaration","scope":1277,"src":"14738:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"14738:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"tokenId","nameLocation":"14758:7:5","nodeType":"VariableDeclaration","scope":1277,"src":"14750:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"auth","nameLocation":"14775:4:5","nodeType":"VariableDeclaration","scope":1277,"src":"14767:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"14767:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"emitEvent","nameLocation":"14786:9:5","nodeType":"VariableDeclaration","scope":1277,"src":"14781:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1219,"name":"bool","nodeType":"ElementaryTypeName","src":"14781:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14737:59:5"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"14814:0:5"},"scope":1408,"src":"14720:662:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"15684:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"15698:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:5","typeDescriptions":{}}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15698:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1298,"nodeType":"IfStatement","src":"15694:91:5","trueBody":{"id":1297,"nodeType":"Block","src":"15722:63:5","statements":[{"errorCall":{"arguments":[{"id":1294,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"15765:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1293,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"15743:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"RevertStatement","src":"15736:38:5"}]}},{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1299,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"15794:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1302,"indexExpression":{"id":1300,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"15813:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15794:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1303,"indexExpression":{"id":1301,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"15820:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15794:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1304,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"15832:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15794:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"ExpressionStatement","src":"15794:46:5"},{"eventCall":{"arguments":[{"id":1308,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"15870:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"15877:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1310,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"15887:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1307,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"15855:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"EmitStatement","src":"15850:46:5"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"15388:198:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15600:18:5","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"owner","nameLocation":"15627:5:5","nodeType":"VariableDeclaration","scope":1314,"src":"15619:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"operator","nameLocation":"15642:8:5","nodeType":"VariableDeclaration","scope":1314,"src":"15634:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"approved","nameLocation":"15657:8:5","nodeType":"VariableDeclaration","scope":1314,"src":"15652:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1283,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:48:5"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"15684:0:5"},"scope":1408,"src":"15591:312:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1342,"nodeType":"Block","src":"16210:169:5","statements":[{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"owner","nameLocation":"16228:5:5","nodeType":"VariableDeclaration","scope":1342,"src":"16220:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"16220:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1327,"initialValue":{"arguments":[{"id":1325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"16245:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1324,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"16236:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16236:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16220:33:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"16267:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16284:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16276:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:5","typeDescriptions":{}}},"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16267:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1339,"nodeType":"IfStatement","src":"16263:88:5","trueBody":{"id":1338,"nodeType":"Block","src":"16288:63:5","statements":[{"errorCall":{"arguments":[{"id":1335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"16332:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1334,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"16309:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1337,"nodeType":"RevertStatement","src":"16302:38:5"}]}},{"expression":{"id":1340,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"16367:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1321,"id":1341,"nodeType":"Return","src":"16360:12:5"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"15909:224:5","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1343,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16147:13:5","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"tokenId","nameLocation":"16169:7:5","nodeType":"VariableDeclaration","scope":1343,"src":"16161:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"16161:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16160:17:5"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1343,"src":"16201:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16200:9:5"},"scope":1408,"src":"16138:241:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1406,"nodeType":"Block","src":"17020:680:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"17034:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17037:4:5","memberName":"code","nodeType":"MemberAccess","src":"17034:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17042:6:5","memberName":"length","nodeType":"MemberAccess","src":"17034:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17051:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17034:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1405,"nodeType":"IfStatement","src":"17030:664:5","trueBody":{"id":1404,"nodeType":"Block","src":"17054:640:5","statements":[{"clauses":[{"block":{"id":1384,"nodeType":"Block","src":"17168:162:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"17190:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1374,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"17200:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1543_$","typeString":"type(contract IERC721Receiver)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17216:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1542,"src":"17200:32:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17233:8:5","memberName":"selector","nodeType":"MemberAccess","src":"17200:41:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17190:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1383,"nodeType":"IfStatement","src":"17186:130:5","trueBody":{"id":1382,"nodeType":"Block","src":"17243:73:5","statements":[{"errorCall":{"arguments":[{"id":1379,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"17294:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1378,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"17272:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17272:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1381,"nodeType":"RevertStatement","src":"17265:32:5"}]}}]},"errorName":"","id":1385,"nodeType":"TryCatchClause","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"retval","nameLocation":"17160:6:5","nodeType":"VariableDeclaration","scope":1385,"src":"17153:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1370,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17153:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17152:15:5"},"src":"17144:186:5"},{"block":{"id":1401,"nodeType":"Block","src":"17359:325:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1389,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"17381:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:6:5","memberName":"length","nodeType":"MemberAccess","src":"17381:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17398:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17381:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1399,"nodeType":"Block","src":"17480:190:5","statements":[{"AST":{"nodeType":"YulBlock","src":"17566:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17603:2:5","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"17607:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:5"},"nodeType":"YulFunctionCall","src":"17599:15:5"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"17622:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17616:5:5"},"nodeType":"YulFunctionCall","src":"17616:13:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17592:6:5"},"nodeType":"YulFunctionCall","src":"17592:38:5"},"nodeType":"YulExpressionStatement","src":"17592:38:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1387,"isOffset":false,"isSlot":false,"src":"17607:6:5","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"17622:6:5","valueSize":1}],"id":1398,"nodeType":"InlineAssembly","src":"17557:95:5"}]},"id":1400,"nodeType":"IfStatement","src":"17377:293:5","trueBody":{"id":1397,"nodeType":"Block","src":"17401:73:5","statements":[{"errorCall":{"arguments":[{"id":1394,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"17452:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1393,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"17430:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17430:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"RevertStatement","src":"17423:32:5"}]}}]},"errorName":"","id":1402,"nodeType":"TryCatchClause","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"reason","nameLocation":"17351:6:5","nodeType":"VariableDeclaration","scope":1402,"src":"17338:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1386,"name":"bytes","nodeType":"ElementaryTypeName","src":"17338:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17337:21:5"},"src":"17331:353:5"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1364,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"17109:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17109:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1366,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"17123:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1367,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"17129:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1368,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"17138:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1361,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"17088:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1360,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"17072:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1543_$","typeString":"type(contract IERC721Receiver)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1543","typeString":"contract IERC721Receiver"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17092:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1542,"src":"17072:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:71:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1403,"nodeType":"TryStatement","src":"17068:616:5"}]}}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"16385:528:5","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"16927:22:5","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"from","nameLocation":"16958:4:5","nodeType":"VariableDeclaration","scope":1407,"src":"16950:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"16950:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"to","nameLocation":"16972:2:5","nodeType":"VariableDeclaration","scope":1407,"src":"16964:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"16964:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"tokenId","nameLocation":"16984:7:5","nodeType":"VariableDeclaration","scope":1407,"src":"16976:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"data","nameLocation":"17006:4:5","nodeType":"VariableDeclaration","scope":1407,"src":"16993:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"16993:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16949:62:5"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"17020:0:5"},"scope":1408,"src":"16918:782:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1409,"src":"776:16926:5","usedErrors":[206,211,220,225,230,237,242,247],"usedEvents":[1424,1433,1442]}],"src":"107:17596:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1892],"IERC721":[1525]},"id":1526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1526,"sourceUnit":1893,"src":"134:62:6","symbolAliases":[{"foreign":{"id":1411,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"142:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1414,"name":"IERC165","nameLocations":["287:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"287:7:6"},"id":1415,"nodeType":"InheritanceSpecifier","src":"287:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"198:67:6","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1525,"linearizedBaseContracts":[1525,1892],"name":"IERC721","nameLocation":"276:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"301:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1424,"name":"Transfer","nameLocation":"400:8:6","nodeType":"EventDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:6","nodeType":"VariableDeclaration","scope":1424,"src":"409:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:6","nodeType":"VariableDeclaration","scope":1424,"src":"431:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:6","nodeType":"VariableDeclaration","scope":1424,"src":"451:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:6"},"src":"394:82:6"},{"anonymous":false,"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"482:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1433,"name":"Approval","nameLocation":"587:8:6","nodeType":"EventDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:6","nodeType":"VariableDeclaration","scope":1433,"src":"596:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:6","nodeType":"VariableDeclaration","scope":1433,"src":"619:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:6","nodeType":"VariableDeclaration","scope":1433,"src":"645:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:6"},"src":"581:89:6"},{"anonymous":false,"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"676:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1442,"name":"ApprovalForAll","nameLocation":"804:14:6","nodeType":"EventDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:6","nodeType":"VariableDeclaration","scope":1442,"src":"819:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:6","nodeType":"VariableDeclaration","scope":1442,"src":"842:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:6","nodeType":"VariableDeclaration","scope":1442,"src":"868:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:6"},"src":"798:85:6"},{"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"889:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1450,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:6","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"owner","nameLocation":"997:5:6","nodeType":"VariableDeclaration","scope":1450,"src":"989:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:6"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"balance","nameLocation":"1035:7:6","nodeType":"VariableDeclaration","scope":1450,"src":"1027:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:6"},"scope":1525,"src":"970:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"1050:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1458,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:6","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:6","nodeType":"VariableDeclaration","scope":1458,"src":"1203:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:6"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"owner","nameLocation":"1251:5:6","nodeType":"VariableDeclaration","scope":1458,"src":"1243:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:6"},"scope":1525,"src":"1186:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"1264:565:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1470,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:6","nodeType":"FunctionDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"from","nameLocation":"1868:4:6","nodeType":"VariableDeclaration","scope":1470,"src":"1860:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"to","nameLocation":"1882:2:6","nodeType":"VariableDeclaration","scope":1470,"src":"1874:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:6","nodeType":"VariableDeclaration","scope":1470,"src":"1886:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"data","nameLocation":"1918:4:6","nodeType":"VariableDeclaration","scope":1470,"src":"1903:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1466,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:6"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"1932:0:6"},"scope":1525,"src":"1834:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1939:705:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1480,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:6","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"from","nameLocation":"2683:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"2675:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"to","nameLocation":"2697:2:6","nodeType":"VariableDeclaration","scope":1480,"src":"2689:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:6","nodeType":"VariableDeclaration","scope":1480,"src":"2701:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:6"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"2726:0:6"},"scope":1525,"src":"2649:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"2733:732:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1490,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:6","nodeType":"FunctionDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"from","nameLocation":"3500:4:6","nodeType":"VariableDeclaration","scope":1490,"src":"3492:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"to","nameLocation":"3514:2:6","nodeType":"VariableDeclaration","scope":1490,"src":"3506:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:6","nodeType":"VariableDeclaration","scope":1490,"src":"3518:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:6"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"3543:0:6"},"scope":1525,"src":"3470:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"3550:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1498,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:6","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"to","nameLocation":"4032:2:6","nodeType":"VariableDeclaration","scope":1498,"src":"4024:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:6","nodeType":"VariableDeclaration","scope":1498,"src":"4036:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:6"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[],"src":"4061:0:6"},"scope":1525,"src":"4007:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"4068:315:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1506,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:6","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"operator","nameLocation":"4423:8:6","nodeType":"VariableDeclaration","scope":1506,"src":"4415:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"approved","nameLocation":"4438:8:6","nodeType":"VariableDeclaration","scope":1506,"src":"4433:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1502,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:6"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"4456:0:6"},"scope":1525,"src":"4388:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"4463:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1514,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:6","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:6","nodeType":"VariableDeclaration","scope":1514,"src":"4628:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:6"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"operator","nameLocation":"4676:8:6","nodeType":"VariableDeclaration","scope":1514,"src":"4668:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:6"},"scope":1525,"src":"4607:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"4692:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1524,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:6","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"owner","nameLocation":"4869:5:6","nodeType":"VariableDeclaration","scope":1524,"src":"4861:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"operator","nameLocation":"4884:8:6","nodeType":"VariableDeclaration","scope":1524,"src":"4876:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:6"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"4917:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1521,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:6"},"scope":1525,"src":"4835:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1526,"src":"266:4659:6","usedErrors":[],"usedEvents":[1424,1433,1442]}],"src":"108:4818:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1543]},"id":1544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1527,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"142:152:7","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1543,"linearizedBaseContracts":[1543],"name":"IERC721Receiver","nameLocation":"305:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"327:500:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1542,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:7","nodeType":"FunctionDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"operator","nameLocation":"875:8:7","nodeType":"VariableDeclaration","scope":1542,"src":"867:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"from","nameLocation":"901:4:7","nodeType":"VariableDeclaration","scope":1542,"src":"893:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:7","nodeType":"VariableDeclaration","scope":1542,"src":"915:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"data","nameLocation":"955:4:7","nodeType":"VariableDeclaration","scope":1542,"src":"940:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1536,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:7"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1542,"src":"984:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1539,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:7"},"scope":1543,"src":"832:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1544,"src":"295:699:7","usedErrors":[],"usedEvents":[]}],"src":"116:879:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1525],"IERC721Metadata":[1571]},"id":1572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1545,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1572,"sourceUnit":1526,"src":"153:39:8","symbolAliases":[{"foreign":{"id":1546,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"161:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1549,"name":"IERC721","nameLocations":["357:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1525,"src":"357:7:8"},"id":1550,"nodeType":"InheritanceSpecifier","src":"357:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"194:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1571,"linearizedBaseContracts":[1571,1525,1892],"name":"IERC721Metadata","nameLocation":"338:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"371:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1556,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"447:2:8"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"473:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1553,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:8"},"scope":1571,"src":"434:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"494:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1562,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:8","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"574:2:8"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1562,"src":"600:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1559,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:8"},"scope":1571,"src":"559:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"621:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1570,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:8","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:8","nodeType":"VariableDeclaration","scope":1570,"src":"734:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:8"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1570,"src":"774:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1567,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:8"},"scope":1571,"src":"716:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1572,"src":"328:463:8","usedErrors":[],"usedEvents":[1424,1433,1442]}],"src":"127:665:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1601]},"id":1602,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1573,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1601,"linearizedBaseContracts":[1601],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1582,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1578,"id":1581,"nodeType":"Return","src":"728:17:9"}]},"id":1583,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1583,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1601,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1591,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1587,"id":1590,"nodeType":"Return","src":"835:15:9"}]},"id":1592,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1592,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1585,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1601,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1599,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1596,"id":1598,"nodeType":"Return","src":"945:8:9"}]},"id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1600,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1601,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1602,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2946],"SignedMath":[3051],"Strings":[1856]},"id":1857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1603,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1857,"sourceUnit":2947,"src":"127:37:10","symbolAliases":[{"foreign":{"id":1604,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1857,"sourceUnit":3052,"src":"165:49:10","symbolAliases":[{"foreign":{"id":1606,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"173:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"216:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":1856,"linearizedBaseContracts":[1856],"name":"Strings","nameLocation":"259:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1611,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:10","nodeType":"VariableDeclaration","scope":1856,"src":"273:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1609,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1614,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:10","nodeType":"VariableDeclaration","scope":1856,"src":"335:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1612,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"384:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1621,"name":"StringsInsufficientHexLength","nameLocation":"476:28:10","nodeType":"ErrorDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"value","nameLocation":"513:5:10","nodeType":"VariableDeclaration","scope":1621,"src":"505:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"length","nameLocation":"528:6:10","nodeType":"VariableDeclaration","scope":1621,"src":"520:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:10"},"src":"470:66:10"},{"body":{"id":1668,"nodeType":"Block","src":"708:627:10","statements":[{"id":1667,"nodeType":"UncheckedBlock","src":"718:611:10","statements":[{"assignments":[1630],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"length","nameLocation":"750:6:10","nodeType":"VariableDeclaration","scope":1667,"src":"742:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"770:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1631,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"759:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2946_$","typeString":"type(library Math)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"759:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:10"},{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"buffer","nameLocation":"808:6:10","nodeType":"VariableDeclaration","scope":1667,"src":"794:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1638,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1644,"initialValue":{"arguments":[{"id":1642,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"828:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1640,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:10"},{"assignments":[1646],"declarations":[{"constant":false,"id":1646,"mutability":"mutable","name":"ptr","nameLocation":"857:3:10","nodeType":"VariableDeclaration","scope":1667,"src":"849:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1647,"nodeType":"VariableDeclarationStatement","src":"849:11:10"},{"AST":{"nodeType":"YulBlock","src":"930:67:10","statements":[{"nodeType":"YulAssignment","src":"948:35:10","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:10","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:10"},"nodeType":"YulFunctionCall","src":"967:15:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:10"},"nodeType":"YulFunctionCall","src":"955:28:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1639,"isOffset":false,"isSlot":false,"src":"959:6:10","valueSize":1},{"declaration":1630,"isOffset":false,"isSlot":false,"src":"975:6:10","valueSize":1},{"declaration":1646,"isOffset":false,"isSlot":false,"src":"948:3:10","valueSize":1}],"id":1648,"nodeType":"InlineAssembly","src":"921:76:10"},{"body":{"id":1663,"nodeType":"Block","src":"1023:269:10","statements":[{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:10","subExpression":{"id":1650,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1041:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ExpressionStatement","src":"1041:5:10"},{"AST":{"nodeType":"YulBlock","src":"1124:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:10"},"nodeType":"YulFunctionCall","src":"1164:14:10"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:10"},"nodeType":"YulFunctionCall","src":"1159:32:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:10"},"nodeType":"YulFunctionCall","src":"1146:46:10"},"nodeType":"YulExpressionStatement","src":"1146:46:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1611,"isOffset":false,"isSlot":false,"src":"1180:10:10","valueSize":1},{"declaration":1646,"isOffset":false,"isSlot":false,"src":"1154:3:10","valueSize":1},{"declaration":1624,"isOffset":false,"isSlot":false,"src":"1168:5:10","valueSize":1}],"id":1653,"nodeType":"InlineAssembly","src":"1115:95:10"},{"expression":{"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1227:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1657,"nodeType":"ExpressionStatement","src":"1227:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1260:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1662,"nodeType":"IfStatement","src":"1256:21:10","trueBody":{"id":1661,"nodeType":"Break","src":"1272:5:10"}}]},"condition":{"hexValue":"74727565","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1664,"nodeType":"WhileStatement","src":"1010:282:10"},{"expression":{"id":1665,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"1312:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1628,"id":1666,"nodeType":"Return","src":"1305:13:10"}]}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"542:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:10","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"value","nameLocation":"663:5:10","nodeType":"VariableDeclaration","scope":1669,"src":"655:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:10"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"693:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1626,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:10"},"scope":1856,"src":"637:698:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1694,"nodeType":"Block","src":"1511:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1542:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:10","trueExpression":{"hexValue":"2d","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1588:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1687,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"1573:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3051_$","typeString":"type(library SignedMath)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3050,"src":"1573:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1686,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1564:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1677,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:10","typeDescriptions":{}}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:10","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1676,"id":1693,"nodeType":"Return","src":"1521:75:10"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1341:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:10","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"value","nameLocation":"1466:5:10","nodeType":"VariableDeclaration","scope":1695,"src":"1459:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1671,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:10"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1695,"src":"1496:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1674,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:10"},"scope":1856,"src":"1435:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"1782:100:10","statements":[{"id":1713,"nodeType":"UncheckedBlock","src":"1792:84:10","statements":[{"expression":{"arguments":[{"id":1704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1835:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1854:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1705,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"1842:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2946_$","typeString":"type(library Math)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2888,"src":"1842:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1715,1798,1818],"referencedDeclaration":1798,"src":"1823:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1702,"id":1712,"nodeType":"Return","src":"1816:49:10"}]}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"1609:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:10","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"value","nameLocation":"1737:5:10","nodeType":"VariableDeclaration","scope":1715,"src":"1729:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:10"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"1767:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1700,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:10"},"scope":1856,"src":"1708:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"2095:435:10","statements":[{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:10","nodeType":"VariableDeclaration","scope":1797,"src":"2105:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1728,"initialValue":{"id":1727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"2126:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:10"},{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:10","nodeType":"VariableDeclaration","scope":1797,"src":"2141:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1729,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1739,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1734,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"2177:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1731,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:10"},{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1740,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2198:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1742,"indexExpression":{"hexValue":"30","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1745,"nodeType":"ExpressionStatement","src":"2198:15:10"},{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1746,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2223:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1748,"indexExpression":{"hexValue":"31","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1751,"nodeType":"ExpressionStatement","src":"2223:15:10"},{"body":{"id":1780,"nodeType":"Block","src":"2293:95:10","statements":[{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1766,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2307:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1768,"indexExpression":{"id":1767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2314:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1769,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2319:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1773,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1770,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2330:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1775,"nodeType":"ExpressionStatement","src":"2307:40:10"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2361:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"2361:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2281:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1781,"initializationExpression":{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"i","nameLocation":"2261:1:10","nodeType":"VariableDeclaration","scope":1781,"src":"2253:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1759,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1755,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"2269:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:10"},"loopExpression":{"expression":{"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:10","subExpression":{"id":1763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2290:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1765,"nodeType":"ExpressionStatement","src":"2288:3:10"},"nodeType":"ForStatement","src":"2248:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2401:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"nodeType":"IfStatement","src":"2397:96:10","trueBody":{"id":1790,"nodeType":"Block","src":"2418:75:10","statements":[{"errorCall":{"arguments":[{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"2468:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1787,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"2475:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"2439:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"RevertStatement","src":"2432:50:10"}]}},{"expression":{"arguments":[{"id":1794,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2516:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1792,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:10","typeDescriptions":{}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1724,"id":1796,"nodeType":"Return","src":"2502:21:10"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"1888:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:10","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"value","nameLocation":"2034:5:10","nodeType":"VariableDeclaration","scope":1798,"src":"2026:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"length","nameLocation":"2049:6:10","nodeType":"VariableDeclaration","scope":1798,"src":"2041:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:10"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1798,"src":"2080:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1722,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:10"},"scope":1856,"src":"2005:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"2762:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1811,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"2807:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1809,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:10","typeDescriptions":{}}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:10","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1814,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2815:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1806,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1715,1798,1818],"referencedDeclaration":1798,"src":"2779:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1805,"id":1816,"nodeType":"Return","src":"2772:58:10"}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"2536:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:10","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"addr","nameLocation":"2718:4:10","nodeType":"VariableDeclaration","scope":1818,"src":"2710:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:10"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"2747:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1803,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:10"},"scope":1856,"src":"2689:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"2992:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"3015:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1828,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:10","typeDescriptions":{}}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:10","memberName":"length","nodeType":"MemberAccess","src":"3009:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1835,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3034:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:10","typeDescriptions":{}}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:10","memberName":"length","nodeType":"MemberAccess","src":"3028:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"3063:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1840,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:10","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1839,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3086:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:10","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1845,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1827,"id":1853,"nodeType":"Return","src":"3002:87:10"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"2843:66:10","text":" @dev Returns true if the two strings are equal."},"id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:10","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"a","nameLocation":"2943:1:10","nodeType":"VariableDeclaration","scope":1855,"src":"2929:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1820,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"b","nameLocation":"2960:1:10","nodeType":"VariableDeclaration","scope":1855,"src":"2946:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1822,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:10"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"2986:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1825,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:10"},"scope":1856,"src":"2914:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1857,"src":"251:2847:10","usedErrors":[1621],"usedEvents":[]}],"src":"101:2998:10"},"id":10},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1880],"IERC165":[1892]},"id":1881,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1881,"sourceUnit":1893,"src":"140:38:11","symbolAliases":[{"foreign":{"id":1859,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1862,"name":"IERC165","nameLocations":["687:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"687:7:11"},"id":1863,"nodeType":"InheritanceSpecifier","src":"687:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"180:478:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1880,"linearizedBaseContracts":[1880,1892],"name":"ERC165","nameLocation":"677:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1891],"body":{"id":1878,"nodeType":"Block","src":"844:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"861:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1873,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"881:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1892_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1892_$","typeString":"type(contract IERC165)"}],"id":1872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1892","typeString":"type(contract IERC165)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1870,"id":1877,"nodeType":"Return","src":"854:47:11"}]},"documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"701:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:11","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:11","nodeType":"VariableDeclaration","scope":1879,"src":"789:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1865,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:11"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"838:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1868,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:11"},"scope":1880,"src":"762:146:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1881,"src":"659:251:11","usedErrors":[],"usedEvents":[]}],"src":"114:797:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1892]},"id":1893,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1882,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"141:279:12","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1892,"linearizedBaseContracts":[1892],"name":"IERC165","nameLocation":"431:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"445:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1891,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:12","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:12","nodeType":"VariableDeclaration","scope":1891,"src":"817:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1885,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:12"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"860:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1888,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:12"},"scope":1892,"src":"790:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1893,"src":"421:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:754:12"},"id":12},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2946]},"id":2947,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1894,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"129:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2946,"linearizedBaseContracts":[2946],"name":"Math","nameLocation":"211:4:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"222:50:13","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1898,"name":"MathOverflowedMulDiv","nameLocation":"283:20:13","nodeType":"ErrorDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"303:2:13"},"src":"277:29:13"},{"canonicalName":"Math.Rounding","id":1903,"members":[{"id":1899,"name":"Floor","nameLocation":"336:5:13","nodeType":"EnumValue","src":"336:5:13"},{"id":1900,"name":"Ceil","nameLocation":"379:4:13","nodeType":"EnumValue","src":"379:4:13"},{"id":1901,"name":"Trunc","nameLocation":"421:5:13","nodeType":"EnumValue","src":"421:5:13"},{"id":1902,"name":"Expand","nameLocation":"451:6:13","nodeType":"EnumValue","src":"451:6:13"}],"name":"Rounding","nameLocation":"317:8:13","nodeType":"EnumDefinition","src":"312:169:13"},{"body":{"id":1934,"nodeType":"Block","src":"661:140:13","statements":[{"id":1933,"nodeType":"UncheckedBlock","src":"671:124:13","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"c","nameLocation":"703:1:13","nodeType":"VariableDeclaration","scope":1933,"src":"695:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1920,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"707:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1918,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"711:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"730:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"734:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1928,"nodeType":"IfStatement","src":"726:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1914,"id":1927,"nodeType":"Return","src":"737:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1930,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"782:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1914,"id":1932,"nodeType":"Return","src":"768:16:13"}]}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"487:93:13","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:13","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"a","nameLocation":"609:1:13","nodeType":"VariableDeclaration","scope":1935,"src":"601:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"b","nameLocation":"620:1:13","nodeType":"VariableDeclaration","scope":1935,"src":"612:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:13"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"646:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1910,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"652:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:13"},"scope":2946,"src":"585:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1962,"nodeType":"Block","src":"984:113:13","statements":[{"id":1961,"nodeType":"UncheckedBlock","src":"994:97:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"1022:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1026:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1954,"nodeType":"IfStatement","src":"1018:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1946,"id":1953,"nodeType":"Return","src":"1029:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1074:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1957,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"1078:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1946,"id":1960,"nodeType":"Return","src":"1060:20:13"}]}]},"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"807:96:13","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":1963,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:13","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"a","nameLocation":"932:1:13","nodeType":"VariableDeclaration","scope":1963,"src":"924:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"b","nameLocation":"943:1:13","nodeType":"VariableDeclaration","scope":1963,"src":"935:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:13"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1963,"src":"969:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1942,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1963,"src":"975:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:13"},"scope":2946,"src":"908:189:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2004,"nodeType":"Block","src":"1283:417:13","statements":[{"id":2003,"nodeType":"UncheckedBlock","src":"1293:401:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1551:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1982,"nodeType":"IfStatement","src":"1547:28:13","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1974,"id":1981,"nodeType":"Return","src":"1559:16:13"}},{"assignments":[1984],"declarations":[{"constant":false,"id":1984,"mutability":"mutable","name":"c","nameLocation":"1597:1:13","nodeType":"VariableDeclaration","scope":2003,"src":"1589:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1988,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1601:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"1605:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"1624:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1628:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"1633:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1998,"nodeType":"IfStatement","src":"1620:33:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1974,"id":1997,"nodeType":"Return","src":"1636:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2000,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"1681:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1974,"id":2002,"nodeType":"Return","src":"1667:16:13"}]}]},"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"1103:99:13","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:13","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"a","nameLocation":"1231:1:13","nodeType":"VariableDeclaration","scope":2005,"src":"1223:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"b","nameLocation":"1242:1:13","nodeType":"VariableDeclaration","scope":2005,"src":"1234:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:13"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"1268:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1970,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"1274:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:13"},"scope":2946,"src":"1207:493:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"1887:114:13","statements":[{"id":2031,"nodeType":"UncheckedBlock","src":"1897:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1925:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2024,"nodeType":"IfStatement","src":"1921:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2016,"id":2023,"nodeType":"Return","src":"1933:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"1978:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1982:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2016,"id":2030,"nodeType":"Return","src":"1964:20:13"}]}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"1706:100:13","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:13","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"a","nameLocation":"1835:1:13","nodeType":"VariableDeclaration","scope":2033,"src":"1827:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"b","nameLocation":"1846:1:13","nodeType":"VariableDeclaration","scope":2033,"src":"1838:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:13"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"1872:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2012,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"1878:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:13"},"scope":2946,"src":"1811:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2060,"nodeType":"Block","src":"2198:114:13","statements":[{"id":2059,"nodeType":"UncheckedBlock","src":"2208:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"2236:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2052,"nodeType":"IfStatement","src":"2232:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2044,"id":2051,"nodeType":"Return","src":"2244:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2289:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2055,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"2293:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2044,"id":2058,"nodeType":"Return","src":"2275:20:13"}]}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"2007:110:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:13","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"a","nameLocation":"2146:1:13","nodeType":"VariableDeclaration","scope":2061,"src":"2138:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"b","nameLocation":"2157:1:13","nodeType":"VariableDeclaration","scope":2061,"src":"2149:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:13"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"2183:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2040,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"2189:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:13"},"scope":2946,"src":"2122:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2078,"nodeType":"Block","src":"2449:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2466:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2072,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2470:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2075,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2478:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:13","trueExpression":{"id":2074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2474:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2070,"id":2077,"nodeType":"Return","src":"2459:20:13"}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"2318:59:13","text":" @dev Returns the largest of two numbers."},"id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:13","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"a","nameLocation":"2403:1:13","nodeType":"VariableDeclaration","scope":2079,"src":"2395:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"b","nameLocation":"2414:1:13","nodeType":"VariableDeclaration","scope":2079,"src":"2406:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:13"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"2440:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:13"},"scope":2946,"src":"2382:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2096,"nodeType":"Block","src":"2624:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"2641:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2090,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2645:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2093,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2653:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:13","trueExpression":{"id":2092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"2649:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2088,"id":2095,"nodeType":"Return","src":"2634:20:13"}]},"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"2492:60:13","text":" @dev Returns the smallest of two numbers."},"id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:13","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"a","nameLocation":"2578:1:13","nodeType":"VariableDeclaration","scope":2097,"src":"2570:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2084,"mutability":"mutable","name":"b","nameLocation":"2589:1:13","nodeType":"VariableDeclaration","scope":2097,"src":"2581:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:13"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2097,"src":"2615:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:13"},"scope":2946,"src":"2557:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2119,"nodeType":"Block","src":"2845:82:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2900:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2108,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"2904:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2910:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2112,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"2914:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2106,"id":2118,"nodeType":"Return","src":"2892:28:13"}]},"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"2667:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:13","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"a","nameLocation":"2799:1:13","nodeType":"VariableDeclaration","scope":2120,"src":"2791:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"b","nameLocation":"2810:1:13","nodeType":"VariableDeclaration","scope":2120,"src":"2802:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:13"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"2836:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:13"},"scope":2946,"src":"2774:153:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"3219:260:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"3233:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"nodeType":"IfStatement","src":"3229:127:13","trueBody":{"id":2137,"nodeType":"Block","src":"3241:115:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"3340:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2134,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"3344:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2129,"id":2136,"nodeType":"Return","src":"3333:12:13"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"3444:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"3458:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2147,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"3467:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:13","trueExpression":{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2129,"id":2152,"nodeType":"Return","src":"3437:35:13"}]},"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"2933:210:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:13","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"a","nameLocation":"3173:1:13","nodeType":"VariableDeclaration","scope":2154,"src":"3165:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"b","nameLocation":"3184:1:13","nodeType":"VariableDeclaration","scope":2154,"src":"3176:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:13"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"3210:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:13"},"scope":2946,"src":"3148:331:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"3901:4018:13","statements":[{"id":2278,"nodeType":"UncheckedBlock","src":"3911:4002:13","statements":[{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:13","nodeType":"VariableDeclaration","scope":2278,"src":"4232:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2171,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"4248:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2169,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"4252:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:13"},{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:13","nodeType":"VariableDeclaration","scope":2278,"src":"4312:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2174,"nodeType":"VariableDeclarationStatement","src":"4312:13:13"},{"AST":{"nodeType":"YulBlock","src":"4392:122:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:13"},"nodeType":"YulFunctionCall","src":"4433:6:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:13"},"nodeType":"YulFunctionCall","src":"4420:20:13"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:13","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:13","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:13"},"nodeType":"YulFunctionCall","src":"4470:14:13"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:13"},"nodeType":"YulFunctionCall","src":"4486:13:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:13"},"nodeType":"YulFunctionCall","src":"4466:34:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2167,"isOffset":false,"isSlot":false,"src":"4478:5:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"4493:5:13","valueSize":1},{"declaration":2173,"isOffset":false,"isSlot":false,"src":"4457:5:13","valueSize":1},{"declaration":2157,"isOffset":false,"isSlot":false,"src":"4427:1:13","valueSize":1},{"declaration":2159,"isOffset":false,"isSlot":false,"src":"4430:1:13","valueSize":1}],"id":2175,"nodeType":"InlineAssembly","src":"4383:131:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"4595:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"nodeType":"IfStatement","src":"4591:368:13","trueBody":{"id":2183,"nodeType":"Block","src":"4607:352:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4925:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2180,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"4933:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2165,"id":2182,"nodeType":"Return","src":"4918:26:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5065:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2186,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"5080:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2192,"nodeType":"IfStatement","src":"5061:88:13","trueBody":{"id":2191,"nodeType":"Block","src":"5087:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2188,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"5112:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2190,"nodeType":"RevertStatement","src":"5105:29:13"}]}},{"assignments":[2194],"declarations":[{"constant":false,"id":2194,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:13","nodeType":"VariableDeclaration","scope":2278,"src":"5404:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"nodeType":"VariableDeclarationStatement","src":"5404:17:13"},{"AST":{"nodeType":"YulBlock","src":"5444:291:13","statements":[{"nodeType":"YulAssignment","src":"5513:38:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:13"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:13"},"nodeType":"YulFunctionCall","src":"5526:25:13"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:13"}]},{"nodeType":"YulAssignment","src":"5633:41:13","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:13"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:13"},"nodeType":"YulFunctionCall","src":"5653:20:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:13"},"nodeType":"YulFunctionCall","src":"5642:32:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:13"}]},{"nodeType":"YulAssignment","src":"5691:30:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:13"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:13"},"nodeType":"YulFunctionCall","src":"5700:21:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2161,"isOffset":false,"isSlot":false,"src":"5539:11:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"5667:5:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"5691:5:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"5704:5:13","valueSize":1},{"declaration":2173,"isOffset":false,"isSlot":false,"src":"5633:5:13","valueSize":1},{"declaration":2173,"isOffset":false,"isSlot":false,"src":"5646:5:13","valueSize":1},{"declaration":2194,"isOffset":false,"isSlot":false,"src":"5513:9:13","valueSize":1},{"declaration":2194,"isOffset":false,"isSlot":false,"src":"5656:9:13","valueSize":1},{"declaration":2194,"isOffset":false,"isSlot":false,"src":"5711:9:13","valueSize":1},{"declaration":2157,"isOffset":false,"isSlot":false,"src":"5533:1:13","valueSize":1},{"declaration":2159,"isOffset":false,"isSlot":false,"src":"5536:1:13","valueSize":1}],"id":2196,"nodeType":"InlineAssembly","src":"5435:300:13"},{"assignments":[2198],"declarations":[{"constant":false,"id":2198,"mutability":"mutable","name":"twos","nameLocation":"5947:4:13","nodeType":"VariableDeclaration","scope":2278,"src":"5939:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2205,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5954:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2201,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5973:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:13"},{"AST":{"nodeType":"YulBlock","src":"6008:362:13","statements":[{"nodeType":"YulAssignment","src":"6073:37:13","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:13"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:13"},"nodeType":"YulFunctionCall","src":"6088:22:13"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:13"}]},{"nodeType":"YulAssignment","src":"6177:25:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:13"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:13"},"nodeType":"YulFunctionCall","src":"6186:16:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:13"}]},{"nodeType":"YulAssignment","src":"6317:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:13","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:13"},"nodeType":"YulFunctionCall","src":"6333:12:13"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:13"},"nodeType":"YulFunctionCall","src":"6329:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:13"},"nodeType":"YulFunctionCall","src":"6325:31:13"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2161,"isOffset":false,"isSlot":false,"src":"6073:11:13","valueSize":1},{"declaration":2161,"isOffset":false,"isSlot":false,"src":"6092:11:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"6177:5:13","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"6190:5:13","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"6105:4:13","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"6197:4:13","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"6317:4:13","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"6340:4:13","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"6347:4:13","valueSize":1}],"id":2206,"nodeType":"InlineAssembly","src":"5999:371:13"},{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"6436:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"6445:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2209,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"6453:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2212,"nodeType":"ExpressionStatement","src":"6436:21:13"},{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:13","nodeType":"VariableDeclaration","scope":2278,"src":"6775:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2221,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2216,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6798:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:13"},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2222,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7046:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2225,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7060:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"7031:36:13"},{"expression":{"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2230,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7100:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7115:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2233,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7129:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2237,"nodeType":"ExpressionStatement","src":"7100:36:13"},{"expression":{"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2238,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2240,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7185:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2241,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2245,"nodeType":"ExpressionStatement","src":"7170:36:13"},{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2246,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7240:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2248,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7255:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2249,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7269:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ExpressionStatement","src":"7240:36:13"},{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2254,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2256,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7325:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2257,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2261,"nodeType":"ExpressionStatement","src":"7310:36:13"},{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2262,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7381:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7396:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2265,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2269,"nodeType":"ExpressionStatement","src":"7381:36:13"},{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"7851:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"7860:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2272,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"7851:24:13"},{"expression":{"id":2276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"7896:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2165,"id":2277,"nodeType":"Return","src":"7889:13:13"}]}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"3485:313:13","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:13","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"x","nameLocation":"3827:1:13","nodeType":"VariableDeclaration","scope":2280,"src":"3819:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"y","nameLocation":"3838:1:13","nodeType":"VariableDeclaration","scope":2280,"src":"3830:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:13","nodeType":"VariableDeclaration","scope":2280,"src":"3841:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:13"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"result","nameLocation":"3893:6:13","nodeType":"VariableDeclaration","scope":2280,"src":"3885:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:13"},"scope":2946,"src":"3803:4116:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2322,"nodeType":"Block","src":"8161:192:13","statements":[{"assignments":[2296],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"result","nameLocation":"8179:6:13","nodeType":"VariableDeclaration","scope":2322,"src":"8171:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2302,"initialValue":{"arguments":[{"id":2298,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"8195:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2299,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"8198:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2300,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"8201:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2297,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2280,2323],"referencedDeclaration":2280,"src":"8188:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2304,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"8244:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}],"id":2303,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"8227:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1903_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2307,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"8264:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2308,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"8267:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2309,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"8270:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2306,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2319,"nodeType":"IfStatement","src":"8223:101:13","trueBody":{"id":2318,"nodeType":"Block","src":"8288:36:13","statements":[{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8302:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ExpressionStatement","src":"8302:11:13"}]}},{"expression":{"id":2320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8340:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2294,"id":2321,"nodeType":"Return","src":"8333:13:13"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"7925:121:13","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2323,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:13","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"x","nameLocation":"8075:1:13","nodeType":"VariableDeclaration","scope":2323,"src":"8067:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"y","nameLocation":"8086:1:13","nodeType":"VariableDeclaration","scope":2323,"src":"8078:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:13","nodeType":"VariableDeclaration","scope":2323,"src":"8089:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:13","nodeType":"VariableDeclaration","scope":2323,"src":"8110:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"},"typeName":{"id":2289,"nodeType":"UserDefinedTypeName","pathNode":{"id":2288,"name":"Rounding","nameLocations":["8110:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"8110:8:13"},"referencedDeclaration":1903,"src":"8110:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:13"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2323,"src":"8152:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:13"},"scope":2946,"src":"8051:302:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"8644:1585:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"8658:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2337,"nodeType":"IfStatement","src":"8654:45:13","trueBody":{"id":2336,"nodeType":"Block","src":"8666:33:13","statements":[{"expression":{"hexValue":"30","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2330,"id":2335,"nodeType":"Return","src":"8680:8:13"}]}},{"assignments":[2339],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"result","nameLocation":"9386:6:13","nodeType":"VariableDeclaration","scope":2434,"src":"9378:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2348,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"9406:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2341,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2602,2637],"referencedDeclaration":2602,"src":"9401:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:13"},{"id":2433,"nodeType":"UncheckedBlock","src":"9815:408:13","statements":[{"expression":{"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9839:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9849:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"9858:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9862:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2359,"nodeType":"ExpressionStatement","src":"9839:35:13"},{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9888:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9898:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"9907:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9911:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ExpressionStatement","src":"9888:35:13"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9937:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9947:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"9956:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9960:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2381,"nodeType":"ExpressionStatement","src":"9937:35:13"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9986:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9996:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10005:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10009:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"9986:35:13"},{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10035:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10045:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10054:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10058:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"10035:35:13"},{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10084:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10094:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10103:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10107:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2414,"nodeType":"ExpressionStatement","src":"10084:35:13"},{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10133:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10143:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10152:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10156:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ExpressionStatement","src":"10133:35:13"},{"expression":{"arguments":[{"id":2427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10193:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10201:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"10205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"10189:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2330,"id":2432,"nodeType":"Return","src":"10182:30:13"}]}]},"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"8359:223:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:13","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"a","nameLocation":"8609:1:13","nodeType":"VariableDeclaration","scope":2435,"src":"8601:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:13"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2435,"src":"8635:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:13"},"scope":2946,"src":"8587:1642:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2469,"nodeType":"Block","src":"10405:164:13","statements":[{"id":2468,"nodeType":"UncheckedBlock","src":"10415:148:13","statements":[{"assignments":[2447],"declarations":[{"constant":false,"id":2447,"mutability":"mutable","name":"result","nameLocation":"10447:6:13","nodeType":"VariableDeclaration","scope":2468,"src":"10439:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2451,"initialValue":{"arguments":[{"id":2449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"10461:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2448,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2435,2470],"referencedDeclaration":2435,"src":"10456:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"10484:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2454,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"10511:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}],"id":2453,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"10494:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1903_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"10524:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"10533:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"10542:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:13","trueExpression":{"hexValue":"31","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2445,"id":2467,"nodeType":"Return","src":"10477:75:13"}]}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"10235:89:13","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:13","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"a","nameLocation":"10351:1:13","nodeType":"VariableDeclaration","scope":2470,"src":"10343:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:13","nodeType":"VariableDeclaration","scope":2470,"src":"10354:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"},"typeName":{"id":2440,"nodeType":"UserDefinedTypeName","pathNode":{"id":2439,"name":"Rounding","nameLocations":["10354:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"10354:8:13"},"referencedDeclaration":1903,"src":"10354:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:13"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"10396:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:13"},"scope":2946,"src":"10329:240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2601,"nodeType":"Block","src":"10760:922:13","statements":[{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"result","nameLocation":"10778:6:13","nodeType":"VariableDeclaration","scope":2601,"src":"10770:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2481,"initialValue":{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:13"},{"id":2598,"nodeType":"UncheckedBlock","src":"10798:855:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10826:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2496,"nodeType":"IfStatement","src":"10822:99:13","trueBody":{"id":2495,"nodeType":"Block","src":"10844:77:13","statements":[{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10862:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"nodeType":"ExpressionStatement","src":"10862:13:13"},{"expression":{"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"10893:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2494,"nodeType":"ExpressionStatement","src":"10893:13:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10938:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2511,"nodeType":"IfStatement","src":"10934:96:13","trueBody":{"id":2510,"nodeType":"Block","src":"10955:75:13","statements":[{"expression":{"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10973:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2505,"nodeType":"ExpressionStatement","src":"10973:12:13"},{"expression":{"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11003:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2509,"nodeType":"ExpressionStatement","src":"11003:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11047:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2526,"nodeType":"IfStatement","src":"11043:96:13","trueBody":{"id":2525,"nodeType":"Block","src":"11064:75:13","statements":[{"expression":{"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11082:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"nodeType":"ExpressionStatement","src":"11082:12:13"},{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11112:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"11112:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11156:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2541,"nodeType":"IfStatement","src":"11152:96:13","trueBody":{"id":2540,"nodeType":"Block","src":"11173:75:13","statements":[{"expression":{"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11191:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2535,"nodeType":"ExpressionStatement","src":"11191:12:13"},{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11221:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"11221:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11265:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2556,"nodeType":"IfStatement","src":"11261:93:13","trueBody":{"id":2555,"nodeType":"Block","src":"11281:73:13","statements":[{"expression":{"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11299:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2550,"nodeType":"ExpressionStatement","src":"11299:11:13"},{"expression":{"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11328:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2554,"nodeType":"ExpressionStatement","src":"11328:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11371:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2571,"nodeType":"IfStatement","src":"11367:93:13","trueBody":{"id":2570,"nodeType":"Block","src":"11387:73:13","statements":[{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11405:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"11405:11:13"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11434:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2569,"nodeType":"ExpressionStatement","src":"11434:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11477:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"nodeType":"IfStatement","src":"11473:93:13","trueBody":{"id":2585,"nodeType":"Block","src":"11493:73:13","statements":[{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11511:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2580,"nodeType":"ExpressionStatement","src":"11511:11:13"},{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11540:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"nodeType":"ExpressionStatement","src":"11540:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11583:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"11579:64:13","trueBody":{"id":2596,"nodeType":"Block","src":"11599:44:13","statements":[{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11617:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"11617:11:13"}]}}]},{"expression":{"id":2599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"11669:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2477,"id":2600,"nodeType":"Return","src":"11662:13:13"}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"10575:119:13","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2602,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:13","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"value","nameLocation":"10721:5:13","nodeType":"VariableDeclaration","scope":2602,"src":"10713:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:13"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"10751:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:13"},"scope":2946,"src":"10699:983:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2636,"nodeType":"Block","src":"11915:168:13","statements":[{"id":2635,"nodeType":"UncheckedBlock","src":"11925:152:13","statements":[{"assignments":[2614],"declarations":[{"constant":false,"id":2614,"mutability":"mutable","name":"result","nameLocation":"11957:6:13","nodeType":"VariableDeclaration","scope":2635,"src":"11949:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2618,"initialValue":{"arguments":[{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"11971:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2615,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2602,2637],"referencedDeclaration":2602,"src":"11966:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"11998:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2621,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"12025:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}],"id":2620,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"12008:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1903_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"12043:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"12052:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:13","trueExpression":{"hexValue":"31","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2612,"id":2634,"nodeType":"Return","src":"11991:75:13"}]}]},"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"11688:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2637,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:13","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"value","nameLocation":"11857:5:13","nodeType":"VariableDeclaration","scope":2637,"src":"11849:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:13","nodeType":"VariableDeclaration","scope":2637,"src":"11864:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"},"typeName":{"id":2607,"nodeType":"UserDefinedTypeName","pathNode":{"id":2606,"name":"Rounding","nameLocations":["11864:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"11864:8:13"},"referencedDeclaration":1903,"src":"11864:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:13"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2637,"src":"11906:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:13"},"scope":2946,"src":"11835:248:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2765,"nodeType":"Block","src":"12276:854:13","statements":[{"assignments":[2646],"declarations":[{"constant":false,"id":2646,"mutability":"mutable","name":"result","nameLocation":"12294:6:13","nodeType":"VariableDeclaration","scope":2765,"src":"12286:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2648,"initialValue":{"hexValue":"30","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:13"},{"id":2762,"nodeType":"UncheckedBlock","src":"12314:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12342:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2665,"nodeType":"IfStatement","src":"12338:103:13","trueBody":{"id":2664,"nodeType":"Block","src":"12361:80:13","statements":[{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2659,"nodeType":"ExpressionStatement","src":"12379:17:13"},{"expression":{"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12414:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2663,"nodeType":"ExpressionStatement","src":"12414:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12458:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2682,"nodeType":"IfStatement","src":"12454:103:13","trueBody":{"id":2681,"nodeType":"Block","src":"12477:80:13","statements":[{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12495:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"12495:17:13"},{"expression":{"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12530:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ExpressionStatement","src":"12530:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12574:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2699,"nodeType":"IfStatement","src":"12570:103:13","trueBody":{"id":2698,"nodeType":"Block","src":"12593:80:13","statements":[{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12611:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2693,"nodeType":"ExpressionStatement","src":"12611:17:13"},{"expression":{"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12646:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2697,"nodeType":"ExpressionStatement","src":"12646:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12690:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2716,"nodeType":"IfStatement","src":"12686:100:13","trueBody":{"id":2715,"nodeType":"Block","src":"12708:78:13","statements":[{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12726:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"12726:16:13"},{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12760:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"nodeType":"ExpressionStatement","src":"12760:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12803:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2733,"nodeType":"IfStatement","src":"12799:100:13","trueBody":{"id":2732,"nodeType":"Block","src":"12821:78:13","statements":[{"expression":{"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12839:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2727,"nodeType":"ExpressionStatement","src":"12839:16:13"},{"expression":{"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12873:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2731,"nodeType":"ExpressionStatement","src":"12873:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12916:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2750,"nodeType":"IfStatement","src":"12912:100:13","trueBody":{"id":2749,"nodeType":"Block","src":"12934:78:13","statements":[{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"12952:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2744,"nodeType":"ExpressionStatement","src":"12952:16:13"},{"expression":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12986:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2748,"nodeType":"ExpressionStatement","src":"12986:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"13029:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2761,"nodeType":"IfStatement","src":"13025:66:13","trueBody":{"id":2760,"nodeType":"Block","src":"13047:44:13","statements":[{"expression":{"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"13065:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2759,"nodeType":"ExpressionStatement","src":"13065:11:13"}]}}]},{"expression":{"id":2763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"13117:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2644,"id":2764,"nodeType":"Return","src":"13110:13:13"}]},"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"12089:120:13","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:13","nodeType":"FunctionDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"value","nameLocation":"12237:5:13","nodeType":"VariableDeclaration","scope":2766,"src":"12229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:13"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"12267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:13"},"scope":2946,"src":"12214:916:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2800,"nodeType":"Block","src":"13365:170:13","statements":[{"id":2799,"nodeType":"UncheckedBlock","src":"13375:154:13","statements":[{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"result","nameLocation":"13407:6:13","nodeType":"VariableDeclaration","scope":2799,"src":"13399:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2782,"initialValue":{"arguments":[{"id":2780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13422:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2766,2801],"referencedDeclaration":2766,"src":"13416:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"13449:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2785,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"13476:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}],"id":2784,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"13459:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1903_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"13495:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"13504:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:13","trueExpression":{"hexValue":"31","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2776,"id":2798,"nodeType":"Return","src":"13442:76:13"}]}]},"documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"13136:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:13","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"value","nameLocation":"13307:5:13","nodeType":"VariableDeclaration","scope":2801,"src":"13299:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:13","nodeType":"VariableDeclaration","scope":2801,"src":"13314:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"},"typeName":{"id":2771,"nodeType":"UserDefinedTypeName","pathNode":{"id":2770,"name":"Rounding","nameLocations":["13314:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"13314:8:13"},"referencedDeclaration":1903,"src":"13314:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:13"},"returnParameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2801,"src":"13356:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2774,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:13"},"scope":2946,"src":"13284:251:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2887,"nodeType":"Block","src":"13855:600:13","statements":[{"assignments":[2810],"declarations":[{"constant":false,"id":2810,"mutability":"mutable","name":"result","nameLocation":"13873:6:13","nodeType":"VariableDeclaration","scope":2887,"src":"13865:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2812,"initialValue":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:13"},{"id":2884,"nodeType":"UncheckedBlock","src":"13893:533:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"13921:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2827,"nodeType":"IfStatement","src":"13917:98:13","trueBody":{"id":2826,"nodeType":"Block","src":"13939:76:13","statements":[{"expression":{"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"13957:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2821,"nodeType":"ExpressionStatement","src":"13957:13:13"},{"expression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"13988:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2825,"nodeType":"ExpressionStatement","src":"13988:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14032:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"14028:95:13","trueBody":{"id":2841,"nodeType":"Block","src":"14049:74:13","statements":[{"expression":{"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14067:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2836,"nodeType":"ExpressionStatement","src":"14067:12:13"},{"expression":{"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"14097:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"nodeType":"ExpressionStatement","src":"14097:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14140:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2857,"nodeType":"IfStatement","src":"14136:95:13","trueBody":{"id":2856,"nodeType":"Block","src":"14157:74:13","statements":[{"expression":{"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14175:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2851,"nodeType":"ExpressionStatement","src":"14175:12:13"},{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"14205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2855,"nodeType":"ExpressionStatement","src":"14205:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14248:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2872,"nodeType":"IfStatement","src":"14244:95:13","trueBody":{"id":2871,"nodeType":"Block","src":"14265:74:13","statements":[{"expression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14283:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2866,"nodeType":"ExpressionStatement","src":"14283:12:13"},{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"14313:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2870,"nodeType":"ExpressionStatement","src":"14313:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"14356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2883,"nodeType":"IfStatement","src":"14352:64:13","trueBody":{"id":2882,"nodeType":"Block","src":"14372:44:13","statements":[{"expression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"14390:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2881,"nodeType":"ExpressionStatement","src":"14390:11:13"}]}}]},{"expression":{"id":2885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"14442:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2808,"id":2886,"nodeType":"Return","src":"14435:13:13"}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"13541:246:13","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:13","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"value","nameLocation":"13816:5:13","nodeType":"VariableDeclaration","scope":2888,"src":"13808:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:13"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2888,"src":"13846:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:13"},"scope":2946,"src":"13792:663:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2925,"nodeType":"Block","src":"14692:177:13","statements":[{"id":2924,"nodeType":"UncheckedBlock","src":"14702:161:13","statements":[{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"result","nameLocation":"14734:6:13","nodeType":"VariableDeclaration","scope":2924,"src":"14726:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2904,"initialValue":{"arguments":[{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"14750:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2901,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2888,2926],"referencedDeclaration":2888,"src":"14743:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14777:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2907,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"14804:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}],"id":2906,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"14787:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1903_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14823:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"14838:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:13","trueExpression":{"hexValue":"31","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2898,"id":2923,"nodeType":"Return","src":"14770:82:13"}]}]},"documentation":{"id":2889,"nodeType":"StructuredDocumentation","src":"14461:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2926,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:13","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"value","nameLocation":"14634:5:13","nodeType":"VariableDeclaration","scope":2926,"src":"14626:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2894,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:13","nodeType":"VariableDeclaration","scope":2926,"src":"14641:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"},"typeName":{"id":2893,"nodeType":"UserDefinedTypeName","pathNode":{"id":2892,"name":"Rounding","nameLocations":["14641:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"14641:8:13"},"referencedDeclaration":1903,"src":"14641:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:13"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2926,"src":"14683:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:13"},"scope":2946,"src":"14610:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"15067:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2937,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"15090:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2935,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:13","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2934,"id":2943,"nodeType":"Return","src":"15077:31:13"}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"14875:113:13","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:13","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:13","nodeType":"VariableDeclaration","scope":2945,"src":"15019:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"},"typeName":{"id":2929,"nodeType":"UserDefinedTypeName","pathNode":{"id":2928,"name":"Rounding","nameLocations":["15019:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"15019:8:13"},"referencedDeclaration":1903,"src":"15019:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1903","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:13"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2945,"src":"15061:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2932,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:13"},"scope":2946,"src":"14993:122:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2947,"src":"203:14914:13","usedErrors":[1898],"usedEvents":[]}],"src":"103:15015:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3051]},"id":3052,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2948,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"135:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3051,"linearizedBaseContracts":[3051],"name":"SignedMath","nameLocation":"224:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2966,"nodeType":"Block","src":"376:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"393:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2960,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"397:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"405:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:14","trueExpression":{"id":2962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"401:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2958,"id":2965,"nodeType":"Return","src":"386:20:14"}]},"documentation":{"id":2950,"nodeType":"StructuredDocumentation","src":"241:66:14","text":" @dev Returns the largest of two signed numbers."},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:14","nodeType":"FunctionDefinition","parameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"a","nameLocation":"332:1:14","nodeType":"VariableDeclaration","scope":2967,"src":"325:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2951,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"b","nameLocation":"342:1:14","nodeType":"VariableDeclaration","scope":2967,"src":"335:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2953,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:14"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2967,"src":"368:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2956,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:14"},"scope":3051,"src":"312:101:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2984,"nodeType":"Block","src":"555:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"572:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"584:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:14","trueExpression":{"id":2980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"580:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2976,"id":2983,"nodeType":"Return","src":"565:20:14"}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"419:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":2985,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:14","nodeType":"FunctionDefinition","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"a","nameLocation":"511:1:14","nodeType":"VariableDeclaration","scope":2985,"src":"504:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2969,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"b","nameLocation":"521:1:14","nodeType":"VariableDeclaration","scope":2985,"src":"514:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2971,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:14"},"returnParameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2985,"src":"547:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2974,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:14"},"scope":3051,"src":"491:101:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3028,"nodeType":"Block","src":"797:162:14","statements":[{"assignments":[2996],"declarations":[{"constant":false,"id":2996,"mutability":"mutable","name":"x","nameLocation":"866:1:14","nodeType":"VariableDeclaration","scope":3028,"src":"859:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2995,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3009,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"871:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"875:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"882:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"886:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"911:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3015,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:14","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3011,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:14","typeDescriptions":{}}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3020,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3021,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"949:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2994,"id":3027,"nodeType":"Return","src":"904:48:14"}]},"documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"598:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3029,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:14","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"a","nameLocation":"753:1:14","nodeType":"VariableDeclaration","scope":3029,"src":"746:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2987,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"b","nameLocation":"763:1:14","nodeType":"VariableDeclaration","scope":3029,"src":"756:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2989,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:14"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3029,"src":"789:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2992,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:14"},"scope":3051,"src":"729:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3049,"nodeType":"Block","src":"1103:158:14","statements":[{"id":3048,"nodeType":"UncheckedBlock","src":"1113:142:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1228:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:14","subExpression":{"id":3043,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1242:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:14","trueExpression":{"id":3042,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1237:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:14","typeDescriptions":{}}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3036,"id":3047,"nodeType":"Return","src":"1213:31:14"}]}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"965:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3050,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:14","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"n","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":3050,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3031,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:14"},"returnParameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3050,"src":"1094:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:14"},"scope":3051,"src":"1048:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3052,"src":"216:1047:14","usedErrors":[],"usedEvents":[]}],"src":"109:1155:14"},"id":14},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[3664]},"id":3665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3053,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"231:1098:15","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3664,"linearizedBaseContracts":[3664],"name":"EnumerableSet","nameLocation":"1338:13:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3062,"members":[{"constant":false,"id":3057,"mutability":"mutable","name":"_values","nameLocation":"1862:7:15","nodeType":"VariableDeclaration","scope":3062,"src":"1852:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3056,"nodeType":"ArrayTypeName","src":"1852:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:15","nodeType":"VariableDeclaration","scope":3062,"src":"2020:44:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3060,"keyName":"value","keyNameLocation":"2036:5:15","keyType":{"id":3058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:15","nodeType":"StructDefinition","scope":3664,"src":"1798:273:15","visibility":"public"},{"body":{"id":3103,"nodeType":"Block","src":"2310:337:15","statements":[{"condition":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:15","subExpression":{"arguments":[{"id":3074,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2335:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2340:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3073,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"2325:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3101,"nodeType":"Block","src":"2604:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3072,"id":3100,"nodeType":"Return","src":"2618:12:15"}]},"id":3102,"nodeType":"IfStatement","src":"2320:321:15","trueBody":{"id":3098,"nodeType":"Block","src":"2348:250:15","statements":[{"expression":{"arguments":[{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2379:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3078,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2362:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"2362:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:15","memberName":"push","nodeType":"MemberAccess","src":"2362:16:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"2362:23:15"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3086,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2520:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3061,"src":"2520:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3090,"indexExpression":{"id":3088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2535:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3091,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2544:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"2544:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:15","memberName":"length","nodeType":"MemberAccess","src":"2544:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"2520:42:15"},{"expression":{"hexValue":"74727565","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3072,"id":3097,"nodeType":"Return","src":"2576:11:15"}]}}]},"documentation":{"id":3063,"nodeType":"StructuredDocumentation","src":"2077:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3104,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:15","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"set","nameLocation":"2267:3:15","nodeType":"VariableDeclaration","scope":3104,"src":"2255:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3065,"nodeType":"UserDefinedTypeName","pathNode":{"id":3064,"name":"Set","nameLocations":["2255:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"2255:3:15"},"referencedDeclaration":3062,"src":"2255:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"value","nameLocation":"2280:5:15","nodeType":"VariableDeclaration","scope":3104,"src":"2272:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:15"},"returnParameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3104,"src":"2304:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3070,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:15"},"scope":3664,"src":"2241:406:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3187,"nodeType":"Block","src":"2887:1296:15","statements":[{"assignments":[3116],"declarations":[{"constant":false,"id":3116,"mutability":"mutable","name":"position","nameLocation":"2999:8:15","nodeType":"VariableDeclaration","scope":3187,"src":"2991:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3121,"initialValue":{"baseExpression":{"expression":{"id":3117,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3010:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3061,"src":"3010:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3120,"indexExpression":{"id":3119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3025:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3046:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3185,"nodeType":"Block","src":"4140:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3114,"id":3184,"nodeType":"Return","src":"4154:12:15"}]},"id":3186,"nodeType":"IfStatement","src":"3042:1135:15","trueBody":{"id":3182,"nodeType":"Block","src":"3061:1073:15","statements":[{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:15","nodeType":"VariableDeclaration","scope":3182,"src":"3413:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3130,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3434:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:15"},{"assignments":[3132],"declarations":[{"constant":false,"id":3132,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:15","nodeType":"VariableDeclaration","scope":3182,"src":"3460:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3138,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3133,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3480:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"3480:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:15","memberName":"length","nodeType":"MemberAccess","src":"3480:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"3521:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3140,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3535:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3166,"nodeType":"IfStatement","src":"3517:378:15","trueBody":{"id":3165,"nodeType":"Block","src":"3546:349:15","statements":[{"assignments":[3143],"declarations":[{"constant":false,"id":3143,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:15","nodeType":"VariableDeclaration","scope":3165,"src":"3564:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3148,"initialValue":{"baseExpression":{"expression":{"id":3144,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3584:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"3584:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3147,"indexExpression":{"id":3146,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3596:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:15"},{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3149,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3705:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"3705:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3153,"indexExpression":{"id":3151,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"3717:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3154,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3731:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3156,"nodeType":"ExpressionStatement","src":"3705:35:15"},{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3157,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3844:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3061,"src":"3844:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3161,"indexExpression":{"id":3159,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3859:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3162,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3872:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3164,"nodeType":"ExpressionStatement","src":"3844:36:15"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3167,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3973:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"3973:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:15","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"ExpressionStatement","src":"3973:17:15"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:15","subExpression":{"baseExpression":{"expression":{"id":3174,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"4076:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3061,"src":"4076:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3177,"indexExpression":{"id":3176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"4091:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"ExpressionStatement","src":"4069:28:15"},{"expression":{"hexValue":"74727565","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3114,"id":3181,"nodeType":"Return","src":"4112:11:15"}]}}]},"documentation":{"id":3105,"nodeType":"StructuredDocumentation","src":"2653:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:15","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"set","nameLocation":"2844:3:15","nodeType":"VariableDeclaration","scope":3188,"src":"2832:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3107,"nodeType":"UserDefinedTypeName","pathNode":{"id":3106,"name":"Set","nameLocations":["2832:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"2832:3:15"},"referencedDeclaration":3062,"src":"2832:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"value","nameLocation":"2857:5:15","nodeType":"VariableDeclaration","scope":3188,"src":"2849:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:15"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"2881:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3112,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:15"},"scope":3664,"src":"2815:1368:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3206,"nodeType":"Block","src":"4343:50:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3199,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4360:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:15","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3061,"src":"4360:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3202,"indexExpression":{"id":3201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4375:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3198,"id":3205,"nodeType":"Return","src":"4353:33:15"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"4189:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":3207,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:15","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"set","nameLocation":"4295:3:15","nodeType":"VariableDeclaration","scope":3207,"src":"4283:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3191,"nodeType":"UserDefinedTypeName","pathNode":{"id":3190,"name":"Set","nameLocations":["4283:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"4283:3:15"},"referencedDeclaration":3062,"src":"4283:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"4308:5:15","nodeType":"VariableDeclaration","scope":3207,"src":"4300:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:15"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3207,"src":"4337:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3196,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:15"},"scope":3664,"src":"4264:129:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3220,"nodeType":"Block","src":"4539:42:15","statements":[{"expression":{"expression":{"expression":{"id":3216,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"4556:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"4556:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:15","memberName":"length","nodeType":"MemberAccess","src":"4556:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3215,"id":3219,"nodeType":"Return","src":"4549:25:15"}]},"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"4399:70:15","text":" @dev Returns the number of values on the set. O(1)."},"id":3221,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:15","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"set","nameLocation":"4503:3:15","nodeType":"VariableDeclaration","scope":3221,"src":"4491:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3210,"nodeType":"UserDefinedTypeName","pathNode":{"id":3209,"name":"Set","nameLocations":["4491:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"4491:3:15"},"referencedDeclaration":3062,"src":"4491:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:15"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"4530:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:15"},"scope":3664,"src":"4474:107:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3237,"nodeType":"Block","src":"4999:42:15","statements":[{"expression":{"baseExpression":{"expression":{"id":3232,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"5016:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"5016:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3235,"indexExpression":{"id":3234,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"5028:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3231,"id":3236,"nodeType":"Return","src":"5009:25:15"}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"4587:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:15","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"set","nameLocation":"4948:3:15","nodeType":"VariableDeclaration","scope":3238,"src":"4936:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3224,"nodeType":"UserDefinedTypeName","pathNode":{"id":3223,"name":"Set","nameLocations":["4936:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"4936:3:15"},"referencedDeclaration":3062,"src":"4936:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"index","nameLocation":"4961:5:15","nodeType":"VariableDeclaration","scope":3238,"src":"4953:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:15"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"4990:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:15"},"scope":3664,"src":"4923:118:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3251,"nodeType":"Block","src":"5655:35:15","statements":[{"expression":{"expression":{"id":3248,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5672:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:15","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"5672:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3247,"id":3250,"nodeType":"Return","src":"5665:18:15"}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"5047:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3252,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:15","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"set","nameLocation":"5610:3:15","nodeType":"VariableDeclaration","scope":3252,"src":"5598:15:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3241,"nodeType":"UserDefinedTypeName","pathNode":{"id":3240,"name":"Set","nameLocations":["5598:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"5598:3:15"},"referencedDeclaration":3062,"src":"5598:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:15"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3252,"src":"5637:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3245,"nodeType":"ArrayTypeName","src":"5637:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:15"},"scope":3664,"src":"5581:109:15","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3256,"members":[{"constant":false,"id":3255,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:15","nodeType":"VariableDeclaration","scope":3256,"src":"5743:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3254,"nodeType":"UserDefinedTypeName","pathNode":{"id":3253,"name":"Set","nameLocations":["5743:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"5743:3:15"},"referencedDeclaration":3062,"src":"5743:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:15","nodeType":"StructDefinition","scope":3664,"src":"5715:45:15","visibility":"public"},{"body":{"id":3273,"nodeType":"Block","src":"6006:47:15","statements":[{"expression":{"arguments":[{"expression":{"id":3268,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"6028:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3255,"src":"6028:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6040:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3267,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"6023:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3266,"id":3272,"nodeType":"Return","src":"6016:30:15"}]},"documentation":{"id":3257,"nodeType":"StructuredDocumentation","src":"5766:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3274,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:15","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"set","nameLocation":"5962:3:15","nodeType":"VariableDeclaration","scope":3274,"src":"5943:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3259,"nodeType":"UserDefinedTypeName","pathNode":{"id":3258,"name":"Bytes32Set","nameLocations":["5943:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3256,"src":"5943:10:15"},"referencedDeclaration":3256,"src":"5943:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"value","nameLocation":"5975:5:15","nodeType":"VariableDeclaration","scope":3274,"src":"5967:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:15"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"6000:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3264,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:15"},"scope":3664,"src":"5930:123:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"6300:50:15","statements":[{"expression":{"arguments":[{"expression":{"id":3286,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"6325:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3255,"src":"6325:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"6337:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3285,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"6317:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3284,"id":3290,"nodeType":"Return","src":"6310:33:15"}]},"documentation":{"id":3275,"nodeType":"StructuredDocumentation","src":"6059:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:15","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"set","nameLocation":"6256:3:15","nodeType":"VariableDeclaration","scope":3292,"src":"6237:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3277,"nodeType":"UserDefinedTypeName","pathNode":{"id":3276,"name":"Bytes32Set","nameLocations":["6237:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3256,"src":"6237:10:15"},"referencedDeclaration":3256,"src":"6237:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"value","nameLocation":"6269:5:15","nodeType":"VariableDeclaration","scope":3292,"src":"6261:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:15"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"6294:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3282,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:15"},"scope":3664,"src":"6221:129:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"6517:52:15","statements":[{"expression":{"arguments":[{"expression":{"id":3304,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6544:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3255,"src":"6544:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"6556:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3303,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"6534:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3302,"id":3308,"nodeType":"Return","src":"6527:35:15"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"6356:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:15","nodeType":"FunctionDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"set","nameLocation":"6468:3:15","nodeType":"VariableDeclaration","scope":3310,"src":"6449:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3295,"nodeType":"UserDefinedTypeName","pathNode":{"id":3294,"name":"Bytes32Set","nameLocations":["6449:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3256,"src":"6449:10:15"},"referencedDeclaration":3256,"src":"6449:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"value","nameLocation":"6481:5:15","nodeType":"VariableDeclaration","scope":3310,"src":"6473:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:15"},"returnParameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3310,"src":"6511:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3300,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:15"},"scope":3664,"src":"6431:138:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"6722:43:15","statements":[{"expression":{"arguments":[{"expression":{"id":3320,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"6747:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3255,"src":"6747:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3319,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"6739:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3318,"id":3323,"nodeType":"Return","src":"6732:26:15"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"6575:70:15","text":" @dev Returns the number of values in the set. O(1)."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:15","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"set","nameLocation":"6685:3:15","nodeType":"VariableDeclaration","scope":3325,"src":"6666:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3313,"nodeType":"UserDefinedTypeName","pathNode":{"id":3312,"name":"Bytes32Set","nameLocations":["6666:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3256,"src":"6666:10:15"},"referencedDeclaration":3256,"src":"6666:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:15"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3325,"src":"6713:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:15"},"scope":3664,"src":"6650:115:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3342,"nodeType":"Block","src":"7190:46:15","statements":[{"expression":{"arguments":[{"expression":{"id":3337,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"7211:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3255,"src":"7211:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3339,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"7223:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"7207:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3335,"id":3341,"nodeType":"Return","src":"7200:29:15"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"6771:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:15","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"set","nameLocation":"7138:3:15","nodeType":"VariableDeclaration","scope":3343,"src":"7119:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3328,"nodeType":"UserDefinedTypeName","pathNode":{"id":3327,"name":"Bytes32Set","nameLocations":["7119:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3256,"src":"7119:10:15"},"referencedDeclaration":3256,"src":"7119:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"index","nameLocation":"7151:5:15","nodeType":"VariableDeclaration","scope":3343,"src":"7143:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:15"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3343,"src":"7181:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:15"},"scope":3664,"src":"7107:129:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"7857:219:15","statements":[{"assignments":[3357],"declarations":[{"constant":false,"id":3357,"mutability":"mutable","name":"store","nameLocation":"7884:5:15","nodeType":"VariableDeclaration","scope":3372,"src":"7867:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3356,"nodeType":"ArrayTypeName","src":"7867:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3362,"initialValue":{"arguments":[{"expression":{"id":3359,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"7900:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3255,"src":"7900:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3358,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"7892:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:15"},{"assignments":[3367],"declarations":[{"constant":false,"id":3367,"mutability":"mutable","name":"result","nameLocation":"7938:6:15","nodeType":"VariableDeclaration","scope":3372,"src":"7921:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3366,"nodeType":"ArrayTypeName","src":"7921:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3368,"nodeType":"VariableDeclarationStatement","src":"7921:23:15"},{"AST":{"nodeType":"YulBlock","src":"8007:39:15","statements":[{"nodeType":"YulAssignment","src":"8021:15:15","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3367,"isOffset":false,"isSlot":false,"src":"8021:6:15","valueSize":1},{"declaration":3357,"isOffset":false,"isSlot":false,"src":"8031:5:15","valueSize":1}],"id":3369,"nodeType":"InlineAssembly","src":"7998:48:15"},{"expression":{"id":3370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"8063:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3352,"id":3371,"nodeType":"Return","src":"8056:13:15"}]},"documentation":{"id":3344,"nodeType":"StructuredDocumentation","src":"7242:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:15","nodeType":"FunctionDefinition","parameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"set","nameLocation":"7811:3:15","nodeType":"VariableDeclaration","scope":3373,"src":"7792:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3346,"nodeType":"UserDefinedTypeName","pathNode":{"id":3345,"name":"Bytes32Set","nameLocations":["7792:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3256,"src":"7792:10:15"},"referencedDeclaration":3256,"src":"7792:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3256_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:15"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3373,"src":"7839:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3350,"nodeType":"ArrayTypeName","src":"7839:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:15"},"scope":3664,"src":"7776:300:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3377,"members":[{"constant":false,"id":3376,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:15","nodeType":"VariableDeclaration","scope":3377,"src":"8129:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3375,"nodeType":"UserDefinedTypeName","pathNode":{"id":3374,"name":"Set","nameLocations":["8129:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"8129:3:15"},"referencedDeclaration":3062,"src":"8129:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:15","nodeType":"StructDefinition","scope":3664,"src":"8101:45:15","visibility":"public"},{"body":{"id":3403,"nodeType":"Block","src":"8392:74:15","statements":[{"expression":{"arguments":[{"expression":{"id":3389,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"8414:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"8414:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"8450:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3395,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:15","typeDescriptions":{}}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:15","typeDescriptions":{}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:15","typeDescriptions":{}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3388,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"8409:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3387,"id":3402,"nodeType":"Return","src":"8402:57:15"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"8152:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:15","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"set","nameLocation":"8348:3:15","nodeType":"VariableDeclaration","scope":3404,"src":"8329:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3380,"nodeType":"UserDefinedTypeName","pathNode":{"id":3379,"name":"AddressSet","nameLocations":["8329:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"8329:10:15"},"referencedDeclaration":3377,"src":"8329:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"value","nameLocation":"8361:5:15","nodeType":"VariableDeclaration","scope":3404,"src":"8353:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3382,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:15"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3404,"src":"8386:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3385,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:15"},"scope":3664,"src":"8316:150:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3430,"nodeType":"Block","src":"8713:77:15","statements":[{"expression":{"arguments":[{"expression":{"id":3416,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8738:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"8738:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"8774:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3422,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:15","typeDescriptions":{}}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:15","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:15","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3415,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"8730:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3414,"id":3429,"nodeType":"Return","src":"8723:60:15"}]},"documentation":{"id":3405,"nodeType":"StructuredDocumentation","src":"8472:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3431,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:15","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"set","nameLocation":"8669:3:15","nodeType":"VariableDeclaration","scope":3431,"src":"8650:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3407,"nodeType":"UserDefinedTypeName","pathNode":{"id":3406,"name":"AddressSet","nameLocations":["8650:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"8650:10:15"},"referencedDeclaration":3377,"src":"8650:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"value","nameLocation":"8682:5:15","nodeType":"VariableDeclaration","scope":3431,"src":"8674:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3409,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:15"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3431,"src":"8707:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3412,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:15"},"scope":3664,"src":"8634:156:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3457,"nodeType":"Block","src":"8957:79:15","statements":[{"expression":{"arguments":[{"expression":{"id":3443,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"8984:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"8984:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"9020:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3449,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:15","typeDescriptions":{}}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:15","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:15","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3442,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"8974:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3441,"id":3456,"nodeType":"Return","src":"8967:62:15"}]},"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"8796:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":3458,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:15","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"set","nameLocation":"8908:3:15","nodeType":"VariableDeclaration","scope":3458,"src":"8889:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3434,"nodeType":"UserDefinedTypeName","pathNode":{"id":3433,"name":"AddressSet","nameLocations":["8889:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"8889:10:15"},"referencedDeclaration":3377,"src":"8889:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"value","nameLocation":"8921:5:15","nodeType":"VariableDeclaration","scope":3458,"src":"8913:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3436,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:15"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3458,"src":"8951:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3439,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:15"},"scope":3664,"src":"8871:165:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"9189:43:15","statements":[{"expression":{"arguments":[{"expression":{"id":3468,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"9214:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"9214:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3467,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"9206:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3466,"id":3471,"nodeType":"Return","src":"9199:26:15"}]},"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"9042:70:15","text":" @dev Returns the number of values in the set. O(1)."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:15","nodeType":"FunctionDefinition","parameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"set","nameLocation":"9152:3:15","nodeType":"VariableDeclaration","scope":3473,"src":"9133:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3461,"nodeType":"UserDefinedTypeName","pathNode":{"id":3460,"name":"AddressSet","nameLocations":["9133:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"9133:10:15"},"referencedDeclaration":3377,"src":"9133:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:15"},"returnParameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"9180:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:15"},"scope":3664,"src":"9117:115:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"9657:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3491,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"9702:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"9702:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3493,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"9714:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3490,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"9698:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:15","typeDescriptions":{}}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3486,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:15","typeDescriptions":{}}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:15","typeDescriptions":{}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3483,"id":3498,"nodeType":"Return","src":"9667:56:15"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"9238:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:15","nodeType":"FunctionDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"set","nameLocation":"9605:3:15","nodeType":"VariableDeclaration","scope":3500,"src":"9586:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3476,"nodeType":"UserDefinedTypeName","pathNode":{"id":3475,"name":"AddressSet","nameLocations":["9586:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"9586:10:15"},"referencedDeclaration":3377,"src":"9586:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"index","nameLocation":"9618:5:15","nodeType":"VariableDeclaration","scope":3500,"src":"9610:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:15"},"returnParameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3500,"src":"9648:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3481,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:15"},"scope":3664,"src":"9574:156:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3529,"nodeType":"Block","src":"10351:219:15","statements":[{"assignments":[3514],"declarations":[{"constant":false,"id":3514,"mutability":"mutable","name":"store","nameLocation":"10378:5:15","nodeType":"VariableDeclaration","scope":3529,"src":"10361:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3513,"nodeType":"ArrayTypeName","src":"10361:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3519,"initialValue":{"arguments":[{"expression":{"id":3516,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"10394:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"10394:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3515,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"10386:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:15"},{"assignments":[3524],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"result","nameLocation":"10432:6:15","nodeType":"VariableDeclaration","scope":3529,"src":"10415:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3523,"nodeType":"ArrayTypeName","src":"10415:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3525,"nodeType":"VariableDeclarationStatement","src":"10415:23:15"},{"AST":{"nodeType":"YulBlock","src":"10501:39:15","statements":[{"nodeType":"YulAssignment","src":"10515:15:15","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3524,"isOffset":false,"isSlot":false,"src":"10515:6:15","valueSize":1},{"declaration":3514,"isOffset":false,"isSlot":false,"src":"10525:5:15","valueSize":1}],"id":3526,"nodeType":"InlineAssembly","src":"10492:48:15"},{"expression":{"id":3527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"10557:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3509,"id":3528,"nodeType":"Return","src":"10550:13:15"}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"9736:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3530,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:15","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"set","nameLocation":"10305:3:15","nodeType":"VariableDeclaration","scope":3530,"src":"10286:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3503,"nodeType":"UserDefinedTypeName","pathNode":{"id":3502,"name":"AddressSet","nameLocations":["10286:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":3377,"src":"10286:10:15"},"referencedDeclaration":3377,"src":"10286:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3377_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:15"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3530,"src":"10333:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3507,"nodeType":"ArrayTypeName","src":"10333:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:15"},"scope":3664,"src":"10270:300:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":3534,"members":[{"constant":false,"id":3533,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:15","nodeType":"VariableDeclaration","scope":3534,"src":"10617:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3532,"nodeType":"UserDefinedTypeName","pathNode":{"id":3531,"name":"Set","nameLocations":["10617:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"10617:3:15"},"referencedDeclaration":3062,"src":"10617:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:15","nodeType":"StructDefinition","scope":3664,"src":"10592:42:15","visibility":"public"},{"body":{"id":3554,"nodeType":"Block","src":"10877:56:15","statements":[{"expression":{"arguments":[{"expression":{"id":3546,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"10899:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"10899:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"10919:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:15","typeDescriptions":{}}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3545,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"10894:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3544,"id":3553,"nodeType":"Return","src":"10887:39:15"}]},"documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"10640:159:15","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:15","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"set","nameLocation":"10833:3:15","nodeType":"VariableDeclaration","scope":3555,"src":"10817:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3537,"nodeType":"UserDefinedTypeName","pathNode":{"id":3536,"name":"UintSet","nameLocations":["10817:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"10817:7:15"},"referencedDeclaration":3534,"src":"10817:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"value","nameLocation":"10846:5:15","nodeType":"VariableDeclaration","scope":3555,"src":"10838:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:15"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"10871:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3542,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:15"},"scope":3664,"src":"10804:129:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3575,"nodeType":"Block","src":"11177:59:15","statements":[{"expression":{"arguments":[{"expression":{"id":3567,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"11202:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"11202:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"11222:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:15","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3566,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"11194:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3565,"id":3574,"nodeType":"Return","src":"11187:42:15"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"10939:157:15","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3576,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:15","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"set","nameLocation":"11133:3:15","nodeType":"VariableDeclaration","scope":3576,"src":"11117:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3558,"nodeType":"UserDefinedTypeName","pathNode":{"id":3557,"name":"UintSet","nameLocations":["11117:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"11117:7:15"},"referencedDeclaration":3534,"src":"11117:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"value","nameLocation":"11146:5:15","nodeType":"VariableDeclaration","scope":3576,"src":"11138:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:15"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3576,"src":"11171:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3563,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:15"},"scope":3664,"src":"11101:135:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3596,"nodeType":"Block","src":"11400:61:15","statements":[{"expression":{"arguments":[{"expression":{"id":3588,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"11427:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"11427:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"11447:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:15","typeDescriptions":{}}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3587,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"11417:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3586,"id":3595,"nodeType":"Return","src":"11410:44:15"}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"11242:70:15","text":" @dev Returns true if the value is in the set. O(1)."},"id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:15","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"set","nameLocation":"11351:3:15","nodeType":"VariableDeclaration","scope":3597,"src":"11335:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3579,"nodeType":"UserDefinedTypeName","pathNode":{"id":3578,"name":"UintSet","nameLocations":["11335:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"11335:7:15"},"referencedDeclaration":3534,"src":"11335:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"value","nameLocation":"11364:5:15","nodeType":"VariableDeclaration","scope":3597,"src":"11356:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:15"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3597,"src":"11394:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3584,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:15"},"scope":3664,"src":"11317:144:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"11611:43:15","statements":[{"expression":{"arguments":[{"expression":{"id":3607,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11636:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"11636:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3606,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"11628:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3605,"id":3610,"nodeType":"Return","src":"11621:26:15"}]},"documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"11467:70:15","text":" @dev Returns the number of values in the set. O(1)."},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:15","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"set","nameLocation":"11574:3:15","nodeType":"VariableDeclaration","scope":3612,"src":"11558:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3600,"nodeType":"UserDefinedTypeName","pathNode":{"id":3599,"name":"UintSet","nameLocations":["11558:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"11558:7:15"},"referencedDeclaration":3534,"src":"11558:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:15"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3612,"src":"11602:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:15"},"scope":3664,"src":"11542:112:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3632,"nodeType":"Block","src":"12076:55:15","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3626,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"12105:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"12105:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3628,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"12117:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3625,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"12101:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:15","typeDescriptions":{}}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3622,"id":3631,"nodeType":"Return","src":"12086:38:15"}]},"documentation":{"id":3613,"nodeType":"StructuredDocumentation","src":"11660:331:15","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3633,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:15","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"set","nameLocation":"12024:3:15","nodeType":"VariableDeclaration","scope":3633,"src":"12008:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3615,"nodeType":"UserDefinedTypeName","pathNode":{"id":3614,"name":"UintSet","nameLocations":["12008:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"12008:7:15"},"referencedDeclaration":3534,"src":"12008:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"index","nameLocation":"12037:5:15","nodeType":"VariableDeclaration","scope":3633,"src":"12029:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:15"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"12067:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:15"},"scope":3664,"src":"11996:135:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3662,"nodeType":"Block","src":"12749:219:15","statements":[{"assignments":[3647],"declarations":[{"constant":false,"id":3647,"mutability":"mutable","name":"store","nameLocation":"12776:5:15","nodeType":"VariableDeclaration","scope":3662,"src":"12759:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3646,"nodeType":"ArrayTypeName","src":"12759:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3652,"initialValue":{"arguments":[{"expression":{"id":3649,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"12792:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:15","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"12792:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3062_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3648,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"12784:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3062_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:15"},{"assignments":[3657],"declarations":[{"constant":false,"id":3657,"mutability":"mutable","name":"result","nameLocation":"12830:6:15","nodeType":"VariableDeclaration","scope":3662,"src":"12813:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3656,"nodeType":"ArrayTypeName","src":"12813:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3658,"nodeType":"VariableDeclarationStatement","src":"12813:23:15"},{"AST":{"nodeType":"YulBlock","src":"12899:39:15","statements":[{"nodeType":"YulAssignment","src":"12913:15:15","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3657,"isOffset":false,"isSlot":false,"src":"12913:6:15","valueSize":1},{"declaration":3647,"isOffset":false,"isSlot":false,"src":"12923:5:15","valueSize":1}],"id":3659,"nodeType":"InlineAssembly","src":"12890:48:15"},{"expression":{"id":3660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"12955:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3642,"id":3661,"nodeType":"Return","src":"12948:13:15"}]},"documentation":{"id":3634,"nodeType":"StructuredDocumentation","src":"12137:529:15","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3663,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:15","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"set","nameLocation":"12703:3:15","nodeType":"VariableDeclaration","scope":3663,"src":"12687:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3636,"nodeType":"UserDefinedTypeName","pathNode":{"id":3635,"name":"UintSet","nameLocations":["12687:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"12687:7:15"},"referencedDeclaration":3534,"src":"12687:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:15"},"returnParameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3663,"src":"12731:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3640,"nodeType":"ArrayTypeName","src":"12731:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:15"},"scope":3664,"src":"12671:297:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3665,"src":"1330:11640:15","usedErrors":[],"usedEvents":[]}],"src":"205:12766:15"},"id":15},"contracts/HydraPool.sol":{"ast":{"absolutePath":"contracts/HydraPool.sol","exportedSymbols":{"Context":[1601],"ERC165":[1880],"ERC721":[1408],"FlashLoanReceiverInterface":[6822],"Helper":[7050],"HydraPool":[6456],"IERC165":[1892],"IERC20":[373],"IERC20Metadata":[399],"IERC721":[1525],"IERC721Errors":[248],"IERC721Metadata":[1571],"IERC721Receiver":[1543],"InterestRate":[7149],"NFTPledging":[6637],"Pausing":[7414],"Strings":[1856],"Structs":[6897],"VaultAccounting":[7263]},"id":6457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3666,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":1409,"src":"59:57:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/Helper.sol","file":"./libraries/Helper.sol","id":3669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":7051,"src":"117:46:16","symbolAliases":[{"foreign":{"id":3668,"name":"Helper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"125:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/VaultAccounting.sol","file":"./libraries/VaultAccounting.sol","id":3671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":7264,"src":"164:64:16","symbolAliases":[{"foreign":{"id":3670,"name":"VaultAccounting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"172:15:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/InterestRate.sol","file":"./libraries/InterestRate.sol","id":3673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":7150,"src":"229:58:16","symbolAliases":[{"foreign":{"id":3672,"name":"InterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"237:12:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/utils/Pausing.sol","file":"./utils/Pausing.sol","id":3675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":7415,"src":"288:44:16","symbolAliases":[{"foreign":{"id":3674,"name":"Pausing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"296:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/Structs.sol","file":"./interfaces/Structs.sol","id":3677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":6898,"src":"333:49:16","symbolAliases":[{"foreign":{"id":3676,"name":"Structs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"341:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/FlashLoanReceiverInterface.sol","file":"./interfaces/FlashLoanReceiverInterface.sol","id":3679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":6823,"src":"383:87:16","symbolAliases":[{"foreign":{"id":3678,"name":"FlashLoanReceiverInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"391:26:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/NFTPledging.sol","file":"./NFTPledging.sol","id":3681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":6638,"src":"471:46:16","symbolAliases":[{"foreign":{"id":3680,"name":"NFTPledging","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"479:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Helper.sol","file":"./libraries/Helper.sol","id":3682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6457,"sourceUnit":7051,"src":"518:32:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3683,"name":"Pausing","nameLocations":["574:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":7414,"src":"574:7:16"},"id":3684,"nodeType":"InheritanceSpecifier","src":"574:7:16"},{"baseName":{"id":3685,"name":"NFTPledging","nameLocations":["583:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":6637,"src":"583:11:16"},"id":3686,"nodeType":"InheritanceSpecifier","src":"583:11:16"}],"canonicalName":"HydraPool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6456,"linearizedBaseContracts":[6456,6637,1543,6800,7305,7414,158,1601],"name":"HydraPool","nameLocation":"561:9:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3690,"libraryName":{"id":3687,"name":"VaultAccounting","nameLocations":["607:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":7263,"src":"607:15:16"},"nodeType":"UsingForDirective","src":"601:40:16","typeName":{"id":3689,"nodeType":"UserDefinedTypeName","pathNode":{"id":3688,"name":"Structs.Vault","nameLocations":["627:7:16","635:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":6845,"src":"627:13:16"},"referencedDeclaration":6845,"src":"627:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage_ptr","typeString":"struct Structs.Vault"}}},{"global":false,"id":3694,"libraryName":{"id":3691,"name":"InterestRate","nameLocations":["652:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":7149,"src":"652:12:16"},"nodeType":"UsingForDirective","src":"646:41:16","typeName":{"id":3693,"nodeType":"UserDefinedTypeName","pathNode":{"id":3692,"name":"Structs.VaultInfo","nameLocations":["669:7:16","677:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":6876,"src":"669:17:16"},"referencedDeclaration":6876,"src":"669:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo"}}},{"global":false,"id":3697,"libraryName":{"id":3695,"name":"Helper","nameLocations":["698:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":7050,"src":"698:6:16"},"nodeType":"UsingForDirective","src":"692:25:16","typeName":{"id":3696,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":3702,"mutability":"mutable","name":"vaults","nameLocation":"770:6:16","nodeType":"VariableDeclaration","scope":6456,"src":"723:53:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault)"},"typeName":{"id":3701,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"723:38:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3700,"nodeType":"UserDefinedTypeName","pathNode":{"id":3699,"name":"Structs.TokenVault","nameLocations":["742:7:16","750:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":6855,"src":"742:18:16"},"referencedDeclaration":6855,"src":"742:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage_ptr","typeString":"struct Structs.TokenVault"}}},"visibility":"private"},{"constant":false,"id":3709,"mutability":"mutable","name":"userShares","nameLocation":"860:10:16","nodeType":"VariableDeclaration","scope":6456,"src":"782:88:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares))"},"typeName":{"id":3708,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3703,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"782:61:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3707,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3704,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"801:41:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3706,"nodeType":"UserDefinedTypeName","pathNode":{"id":3705,"name":"Structs.AccountShares","nameLocations":["820:7:16","828:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":6840,"src":"820:21:16"},"referencedDeclaration":6840,"src":"820:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage_ptr","typeString":"struct Structs.AccountShares"}}}},"visibility":"private"},{"constant":false,"id":3718,"mutability":"mutable","name":"nftLiquidationWarning","nameLocation":"978:21:16","nodeType":"VariableDeclaration","scope":6456,"src":"876:123:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning)))"},"typeName":{"id":3717,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"876:85:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3716,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3711,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"895:65:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3715,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"914:45:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$","typeString":"mapping(uint256 => struct Structs.LiquidatedWarning)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3714,"nodeType":"UserDefinedTypeName","pathNode":{"id":3713,"name":"Structs.LiquidatedWarning","nameLocations":["933:7:16","941:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":6881,"src":"933:25:16"},"referencedDeclaration":6881,"src":"933:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning"}}}}},"visibility":"private"},{"errorSelector":"5159367e","id":3722,"name":"TooHighSlipage","nameLocation":"1012:14:16","nodeType":"ErrorDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"sharesOutOrAmountIn","nameLocation":"1035:19:16","nodeType":"VariableDeclaration","scope":3722,"src":"1027:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:29:16"},"src":"1006:50:16"},{"errorSelector":"f4d678b8","id":3724,"name":"InsufficientBalance","nameLocation":"1067:19:16","nodeType":"ErrorDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[],"src":"1086:2:16"},"src":"1061:28:16"},{"errorSelector":"74fa216b","id":3726,"name":"BelowHealthFactor","nameLocation":"1100:17:16","nodeType":"ErrorDefinition","parameters":{"id":3725,"nodeType":"ParameterList","parameters":[],"src":"1117:2:16"},"src":"1094:26:16"},{"errorSelector":"c2bcb59c","id":3728,"name":"BorrowerIsSolvant","nameLocation":"1131:17:16","nodeType":"ErrorDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[],"src":"1148:2:16"},"src":"1125:26:16"},{"errorSelector":"44511af1","id":3730,"name":"SelfLiquidation","nameLocation":"1162:15:16","nodeType":"ErrorDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[],"src":"1177:2:16"},"src":"1156:24:16"},{"errorSelector":"6560982d","id":3738,"name":"InvalidNFTLiquidation","nameLocation":"1191:21:16","nodeType":"ErrorDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"borrower","nameLocation":"1230:8:16","nodeType":"VariableDeclaration","scope":3738,"src":"1222:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3731,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"nftAddress","nameLocation":"1256:10:16","nodeType":"VariableDeclaration","scope":3738,"src":"1248:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3733,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"tokenId","nameLocation":"1284:7:16","nodeType":"VariableDeclaration","scope":3738,"src":"1276:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1276:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:85:16"},"src":"1185:113:16"},{"errorSelector":"db9a092c","id":3742,"name":"InvalidFeeRate","nameLocation":"1309:14:16","nodeType":"ErrorDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"fee","nameLocation":"1332:3:16","nodeType":"VariableDeclaration","scope":3742,"src":"1324:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1323:13:16"},"src":"1303:34:16"},{"errorSelector":"5f7918ed","id":3746,"name":"InvalidReserveRatio","nameLocation":"1348:19:16","nodeType":"ErrorDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"ratio","nameLocation":"1376:5:16","nodeType":"VariableDeclaration","scope":3746,"src":"1368:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1368:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1367:15:16"},"src":"1342:41:16"},{"errorSelector":"7c154f89","id":3750,"name":"FlashloanPaused","nameLocation":"1394:15:16","nodeType":"ErrorDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"token","nameLocation":"1418:5:16","nodeType":"VariableDeclaration","scope":3750,"src":"1410:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3747,"name":"address","nodeType":"ElementaryTypeName","src":"1410:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1409:15:16"},"src":"1388:37:16"},{"errorSelector":"fd5ead80","id":3752,"name":"FlashloanFailed","nameLocation":"1436:15:16","nodeType":"ErrorDefinition","parameters":{"id":3751,"nodeType":"ParameterList","parameters":[],"src":"1451:2:16"},"src":"1430:24:16"},{"errorSelector":"049c49b6","id":3754,"name":"NoLiquidationWarning","nameLocation":"1465:20:16","nodeType":"ErrorDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[],"src":"1485:2:16"},"src":"1459:29:16"},{"errorSelector":"606f9ea3","id":3756,"name":"WarningDelayHasNotPassed","nameLocation":"1499:24:16","nodeType":"ErrorDefinition","parameters":{"id":3755,"nodeType":"ParameterList","parameters":[],"src":"1523:2:16"},"src":"1493:33:16"},{"errorSelector":"f67d9a27","id":3758,"name":"MustPayMoreDebt","nameLocation":"1537:15:16","nodeType":"ErrorDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[],"src":"1552:2:16"},"src":"1531:24:16"},{"errorSelector":"728e9569","id":3760,"name":"LiquidatorDelayHasNotPassed","nameLocation":"1566:27:16","nodeType":"ErrorDefinition","parameters":{"id":3759,"nodeType":"ParameterList","parameters":[],"src":"1593:2:16"},"src":"1560:36:16"},{"errorSelector":"521299a9","id":3762,"name":"EmptyArray","nameLocation":"1607:10:16","nodeType":"ErrorDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[],"src":"1617:2:16"},"src":"1601:19:16"},{"errorSelector":"b7c1140d","id":3764,"name":"ArrayMismatch","nameLocation":"1631:13:16","nodeType":"ErrorDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[],"src":"1644:2:16"},"src":"1625:22:16"},{"anonymous":false,"eventSelector":"dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7","id":3774,"name":"Deposit","nameLocation":"1659:7:16","nodeType":"EventDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1675:4:16","nodeType":"VariableDeclaration","scope":3774,"src":"1667:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3765,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3768,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1689:5:16","nodeType":"VariableDeclaration","scope":3774,"src":"1681:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3767,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3770,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1704:6:16","nodeType":"VariableDeclaration","scope":3774,"src":"1696:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1696:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3772,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1720:6:16","nodeType":"VariableDeclaration","scope":3774,"src":"1712:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1666:61:16"},"src":"1653:75:16"},{"anonymous":false,"eventSelector":"c1561b330e73faa7d5d1ac03c968d8f359b0191ccdb9cc002cf7d8eb6ae038cb","id":3784,"name":"Borrow","nameLocation":"1739:6:16","nodeType":"EventDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1754:4:16","nodeType":"VariableDeclaration","scope":3784,"src":"1746:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3775,"name":"address","nodeType":"ElementaryTypeName","src":"1746:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3778,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1768:5:16","nodeType":"VariableDeclaration","scope":3784,"src":"1760:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3777,"name":"address","nodeType":"ElementaryTypeName","src":"1760:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3780,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1783:6:16","nodeType":"VariableDeclaration","scope":3784,"src":"1775:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1775:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3782,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1799:6:16","nodeType":"VariableDeclaration","scope":3784,"src":"1791:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1745:61:16"},"src":"1733:74:16"},{"anonymous":false,"eventSelector":"e4a1ae657f49cb1fb1c7d3a94ae6093565c4c8c0e03de488f79c377c3c3a24e0","id":3794,"name":"Repay","nameLocation":"1818:5:16","nodeType":"EventDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1832:4:16","nodeType":"VariableDeclaration","scope":3794,"src":"1824:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"1824:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3788,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1846:5:16","nodeType":"VariableDeclaration","scope":3794,"src":"1838:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3787,"name":"address","nodeType":"ElementaryTypeName","src":"1838:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3790,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1861:6:16","nodeType":"VariableDeclaration","scope":3794,"src":"1853:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3792,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1877:6:16","nodeType":"VariableDeclaration","scope":3794,"src":"1869:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1869:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:61:16"},"src":"1812:73:16"},{"anonymous":false,"eventSelector":"f341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567","id":3804,"name":"Withdraw","nameLocation":"1896:8:16","nodeType":"EventDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1913:4:16","nodeType":"VariableDeclaration","scope":3804,"src":"1905:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3795,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3798,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1927:5:16","nodeType":"VariableDeclaration","scope":3804,"src":"1919:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3797,"name":"address","nodeType":"ElementaryTypeName","src":"1919:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3800,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1942:6:16","nodeType":"VariableDeclaration","scope":3804,"src":"1934:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"1934:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1958:6:16","nodeType":"VariableDeclaration","scope":3804,"src":"1950:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:61:16"},"src":"1890:76:16"},{"anonymous":false,"eventSelector":"fcbc974bf3a532baf2bb229db3c37fd58299b62d2d1db6a855dac5b693bb6ff3","id":3816,"name":"Liquidated","nameLocation":"1977:10:16","nodeType":"EventDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"indexed":false,"mutability":"mutable","name":"borrower","nameLocation":"2005:8:16","nodeType":"VariableDeclaration","scope":3816,"src":"1997:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3808,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"2031:10:16","nodeType":"VariableDeclaration","scope":3816,"src":"2023:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3810,"indexed":false,"mutability":"mutable","name":"repaidAmount","nameLocation":"2056:12:16","nodeType":"VariableDeclaration","scope":3816,"src":"2051:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint","nodeType":"ElementaryTypeName","src":"2051:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3812,"indexed":false,"mutability":"mutable","name":"liquidatedCollateral","nameLocation":"2086:20:16","nodeType":"VariableDeclaration","scope":3816,"src":"2078:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3814,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"2124:6:16","nodeType":"VariableDeclaration","scope":3816,"src":"2116:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:149:16"},"src":"1971:166:16"},{"anonymous":false,"eventSelector":"cff294bc3695620876ce22ec38b97aaa07675b271c26a784ebeba510e59b1f65","id":3822,"name":"UpdateInterestRate","nameLocation":"2148:18:16","nodeType":"EventDefinition","parameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"indexed":false,"mutability":"mutable","name":"elapsedTime","nameLocation":"2175:11:16","nodeType":"VariableDeclaration","scope":3822,"src":"2167:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2167:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3820,"indexed":false,"mutability":"mutable","name":"newInterestRate","nameLocation":"2195:15:16","nodeType":"VariableDeclaration","scope":3822,"src":"2188:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3819,"name":"uint64","nodeType":"ElementaryTypeName","src":"2188:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2166:45:16"},"src":"2142:70:16"},{"anonymous":false,"eventSelector":"f4fc4a63006144011c7214b4099772de96603a49b426f18267c33b3c1ec35bed","id":3832,"name":"AccuredInterest","nameLocation":"2223:15:16","nodeType":"EventDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"indexed":false,"mutability":"mutable","name":"interestRatePerSec","nameLocation":"2255:18:16","nodeType":"VariableDeclaration","scope":3832,"src":"2248:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3823,"name":"uint64","nodeType":"ElementaryTypeName","src":"2248:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3826,"indexed":false,"mutability":"mutable","name":"interestEarned","nameLocation":"2291:14:16","nodeType":"VariableDeclaration","scope":3832,"src":"2283:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"indexed":false,"mutability":"mutable","name":"feesAmount","nameLocation":"2323:10:16","nodeType":"VariableDeclaration","scope":3832,"src":"2315:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2315:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3830,"indexed":false,"mutability":"mutable","name":"feesShare","nameLocation":"2351:9:16","nodeType":"VariableDeclaration","scope":3832,"src":"2343:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2238:128:16"},"src":"2217:150:16"},{"anonymous":false,"eventSelector":"76f226d30806b7b34cf90ae0330c53df665a4127510985a1a3958387039b9d75","id":3847,"name":"FlashloanSuccess","nameLocation":"2378:16:16","nodeType":"EventDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"indexed":false,"mutability":"mutable","name":"initiator","nameLocation":"2412:9:16","nodeType":"VariableDeclaration","scope":3847,"src":"2404:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3833,"name":"address","nodeType":"ElementaryTypeName","src":"2404:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3837,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"2441:5:16","nodeType":"VariableDeclaration","scope":3847,"src":"2431:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3835,"name":"address","nodeType":"ElementaryTypeName","src":"2431:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3836,"nodeType":"ArrayTypeName","src":"2431:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3840,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2466:6:16","nodeType":"VariableDeclaration","scope":3847,"src":"2456:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3839,"nodeType":"ArrayTypeName","src":"2456:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3843,"indexed":false,"mutability":"mutable","name":"fees","nameLocation":"2492:4:16","nodeType":"VariableDeclaration","scope":3847,"src":"2482:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3842,"nodeType":"ArrayTypeName","src":"2482:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3845,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"2512:4:16","nodeType":"VariableDeclaration","scope":3847,"src":"2506:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3844,"name":"bytes","nodeType":"ElementaryTypeName","src":"2506:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2394:128:16"},"src":"2372:151:16"},{"anonymous":false,"eventSelector":"c7e8b1bdbecdc8a549557efb2a2ab715cff51630caead31610000019e61dfa4b","id":3855,"name":"DepositNFT","nameLocation":"2534:10:16","nodeType":"EventDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2553:4:16","nodeType":"VariableDeclaration","scope":3855,"src":"2545:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3848,"name":"address","nodeType":"ElementaryTypeName","src":"2545:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3851,"indexed":false,"mutability":"mutable","name":"nftAddress","nameLocation":"2567:10:16","nodeType":"VariableDeclaration","scope":3855,"src":"2559:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3853,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2587:7:16","nodeType":"VariableDeclaration","scope":3855,"src":"2579:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:51:16"},"src":"2528:68:16"},{"anonymous":false,"eventSelector":"a766742a23fe9ecbd32c553cd9ad3115b2d15c6b72cd5e95858f5a911d55cb45","id":3865,"name":"WithdrawNFT","nameLocation":"2607:11:16","nodeType":"EventDefinition","parameters":{"id":3864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2636:4:16","nodeType":"VariableDeclaration","scope":3865,"src":"2628:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"2628:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3859,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"2658:9:16","nodeType":"VariableDeclaration","scope":3865,"src":"2650:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3858,"name":"address","nodeType":"ElementaryTypeName","src":"2650:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3861,"indexed":false,"mutability":"mutable","name":"nftAddress","nameLocation":"2685:10:16","nodeType":"VariableDeclaration","scope":3865,"src":"2677:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3860,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3863,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2713:7:16","nodeType":"VariableDeclaration","scope":3865,"src":"2705:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2618:108:16"},"src":"2601:126:16"},{"anonymous":false,"eventSelector":"2d2541220f1c874dae8d6fa2dc8987e584ca7efede079594de6066330745daa5","id":3875,"name":"LiquidatingNFTWarning","nameLocation":"2738:21:16","nodeType":"EventDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"2777:10:16","nodeType":"VariableDeclaration","scope":3875,"src":"2769:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"2769:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3869,"indexed":false,"mutability":"mutable","name":"borrower","nameLocation":"2805:8:16","nodeType":"VariableDeclaration","scope":3875,"src":"2797:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3868,"name":"address","nodeType":"ElementaryTypeName","src":"2797:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3871,"indexed":false,"mutability":"mutable","name":"nftAddress","nameLocation":"2831:10:16","nodeType":"VariableDeclaration","scope":3875,"src":"2823:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3870,"name":"address","nodeType":"ElementaryTypeName","src":"2823:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3873,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2859:7:16","nodeType":"VariableDeclaration","scope":3875,"src":"2851:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2851:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2759:113:16"},"src":"2732:141:16"},{"anonymous":false,"eventSelector":"077c7becfad752fe6ee0143187438b002e564c671aabfd4b3b3c4343a2e79524","id":3883,"name":"LiquidatingNFTStopped","nameLocation":"2884:21:16","nodeType":"EventDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"indexed":false,"mutability":"mutable","name":"borrower","nameLocation":"2923:8:16","nodeType":"VariableDeclaration","scope":3883,"src":"2915:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3876,"name":"address","nodeType":"ElementaryTypeName","src":"2915:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3879,"indexed":false,"mutability":"mutable","name":"nftAddres","nameLocation":"2949:9:16","nodeType":"VariableDeclaration","scope":3883,"src":"2941:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"2941:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3881,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2976:7:16","nodeType":"VariableDeclaration","scope":3883,"src":"2968:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2905:84:16"},"src":"2878:112:16"},{"anonymous":false,"eventSelector":"7cd35ff79d73d5af7cb402eaac9792d8b3d32b685b221cd81c3d5611c8327fd0","id":3897,"name":"NFTLiquidated","nameLocation":"3001:13:16","nodeType":"EventDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"3032:10:16","nodeType":"VariableDeclaration","scope":3897,"src":"3024:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3884,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3887,"indexed":false,"mutability":"mutable","name":"borrower","nameLocation":"3060:8:16","nodeType":"VariableDeclaration","scope":3897,"src":"3052:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3886,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3889,"indexed":false,"mutability":"mutable","name":"nftAddress","nameLocation":"3086:10:16","nodeType":"VariableDeclaration","scope":3897,"src":"3078:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3888,"name":"address","nodeType":"ElementaryTypeName","src":"3078:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3891,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"3114:7:16","nodeType":"VariableDeclaration","scope":3897,"src":"3106:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3893,"indexed":false,"mutability":"mutable","name":"totalRepayDebt","nameLocation":"3139:14:16","nodeType":"VariableDeclaration","scope":3897,"src":"3131:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3895,"indexed":false,"mutability":"mutable","name":"nftBuyPrice","nameLocation":"3171:11:16","nodeType":"VariableDeclaration","scope":3897,"src":"3163:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3163:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3014:174:16"},"src":"2995:194:16"},{"anonymous":false,"eventSelector":"7e914af3d8d31ac64e6df6e8087ac12953b11a1bceebf2a80692aa35e6b0e6ff","id":3904,"name":"NewVaultSetup","nameLocation":"3200:13:16","nodeType":"EventDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"3231:5:16","nodeType":"VariableDeclaration","scope":3904,"src":"3223:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3898,"name":"address","nodeType":"ElementaryTypeName","src":"3223:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3902,"indexed":false,"mutability":"mutable","name":"params","nameLocation":"3276:6:16","nodeType":"VariableDeclaration","scope":3904,"src":"3246:36:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"Structs.VaultSetupParamemters","nameLocations":["3246:7:16","3254:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":6896,"src":"3246:29:16"},"referencedDeclaration":6896,"src":"3246:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_storage_ptr","typeString":"struct Structs.VaultSetupParamemters"}},"visibility":"internal"}],"src":"3213:75:16"},"src":"3194:95:16"},{"body":{"id":3924,"nodeType":"Block","src":"3531:171:16","statements":[{"expression":{"arguments":[{"id":3915,"name":"daiAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"3566:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3916,"name":"daiPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"3590:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3917,"name":"Structs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"3616:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structs_$6897_$","typeString":"type(contract Structs)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3624:9:16","memberName":"TokenType","nodeType":"MemberAccess","referencedDeclaration":6827,"src":"3616:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$6827_$","typeString":"type(enum Structs.TokenType)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3634:5:16","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":6825,"src":"3616:23:16","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},{"id":3920,"name":"daiVaultParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"3653:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},{"hexValue":"74727565","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3681:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3914,"name":"_setupVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"3541:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_TokenType_$6827_$_t_struct$_VaultSetupParamemters_$6896_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,enum Structs.TokenType,struct Structs.VaultSetupParamemters memory,bool)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:154:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3923,"nodeType":"ExpressionStatement","src":"3541:154:16"}]},"id":3925,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"daiAddress","nameLocation":"3423:10:16","nodeType":"VariableDeclaration","scope":3925,"src":"3415:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3905,"name":"address","nodeType":"ElementaryTypeName","src":"3415:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"daiPriceFeed","nameLocation":"3451:12:16","nodeType":"VariableDeclaration","scope":3925,"src":"3443:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3907,"name":"address","nodeType":"ElementaryTypeName","src":"3443:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"daiVaultParams","nameLocation":"3510:14:16","nodeType":"VariableDeclaration","scope":3925,"src":"3473:51:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters"},"typeName":{"id":3910,"nodeType":"UserDefinedTypeName","pathNode":{"id":3909,"name":"Structs.VaultSetupParamemters","nameLocations":["3473:7:16","3481:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":6896,"src":"3473:29:16"},"referencedDeclaration":6896,"src":"3473:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_storage_ptr","typeString":"struct Structs.VaultSetupParamemters"}},"visibility":"internal"}],"src":"3405:125:16"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[],"src":"3531:0:16"},"scope":6456,"src":"3394:308:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4017,"nodeType":"Block","src":"3994:543:16","statements":[{"expression":{"arguments":[{"id":3935,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4018:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3934,"name":"WhenNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"4004:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4004:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3937,"nodeType":"ExpressionStatement","src":"4004:20:16"},{"expression":{"arguments":[{"id":3939,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4047:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3938,"name":"allowedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"4034:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4034:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"ExpressionStatement","src":"4034:19:16"},{"expression":{"arguments":[{"id":3943,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4080:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3942,"name":"_accuredInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"4063:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"function (address) returns (uint256,uint256,uint256,uint64)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"tuple(uint256,uint256,uint256,uint64)"}},"id":3945,"nodeType":"ExpressionStatement","src":"4063:23:16"},{"expression":{"arguments":[{"expression":{"id":3949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4117:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4121:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4117:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3953,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4137:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4129:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"4129:7:16","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3955,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4143:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3946,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4097:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4103:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"4097:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4097:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3957,"nodeType":"ExpressionStatement","src":"4097:53:16"},{"assignments":[3959],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"shares","nameLocation":"4168:6:16","nodeType":"VariableDeclaration","scope":4017,"src":"4160:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"4160:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3968,"initialValue":{"arguments":[{"id":3965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4211:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4219:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":3960,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4177:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":3962,"indexExpression":{"id":3961,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4184:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4177:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":3963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4191:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"4177:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":3964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4202:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"4177:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4177:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4160:65:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"4239:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3970,"name":"minSharesOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"4248:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4239:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3976,"nodeType":"IfStatement","src":"4235:56:16","trueBody":{"errorCall":{"arguments":[{"id":3973,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"4284:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3972,"name":"TooHighSlipage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"4269:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4269:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3975,"nodeType":"RevertStatement","src":"4262:29:16"}},{"expression":{"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":3977,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4302:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":3979,"indexExpression":{"id":3978,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4309:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4302:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":3980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4316:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"4302:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":3981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4327:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"4302:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3984,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"4345:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4337:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3982,"name":"uint128","nodeType":"ElementaryTypeName","src":"4337:7:16","typeDescriptions":{}}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4302:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3987,"nodeType":"ExpressionStatement","src":"4302:50:16"},{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":3988,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4362:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":3990,"indexExpression":{"id":3989,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4369:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":3991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4376:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"4362:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":3992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4387:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"4362:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3995,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4405:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3993,"name":"uint128","nodeType":"ElementaryTypeName","src":"4397:7:16","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4362:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3998,"nodeType":"ExpressionStatement","src":"4362:50:16"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":3999,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4422:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4003,"indexExpression":{"expression":{"id":4000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4433:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4437:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4433:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4422:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4004,"indexExpression":{"id":4002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4445:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4422:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4452:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"4422:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4006,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"4466:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4422:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"4422:50:16"},{"eventCall":{"arguments":[{"expression":{"id":4010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4496:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4500:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4496:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4012,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4508:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4013,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4515:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4014,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"4523:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"4488:7:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4488:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4016,"nodeType":"EmitStatement","src":"4483:47:16"}]},"functionSelector":"7dbca353","id":4018,"implemented":true,"kind":"function","modifiers":[],"name":"supply","nameLocation":"3886:6:16","nodeType":"FunctionDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"token","nameLocation":"3910:5:16","nodeType":"VariableDeclaration","scope":4018,"src":"3902:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3926,"name":"address","nodeType":"ElementaryTypeName","src":"3902:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"amount","nameLocation":"3933:6:16","nodeType":"VariableDeclaration","scope":4018,"src":"3925:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"3925:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"minSharesOut","nameLocation":"3957:12:16","nodeType":"VariableDeclaration","scope":4018,"src":"3949:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"3949:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:83:16"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[],"src":"3994:0:16"},"scope":6456,"src":"3877:660:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4115,"nodeType":"Block","src":"4624:644:16","statements":[{"expression":{"arguments":[{"id":4026,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4648:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4025,"name":"WhenNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"4634:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4634:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4028,"nodeType":"ExpressionStatement","src":"4634:20:16"},{"condition":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4667:37:16","subExpression":{"arguments":[{"id":4030,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4691:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4031,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4697:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4029,"name":"vaultAboveReserveRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"4668:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4668:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4037,"nodeType":"IfStatement","src":"4664:82:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4034,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"4725:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4725:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4036,"nodeType":"RevertStatement","src":"4718:28:16"}},{"expression":{"arguments":[{"id":4039,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4773:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4038,"name":"_accuredInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"4756:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"function (address) returns (uint256,uint256,uint256,uint64)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4756:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"tuple(uint256,uint256,uint256,uint64)"}},"id":4041,"nodeType":"ExpressionStatement","src":"4756:23:16"},{"assignments":[4043],"declarations":[{"constant":false,"id":4043,"mutability":"mutable","name":"shares","nameLocation":"4798:6:16","nodeType":"VariableDeclaration","scope":4115,"src":"4790:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"4790:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4052,"initialValue":{"arguments":[{"id":4049,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4842:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4850:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":4044,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4807:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4046,"indexExpression":{"id":4045,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4814:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4807:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4821:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"4807:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4833:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"4807:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4790:66:16"},{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4053,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4866:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4055,"indexExpression":{"id":4054,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4873:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4866:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4880:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"4866:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4892:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"4866:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4060,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"4910:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4902:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4058,"name":"uint128","nodeType":"ElementaryTypeName","src":"4902:7:16","typeDescriptions":{}}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4902:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4866:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"4866:51:16"},{"expression":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4064,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4927:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4066,"indexExpression":{"id":4065,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4934:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4927:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4941:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"4927:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"4927:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4071,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4971:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4963:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4069,"name":"uint128","nodeType":"ElementaryTypeName","src":"4963:7:16","typeDescriptions":{}}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4927:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4074,"nodeType":"ExpressionStatement","src":"4927:51:16"},{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":4075,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4988:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4079,"indexExpression":{"expression":{"id":4076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4999:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5003:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4999:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4988:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4080,"indexExpression":{"id":4078,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5011:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4988:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5018:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"4988:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4082,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"5028:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4988:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4084,"nodeType":"ExpressionStatement","src":"4988:46:16"},{"expression":{"arguments":[{"arguments":[{"id":4090,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4088,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:16","typeDescriptions":{}}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4092,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5088:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5088:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5100:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4085,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5053:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5059:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"5053:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4096,"nodeType":"ExpressionStatement","src":"5053:54:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5133:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5133:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4097,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"5120:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4101,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"5147:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5120:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4106,"nodeType":"IfStatement","src":"5117:87:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4103,"name":"BelowHealthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"5185:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5185:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4105,"nodeType":"RevertStatement","src":"5178:26:16"}},{"eventCall":{"arguments":[{"expression":{"id":4108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5227:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5231:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5227:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5239:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4111,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5246:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4112,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"5254:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4107,"name":"Borrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"5220:6:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5220:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4114,"nodeType":"EmitStatement","src":"5215:46:16"}]},"functionSelector":"4b8a3529","id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"4569:6:16","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"token","nameLocation":"4584:5:16","nodeType":"VariableDeclaration","scope":4116,"src":"4576:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4019,"name":"address","nodeType":"ElementaryTypeName","src":"4576:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"amount","nameLocation":"4599:6:16","nodeType":"VariableDeclaration","scope":4116,"src":"4591:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"4591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4575:31:16"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[],"src":"4624:0:16"},"scope":6456,"src":"4560:708:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4231,"nodeType":"Block","src":"5352:734:16","statements":[{"expression":{"arguments":[{"id":4124,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5379:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4123,"name":"_accuredInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"5362:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"function (address) returns (uint256,uint256,uint256,uint64)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"tuple(uint256,uint256,uint256,uint64)"}},"id":4126,"nodeType":"ExpressionStatement","src":"5362:23:16"},{"assignments":[4128],"declarations":[{"constant":false,"id":4128,"mutability":"mutable","name":"userBorrowShare","nameLocation":"5403:15:16","nodeType":"VariableDeclaration","scope":4231,"src":"5395:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5395:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4136,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":4129,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"5421:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4132,"indexExpression":{"expression":{"id":4130,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5432:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5436:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5432:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5421:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4134,"indexExpression":{"id":4133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5444:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5421:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5451:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"5421:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5395:62:16"},{"assignments":[4138],"declarations":[{"constant":false,"id":4138,"mutability":"mutable","name":"shares","nameLocation":"5475:6:16","nodeType":"VariableDeclaration","scope":4231,"src":"5467:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5467:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4147,"initialValue":{"arguments":[{"id":4144,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"5519:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5527:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":4139,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"5484:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4141,"indexExpression":{"id":4140,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5491:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5484:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5498:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"5484:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5510:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"5484:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5467:65:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"5546:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5561:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"5561:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4149,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5556:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5556:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5570:3:16","memberName":"max","nodeType":"MemberAccess","src":"5556:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5546:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4155,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"5577:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4156,"name":"userBorrowShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"5586:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5577:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5546:55:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4175,"nodeType":"IfStatement","src":"5542:181:16","trueBody":{"id":4174,"nodeType":"Block","src":"5603:120:16","statements":[{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4159,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"5617:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4160,"name":"userBorrowShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"5626:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5617:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ExpressionStatement","src":"5617:24:16"},{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4163,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"5655:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4169,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"5699:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5707:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":4164,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"5664:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4166,"indexExpression":{"id":4165,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5671:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5664:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5678:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"5664:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5690:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"5664:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5655:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"5655:57:16"}]}},{"expression":{"arguments":[{"expression":{"id":4179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5752:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5756:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5752:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5772:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5764:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4181,"name":"address","nodeType":"ElementaryTypeName","src":"5764:7:16","typeDescriptions":{}}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5764:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4185,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"5779:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4176,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5732:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5738:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"5732:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5732:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4187,"nodeType":"ExpressionStatement","src":"5732:54:16"},{"id":4222,"nodeType":"UncheckedBlock","src":"5796:228:16","statements":[{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4188,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"5820:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4190,"indexExpression":{"id":4189,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5827:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5820:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5834:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"5820:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5846:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"5820:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":4195,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"5864:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5856:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4193,"name":"uint128","nodeType":"ElementaryTypeName","src":"5856:7:16","typeDescriptions":{}}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5856:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"5820:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ExpressionStatement","src":"5820:51:16"},{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4199,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"5885:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4201,"indexExpression":{"id":4200,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5892:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5885:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5899:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"5885:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5911:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"5885:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":4206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"5929:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5921:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4204,"name":"uint128","nodeType":"ElementaryTypeName","src":"5921:7:16","typeDescriptions":{}}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5921:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"5885:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"nodeType":"ExpressionStatement","src":"5885:51:16"},{"expression":{"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":4210,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"5950:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4214,"indexExpression":{"expression":{"id":4211,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5961:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5965:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5961:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5950:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4215,"indexExpression":{"id":4213,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5973:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5950:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5980:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"5950:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"userBorrowShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"5989:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4218,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"6007:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5989:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5950:63:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4221,"nodeType":"ExpressionStatement","src":"5950:63:16"}]},{"eventCall":{"arguments":[{"expression":{"id":4224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6045:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6049:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6045:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4226,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"6057:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4227,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"6064:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4228,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"6072:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4223,"name":"Repay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"6039:5:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6039:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4230,"nodeType":"EmitStatement","src":"6034:45:16"}]},"functionSelector":"22867d78","id":4232,"implemented":true,"kind":"function","modifiers":[],"name":"repay","nameLocation":"5306:5:16","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"token","nameLocation":"5320:5:16","nodeType":"VariableDeclaration","scope":4232,"src":"5312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4117,"name":"address","nodeType":"ElementaryTypeName","src":"5312:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"amount","nameLocation":"5335:6:16","nodeType":"VariableDeclaration","scope":4232,"src":"5327:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5311:31:16"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[],"src":"5352:0:16"},"scope":6456,"src":"5297:789:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4248,"nodeType":"Block","src":"6212:60:16","statements":[{"expression":{"arguments":[{"id":4242,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"6232:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4243,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"6239:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4244,"name":"maxShareIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"6247:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6259:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4241,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"6222:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6222:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4247,"nodeType":"ExpressionStatement","src":"6222:43:16"}]},"functionSelector":"b5c5f672","id":4249,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"6113:8:16","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"token","nameLocation":"6139:5:16","nodeType":"VariableDeclaration","scope":4249,"src":"6131:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4233,"name":"address","nodeType":"ElementaryTypeName","src":"6131:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4236,"mutability":"mutable","name":"amount","nameLocation":"6162:6:16","nodeType":"VariableDeclaration","scope":4249,"src":"6154:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"6154:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4238,"mutability":"mutable","name":"maxShareIn","nameLocation":"6186:10:16","nodeType":"VariableDeclaration","scope":4249,"src":"6178:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6178:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6121:81:16"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[],"src":"6212:0:16"},"scope":6456,"src":"6104:168:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4265,"nodeType":"Block","src":"6396:61:16","statements":[{"expression":{"arguments":[{"id":4259,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"6416:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4260,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"6423:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4261,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"6431:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6445:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4258,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"6406:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6406:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4264,"nodeType":"ExpressionStatement","src":"6406:44:16"}]},"functionSelector":"2b83cccd","id":4266,"implemented":true,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"6297:6:16","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"token","nameLocation":"6321:5:16","nodeType":"VariableDeclaration","scope":4266,"src":"6313:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4250,"name":"address","nodeType":"ElementaryTypeName","src":"6313:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"shares","nameLocation":"6344:6:16","nodeType":"VariableDeclaration","scope":4266,"src":"6336:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"minAmountOut","nameLocation":"6368:12:16","nodeType":"VariableDeclaration","scope":4266,"src":"6360:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"6360:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6303:83:16"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[],"src":"6396:0:16"},"scope":6456,"src":"6288:169:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4619,"nodeType":"Block","src":"6618:4559:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6632:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6636:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6632:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4279,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"6646:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6632:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4284,"nodeType":"IfStatement","src":"6628:51:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4281,"name":"SelfLiquidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6662:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6662:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4283,"nodeType":"RevertStatement","src":"6655:24:16"}},{"assignments":[4286],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"accountHealth","nameLocation":"6697:13:16","nodeType":"VariableDeclaration","scope":4619,"src":"6689:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6689:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4290,"initialValue":{"arguments":[{"id":4288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"6726:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4287,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"6713:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6713:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6689:45:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"accountHealth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"6748:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4292,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"6765:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6748:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4297,"nodeType":"IfStatement","src":"6744:66:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4294,"name":"BorrowerIsSolvant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"6791:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6791:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4296,"nodeType":"RevertStatement","src":"6784:26:16"}},{"assignments":[4299],"declarations":[{"constant":false,"id":4299,"mutability":"mutable","name":"collateralShares","nameLocation":"6829:16:16","nodeType":"VariableDeclaration","scope":4619,"src":"6821:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"6821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":4300,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"6848:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4302,"indexExpression":{"id":4301,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"6859:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6848:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4304,"indexExpression":{"id":4303,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"6868:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6848:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6880:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"6848:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6821:69:16"},{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"borrowShares","nameLocation":"6908:12:16","nodeType":"VariableDeclaration","scope":4619,"src":"6900:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"6900:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4315,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":4309,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"6923:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4311,"indexExpression":{"id":4310,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"6934:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6923:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4313,"indexExpression":{"id":4312,"name":"userBorrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"6943:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6923:36:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6960:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"6923:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6900:66:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"collateralShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"6980:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7000:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6980:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"borrowShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"7005:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7021:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7005:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6980:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4324,"nodeType":"IfStatement","src":"6976:55:16","trueBody":{"functionReturnParameters":4276,"id":4323,"nodeType":"Return","src":"7024:7:16"}},{"id":4359,"nodeType":"Block","src":"7040:531:16","statements":[{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"totalBorrowAmount","nameLocation":"7062:17:16","nodeType":"VariableDeclaration","scope":4359,"src":"7054:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"7054:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4335,"initialValue":{"arguments":[{"id":4332,"name":"borrowShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"7161:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7175:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":4327,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"7082:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4329,"indexExpression":{"id":4328,"name":"userBorrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"7089:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7082:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7123:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"7082:52:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7152:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"7082:78:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7082:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7054:126:16"},{"assignments":[4337],"declarations":[{"constant":false,"id":4337,"mutability":"mutable","name":"maxBorrowAmountToLiquidate","nameLocation":"7203:26:16","nodeType":"VariableDeclaration","scope":4359,"src":"7195:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7195:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4349,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4338,"name":"accountHealth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"7232:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4339,"name":"FULL_LIQUIDATION_THRESHOLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"7265:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7232:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4347,"name":"totalBorrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"7382:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7232:167:16","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"totalBorrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"7311:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4342,"name":"DEFAULT_LIQUIDATION_CLOSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"7331:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7311:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7310:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4345,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"7360:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7195:204:16"},{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4350,"name":"amountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7413:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"amountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7433:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4352,"name":"maxBorrowAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"7453:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7433:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4355,"name":"amountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7543:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7433:127:16","trueExpression":{"id":4354,"name":"maxBorrowAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"7498:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7413:147:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"7413:147:16"}]},{"assignments":[4361],"declarations":[{"constant":false,"id":4361,"mutability":"mutable","name":"collateralAmountToLiquidate","nameLocation":"7590:27:16","nodeType":"VariableDeclaration","scope":4619,"src":"7582:35:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"7582:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4362,"nodeType":"VariableDeclarationStatement","src":"7582:35:16"},{"assignments":[4364],"declarations":[{"constant":false,"id":4364,"mutability":"mutable","name":"liquidationReward","nameLocation":"7635:17:16","nodeType":"VariableDeclaration","scope":4619,"src":"7627:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4363,"name":"uint256","nodeType":"ElementaryTypeName","src":"7627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4365,"nodeType":"VariableDeclarationStatement","src":"7627:25:16"},{"id":4579,"nodeType":"Block","src":"7662:2890:16","statements":[{"assignments":[4367],"declarations":[{"constant":false,"id":4367,"mutability":"mutable","name":"user","nameLocation":"7684:4:16","nodeType":"VariableDeclaration","scope":4579,"src":"7676:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"7676:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4369,"initialValue":{"id":4368,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"7691:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7676:22:16"},{"assignments":[4371],"declarations":[{"constant":false,"id":4371,"mutability":"mutable","name":"borrowToken","nameLocation":"7720:11:16","nodeType":"VariableDeclaration","scope":4579,"src":"7712:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4370,"name":"address","nodeType":"ElementaryTypeName","src":"7712:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4373,"initialValue":{"id":4372,"name":"userBorrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"7734:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7712:37:16"},{"assignments":[4375],"declarations":[{"constant":false,"id":4375,"mutability":"mutable","name":"collateralToken","nameLocation":"7771:15:16","nodeType":"VariableDeclaration","scope":4579,"src":"7763:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4374,"name":"address","nodeType":"ElementaryTypeName","src":"7763:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4377,"initialValue":{"id":4376,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"7789:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7763:36:16"},{"assignments":[4379],"declarations":[{"constant":false,"id":4379,"mutability":"mutable","name":"liquidationAmount","nameLocation":"7821:17:16","nodeType":"VariableDeclaration","scope":4579,"src":"7813:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"7813:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4381,"initialValue":{"id":4380,"name":"amountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7841:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7813:45:16"},{"assignments":[4383],"declarations":[{"constant":false,"id":4383,"mutability":"mutable","name":"_userTotalCollateralAmount","nameLocation":"7881:26:16","nodeType":"VariableDeclaration","scope":4579,"src":"7873:34:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"7873:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4392,"initialValue":{"arguments":[{"id":4389,"name":"collateralShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"7988:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8006:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":4384,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"7910:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4386,"indexExpression":{"id":4385,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"7917:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7910:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7951:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"7910:51:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7979:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"7910:77:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7910:102:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7873:139:16"},{"assignments":[4394],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"collateralPrice","nameLocation":"8047:15:16","nodeType":"VariableDeclaration","scope":4579,"src":"8039:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4398,"initialValue":{"arguments":[{"id":4396,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"8079:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4395,"name":"getTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"8065:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8039:56:16"},{"assignments":[4400],"declarations":[{"constant":false,"id":4400,"mutability":"mutable","name":"borrowTokenPrice","nameLocation":"8117:16:16","nodeType":"VariableDeclaration","scope":4579,"src":"8109:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8109:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4404,"initialValue":{"arguments":[{"id":4402,"name":"borrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"8150:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4401,"name":"getTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"8136:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8136:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8109:53:16"},{"assignments":[4406],"declarations":[{"constant":false,"id":4406,"mutability":"mutable","name":"collateralDecimals","nameLocation":"8182:18:16","nodeType":"VariableDeclaration","scope":4579,"src":"8176:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4405,"name":"uint8","nodeType":"ElementaryTypeName","src":"8176:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4410,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4407,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"8203:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8219:13:16","memberName":"tokenDecimals","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"8203:29:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint8_$attached_to$_t_address_$","typeString":"function (address) view returns (uint8)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8203:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"8176:58:16"},{"assignments":[4412],"declarations":[{"constant":false,"id":4412,"mutability":"mutable","name":"borrowTokenDecimals","nameLocation":"8254:19:16","nodeType":"VariableDeclaration","scope":4579,"src":"8248:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4411,"name":"uint8","nodeType":"ElementaryTypeName","src":"8248:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4416,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4413,"name":"borrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"8276:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8288:13:16","memberName":"tokenDecimals","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"8276:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint8_$attached_to$_t_address_$","typeString":"function (address) view returns (uint8)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"8248:55:16"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4417,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"8318:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"liquidationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"8365:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4419,"name":"borrowTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8405:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8365:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8444:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4422,"name":"collateralDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"8450:18:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8444:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8365:103:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8364:105:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"collateralPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"8489:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8507:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4428,"name":"borrowTokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"8513:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8507:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8489:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8488:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8364:169:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8318:215:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"8318:215:16"},{"assignments":[4436],"declarations":[{"constant":false,"id":4436,"mutability":"mutable","name":"maxLiquidationReward","nameLocation":"8555:20:16","nodeType":"VariableDeclaration","scope":4579,"src":"8547:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4435,"name":"uint256","nodeType":"ElementaryTypeName","src":"8547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4443,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4437,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"8579:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4438,"name":"LIQUIDATION_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"8625:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8579:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8578:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4441,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"8647:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8578:72:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8547:103:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4444,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"8668:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4445,"name":"_userTotalCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8698:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8668:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4489,"nodeType":"Block","src":"9125:333:16","statements":[{"assignments":[4475],"declarations":[{"constant":false,"id":4475,"mutability":"mutable","name":"collateralBalanceAfter","nameLocation":"9151:22:16","nodeType":"VariableDeclaration","scope":4489,"src":"9143:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4479,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"_userTotalCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"9176:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4477,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"9225:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9176:76:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9143:109:16"},{"expression":{"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4480,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"9270:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"maxLiquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"9290:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4482,"name":"collateralBalanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"9333:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9290:65:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4485,"name":"maxLiquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"9423:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9290:153:16","trueExpression":{"id":4484,"name":"collateralBalanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"9378:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9270:173:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4488,"nodeType":"ExpressionStatement","src":"9270:173:16"}]},"id":4490,"nodeType":"IfStatement","src":"8664:794:16","trueBody":{"id":4473,"nodeType":"Block","src":"8726:393:16","statements":[{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"8744:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4448,"name":"_userTotalCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8774:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8744:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"nodeType":"ExpressionStatement","src":"8744:56:16"},{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"8818:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"_userTotalCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8861:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4453,"name":"collateralPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"8914:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8861:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4456,"name":"borrowTokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"8962:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8956:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8861:120:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8860:122:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4460,"name":"borrowTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8985:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8860:141:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8859:143:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9025:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4464,"name":"collateralDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"9031:18:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9025:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8859:190:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8818:231:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4468,"nodeType":"ExpressionStatement","src":"8818:231:16"},{"expression":{"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4469,"name":"amountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"9067:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4470,"name":"liquidationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"9087:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9067:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4472,"nodeType":"ExpressionStatement","src":"9067:37:16"}]}},{"assignments":[4492],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"repaidBorrowShares","nameLocation":"9513:18:16","nodeType":"VariableDeclaration","scope":4579,"src":"9505:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4491,"name":"uint128","nodeType":"ElementaryTypeName","src":"9505:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4504,"initialValue":{"arguments":[{"arguments":[{"id":4500,"name":"liquidationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"9621:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9660:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":4495,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9559:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4497,"indexExpression":{"id":4496,"name":"borrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"9566:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9559:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9579:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"9559:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9591:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"9559:40:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9559:124:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9534:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4493,"name":"uint128","nodeType":"ElementaryTypeName","src":"9534:7:16","typeDescriptions":{}}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9534:163:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"9505:192:16"},{"expression":{"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4505,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9711:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4507,"indexExpression":{"id":4506,"name":"borrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"9718:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9711:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9731:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"9711:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9743:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"9711:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4510,"name":"repaidBorrowShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"9753:18:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9711:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4512,"nodeType":"ExpressionStatement","src":"9711:60:16"},{"expression":{"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4513,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9785:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4515,"indexExpression":{"id":4514,"name":"borrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"9792:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9785:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9805:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"9785:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9817:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"9785:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":4520,"name":"liquidationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"9852:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9827:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4518,"name":"uint128","nodeType":"ElementaryTypeName","src":"9827:7:16","typeDescriptions":{}}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9827:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9785:98:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4523,"nodeType":"ExpressionStatement","src":"9785:98:16"},{"assignments":[4525],"declarations":[{"constant":false,"id":4525,"mutability":"mutable","name":"liquidatedCollShares","nameLocation":"9944:20:16","nodeType":"VariableDeclaration","scope":4579,"src":"9936:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4524,"name":"uint128","nodeType":"ElementaryTypeName","src":"9936:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4539,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"10057:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4534,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"10087:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10057:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10126:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":4528,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9992:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4530,"indexExpression":{"id":4529,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"9999:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9992:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10016:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"9992:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10027:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"9992:43:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9992:157:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9967:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4526,"name":"uint128","nodeType":"ElementaryTypeName","src":"9967:7:16","typeDescriptions":{}}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9967:196:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"9936:227:16"},{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4540,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"10177:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4542,"indexExpression":{"id":4541,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"10184:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10177:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10201:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"10177:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10212:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"10177:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4545,"name":"liquidatedCollShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"10222:20:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"10177:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4547,"nodeType":"ExpressionStatement","src":"10177:65:16"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4548,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"10256:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4550,"indexExpression":{"id":4549,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"10263:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10256:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10280:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"10256:34:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10291:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"10256:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"10326:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4556,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"10356:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10326:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4553,"name":"uint128","nodeType":"ElementaryTypeName","src":"10301:7:16","typeDescriptions":{}}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"10256:131:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ExpressionStatement","src":"10256:131:16"},{"expression":{"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":4561,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"10401:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4564,"indexExpression":{"id":4562,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"10412:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10401:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4565,"indexExpression":{"id":4563,"name":"borrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"10418:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10401:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10431:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"10401:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4567,"name":"repaidBorrowShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"10441:18:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"10401:58:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4569,"nodeType":"ExpressionStatement","src":"10401:58:16"},{"expression":{"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":4570,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"10473:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":4573,"indexExpression":{"id":4571,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"10484:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10473:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":4574,"indexExpression":{"id":4572,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"10490:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10473:33:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":4575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10507:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"10473:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4576,"name":"liquidatedCollShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"10521:20:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"10473:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4578,"nodeType":"ExpressionStatement","src":"10473:68:16"}]},{"expression":{"arguments":[{"arguments":[{"id":4585,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10645:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10637:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4583,"name":"address","nodeType":"ElementaryTypeName","src":"10637:7:16","typeDescriptions":{}}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10637:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10664:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10668:6:16","memberName":"sender","nodeType":"MemberAccess","src":"10664:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"10688:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4590,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"10718:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10688:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4580,"name":"userBorrowToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"10594:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10610:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"10594:29:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10594:151:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4593,"nodeType":"ExpressionStatement","src":"10594:151:16"},{"expression":{"arguments":[{"arguments":[{"id":4599,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10866:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10858:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4597,"name":"address","nodeType":"ElementaryTypeName","src":"10858:7:16","typeDescriptions":{}}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10858:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10885:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10889:6:16","memberName":"sender","nodeType":"MemberAccess","src":"10885:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"10909:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4604,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"10939:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10909:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4594,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"10820:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10831:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"10820:24:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10820:146:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4607,"nodeType":"ExpressionStatement","src":"10820:146:16"},{"eventCall":{"arguments":[{"id":4609,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"11006:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4610,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11027:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11031:6:16","memberName":"sender","nodeType":"MemberAccess","src":"11027:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4612,"name":"amountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"11051:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"collateralAmountToLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"11082:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4614,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"11112:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11082:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4616,"name":"liquidationReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"11143:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4608,"name":"Liquidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"10982:10:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10982:188:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"EmitStatement","src":"10977:193:16"}]},"functionSelector":"aab3f868","id":4620,"implemented":true,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"6472:9:16","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"account","nameLocation":"6499:7:16","nodeType":"VariableDeclaration","scope":4620,"src":"6491:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4267,"name":"address","nodeType":"ElementaryTypeName","src":"6491:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"collateral","nameLocation":"6524:10:16","nodeType":"VariableDeclaration","scope":4620,"src":"6516:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4269,"name":"address","nodeType":"ElementaryTypeName","src":"6516:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"userBorrowToken","nameLocation":"6552:15:16","nodeType":"VariableDeclaration","scope":4620,"src":"6544:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"6544:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"amountToLiquidate","nameLocation":"6585:17:16","nodeType":"VariableDeclaration","scope":4620,"src":"6577:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6481:127:16"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[],"src":"6618:0:16"},"scope":6456,"src":"6463:4714:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4799,"nodeType":"Block","src":"11356:1278:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4633,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11370:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11377:6:16","memberName":"length","nodeType":"MemberAccess","src":"11370:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11387:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11370:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"nodeType":"IfStatement","src":"11366:43:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4637,"name":"EmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11397:10:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11397:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4639,"nodeType":"RevertStatement","src":"11390:19:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4641,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11423:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11430:6:16","memberName":"length","nodeType":"MemberAccess","src":"11423:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4643,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"11440:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11448:6:16","memberName":"length","nodeType":"MemberAccess","src":"11440:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11423:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4649,"nodeType":"IfStatement","src":"11419:59:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4646,"name":"ArrayMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"11463:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11463:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4648,"nodeType":"RevertStatement","src":"11456:22:16"}},{"assignments":[4652],"declarations":[{"constant":false,"id":4652,"mutability":"mutable","name":"receiver","nameLocation":"11516:8:16","nodeType":"VariableDeclaration","scope":4799,"src":"11489:35:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanReceiverInterface_$6822","typeString":"contract FlashLoanReceiverInterface"},"typeName":{"id":4651,"nodeType":"UserDefinedTypeName","pathNode":{"id":4650,"name":"FlashLoanReceiverInterface","nameLocations":["11489:26:16"],"nodeType":"IdentifierPath","referencedDeclaration":6822,"src":"11489:26:16"},"referencedDeclaration":6822,"src":"11489:26:16","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanReceiverInterface_$6822","typeString":"contract FlashLoanReceiverInterface"}},"visibility":"internal"}],"id":4656,"initialValue":{"arguments":[{"id":4654,"name":"receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"11554:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4653,"name":"FlashLoanReceiverInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"11527:26:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FlashLoanReceiverInterface_$6822_$","typeString":"type(contract FlashLoanReceiverInterface)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11527:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanReceiverInterface_$6822","typeString":"contract FlashLoanReceiverInterface"}},"nodeType":"VariableDeclarationStatement","src":"11489:81:16"},{"assignments":[4661],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"fees","nameLocation":"11597:4:16","nodeType":"VariableDeclaration","scope":4799,"src":"11580:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"11580:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ArrayTypeName","src":"11580:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4668,"initialValue":{"arguments":[{"expression":{"id":4665,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11618:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11625:6:16","memberName":"length","nodeType":"MemberAccess","src":"11618:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11604:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11608:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4663,"nodeType":"ArrayTypeName","src":"11608:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11604:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11580:52:16"},{"body":{"id":4721,"nodeType":"Block","src":"11679:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4677,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11710:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4679,"indexExpression":{"id":4678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11717:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11710:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4676,"name":"maxFlashloan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"11697:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11697:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11724:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11697:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4689,"nodeType":"IfStatement","src":"11693:67:16","trueBody":{"errorCall":{"arguments":[{"baseExpression":{"id":4684,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11750:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4686,"indexExpression":{"id":4685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11750:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4683,"name":"FlashloanPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11734:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11734:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4688,"nodeType":"RevertStatement","src":"11727:33:16"}},{"expression":{"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4690,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"11774:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4692,"indexExpression":{"id":4691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11779:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11774:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4694,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11797:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4696,"indexExpression":{"id":4695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11804:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11797:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4697,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"11808:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4699,"indexExpression":{"id":4698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11816:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11808:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4693,"name":"flashloanFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"11784:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11784:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11774:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4702,"nodeType":"ExpressionStatement","src":"11774:45:16"},{"expression":{"arguments":[{"arguments":[{"id":4709,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11865:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11857:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4707,"name":"address","nodeType":"ElementaryTypeName","src":"11857:7:16","typeDescriptions":{}}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11857:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4711,"name":"receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"11872:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4712,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"11889:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4714,"indexExpression":{"id":4713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11897:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11889:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4703,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11833:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4705,"indexExpression":{"id":4704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11840:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11833:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11843:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"11833:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11833:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"ExpressionStatement","src":"11833:67:16"},{"id":4720,"nodeType":"UncheckedBlock","src":"11914:46:16","statements":[{"expression":{"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11942:3:16","subExpression":{"id":4717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11944:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4719,"nodeType":"ExpressionStatement","src":"11942:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"11658:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4673,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"11662:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11669:6:16","memberName":"length","nodeType":"MemberAccess","src":"11662:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11658:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4722,"initializationExpression":{"assignments":[4670],"declarations":[{"constant":false,"id":4670,"mutability":"mutable","name":"i","nameLocation":"11655:1:16","nodeType":"VariableDeclaration","scope":4722,"src":"11647:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"11647:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4671,"nodeType":"VariableDeclarationStatement","src":"11647:9:16"},"nodeType":"ForStatement","src":"11642:328:16"},{"condition":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11983:132:16","subExpression":{"arguments":[{"expression":{"id":4725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12018:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12022:6:16","memberName":"sender","nodeType":"MemberAccess","src":"12018:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4727,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"12042:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":4728,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"12062:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"id":4729,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"12083:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4730,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"12101:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4723,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"11984:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanReceiverInterface_$6822","typeString":"contract FlashLoanReceiverInterface"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11993:11:16","memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":6821,"src":"11984:20:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address[] memory,uint256[] memory,uint256[] memory,bytes memory) external returns (bool)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:131:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"11979:162:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4733,"name":"FlashloanFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"12124:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12124:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4735,"nodeType":"RevertStatement","src":"12117:24:16"}},{"assignments":[4738],"declarations":[{"constant":false,"id":4738,"mutability":"mutable","name":"amountPlusFee","nameLocation":"12160:13:16","nodeType":"VariableDeclaration","scope":4799,"src":"12152:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"12152:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4739,"nodeType":"VariableDeclarationStatement","src":"12152:21:16"},{"body":{"id":4788,"nodeType":"Block","src":"12220:335:16","statements":[{"expression":{"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4747,"name":"amountPlusFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"12234:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4748,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"12250:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4750,"indexExpression":{"id":4749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12258:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12250:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":4751,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"12263:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4753,"indexExpression":{"id":4752,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12268:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12250:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12234:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4756,"nodeType":"ExpressionStatement","src":"12234:36:16"},{"expression":{"arguments":[{"id":4761,"name":"receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"12325:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4764,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12366:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12358:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4762,"name":"address","nodeType":"ElementaryTypeName","src":"12358:7:16","typeDescriptions":{}}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4766,"name":"amountPlusFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"12389:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4757,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"12284:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4759,"indexExpression":{"id":4758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12291:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12284:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12294:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"12284:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12284:132:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4768,"nodeType":"ExpressionStatement","src":"12284:132:16"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":4769,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"12430:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":4773,"indexExpression":{"baseExpression":{"id":4770,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"12437:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4772,"indexExpression":{"id":4771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12444:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12437:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12430:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":4774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12448:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"12430:28:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":4775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12459:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"12430:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"baseExpression":{"id":4778,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"12477:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4780,"indexExpression":{"id":4779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12482:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12477:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12469:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4776,"name":"uint128","nodeType":"ElementaryTypeName","src":"12469:7:16","typeDescriptions":{}}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12469:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"12430:55:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"12430:55:16"},{"id":4787,"nodeType":"UncheckedBlock","src":"12499:46:16","statements":[{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12527:3:16","subExpression":{"id":4784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12529:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"12527:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"12199:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4744,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"12203:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12210:6:16","memberName":"length","nodeType":"MemberAccess","src":"12203:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12199:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4789,"initializationExpression":{"assignments":[4741],"declarations":[{"constant":false,"id":4741,"mutability":"mutable","name":"i","nameLocation":"12196:1:16","nodeType":"VariableDeclaration","scope":4789,"src":"12188:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"12188:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4742,"nodeType":"VariableDeclarationStatement","src":"12188:9:16"},"nodeType":"ForStatement","src":"12183:372:16"},{"eventCall":{"arguments":[{"expression":{"id":4791,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12587:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12591:6:16","memberName":"sender","nodeType":"MemberAccess","src":"12587:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4793,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"12599:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":4794,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"12607:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"id":4795,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"12616:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4796,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"12622:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4790,"name":"FlashloanSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"12570:16:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address[] memory,uint256[] memory,uint256[] memory,bytes memory)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12570:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4798,"nodeType":"EmitStatement","src":"12565:62:16"}]},"functionSelector":"78767d70","id":4800,"implemented":true,"kind":"function","modifiers":[],"name":"flashloan","nameLocation":"11198:9:16","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"receiverAddress","nameLocation":"11225:15:16","nodeType":"VariableDeclaration","scope":4800,"src":"11217:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4621,"name":"address","nodeType":"ElementaryTypeName","src":"11217:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4625,"mutability":"mutable","name":"tokens","nameLocation":"11269:6:16","nodeType":"VariableDeclaration","scope":4800,"src":"11250:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4623,"name":"address","nodeType":"ElementaryTypeName","src":"11250:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4624,"nodeType":"ArrayTypeName","src":"11250:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"amounts","nameLocation":"11304:7:16","nodeType":"VariableDeclaration","scope":4800,"src":"11285:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4627,"nodeType":"ArrayTypeName","src":"11285:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"data","nameLocation":"11336:4:16","nodeType":"VariableDeclaration","scope":4800,"src":"11321:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4629,"name":"bytes","nodeType":"ElementaryTypeName","src":"11321:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11207:139:16"},"returnParameters":{"id":4632,"nodeType":"ParameterList","parameters":[],"src":"11356:0:16"},"scope":6456,"src":"11189:1445:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4817,"nodeType":"Block","src":"12892:47:16","statements":[{"expression":{"arguments":[{"id":4814,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"12926:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4813,"name":"_accuredInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"12909:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"function (address) returns (uint256,uint256,uint256,uint64)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12909:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"tuple(uint256,uint256,uint256,uint64)"}},"functionReturnParameters":4812,"id":4816,"nodeType":"Return","src":"12902:30:16"}]},"functionSelector":"0d8459fe","id":4818,"implemented":true,"kind":"function","modifiers":[],"name":"accureInterest","nameLocation":"12667:14:16","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"token","nameLocation":"12699:5:16","nodeType":"VariableDeclaration","scope":4818,"src":"12691:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4801,"name":"address","nodeType":"ElementaryTypeName","src":"12691:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12681:29:16"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"_interestEarned","nameLocation":"12767:15:16","nodeType":"VariableDeclaration","scope":4818,"src":"12759:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"_feesAmount","nameLocation":"12804:11:16","nodeType":"VariableDeclaration","scope":4818,"src":"12796:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4806,"name":"uint256","nodeType":"ElementaryTypeName","src":"12796:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"_feesShare","nameLocation":"12837:10:16","nodeType":"VariableDeclaration","scope":4818,"src":"12829:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"12829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"_newRate","nameLocation":"12868:8:16","nodeType":"VariableDeclaration","scope":4818,"src":"12861:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4810,"name":"uint64","nodeType":"ElementaryTypeName","src":"12861:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12745:141:16"},"scope":6456,"src":"12658:281:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4853,"nodeType":"Block","src":"13210:229:16","statements":[{"expression":{"arguments":[{"expression":{"id":4828,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13233:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13237:6:16","memberName":"sender","nodeType":"MemberAccess","src":"13233:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4830,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"13245:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4831,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"13256:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4832,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"13268:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4827,"name":"_withdrawNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"13220:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13220:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4834,"nodeType":"ExpressionStatement","src":"13220:56:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13303:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13307:6:16","memberName":"sender","nodeType":"MemberAccess","src":"13303:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4835,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"13290:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4839,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"13317:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13290:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4844,"nodeType":"IfStatement","src":"13286:76:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4841,"name":"BelowHealthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"13343:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13343:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4843,"nodeType":"RevertStatement","src":"13336:26:16"}},{"eventCall":{"arguments":[{"expression":{"id":4846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13389:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13393:6:16","memberName":"sender","nodeType":"MemberAccess","src":"13389:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4848,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"13401:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4849,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"13412:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4850,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"13424:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"WithdrawNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"13377:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4852,"nodeType":"EmitStatement","src":"13372:60:16"}]},"functionSelector":"82a5b1aa","id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"depositNft","nameLocation":"13104:10:16","nodeType":"FunctionDefinition","parameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"recipient","nameLocation":"13132:9:16","nodeType":"VariableDeclaration","scope":4854,"src":"13124:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4819,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4822,"mutability":"mutable","name":"nftAddress","nameLocation":"13159:10:16","nodeType":"VariableDeclaration","scope":4854,"src":"13151:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4821,"name":"address","nodeType":"ElementaryTypeName","src":"13151:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4824,"mutability":"mutable","name":"tokenId","nameLocation":"13187:7:16","nodeType":"VariableDeclaration","scope":4854,"src":"13179:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4823,"name":"uint256","nodeType":"ElementaryTypeName","src":"13179:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13114:86:16"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[],"src":"13210:0:16"},"scope":6456,"src":"13095:344:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4935,"nodeType":"Block","src":"13574:709:16","statements":[{"condition":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13588:46:16","subExpression":{"arguments":[{"id":4864,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"13605:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4865,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"13614:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4866,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"13626:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4863,"name":"hasDepositedNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"13589:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13589:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4872,"nodeType":"IfStatement","src":"13584:71:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4869,"name":"InvalidNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"13643:10:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13643:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4871,"nodeType":"RevertStatement","src":"13636:19:16"}},{"assignments":[4874],"declarations":[{"constant":false,"id":4874,"mutability":"mutable","name":"totalTokenCollateralValue","nameLocation":"13673:25:16","nodeType":"VariableDeclaration","scope":4935,"src":"13665:33:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4873,"name":"uint256","nodeType":"ElementaryTypeName","src":"13665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4878,"initialValue":{"arguments":[{"id":4876,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"13742:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4875,"name":"getUserTotalTokenCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"13701:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13701:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13665:94:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4880,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"13800:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4879,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"13787:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13787:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4882,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"13812:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13787:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4884,"name":"totalTokenCollateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"13845:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13874:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13787:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4894,"nodeType":"IfStatement","src":"13770:174:16","trueBody":{"errorCall":{"arguments":[{"id":4889,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"13915:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4890,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"13924:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4891,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"13936:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4888,"name":"InvalidNFTLiquidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"13893:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13893:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4893,"nodeType":"RevertStatement","src":"13886:58:16"}},{"assignments":[4899],"declarations":[{"constant":false,"id":4899,"mutability":"mutable","name":"warning","nameLocation":"13989:7:16","nodeType":"VariableDeclaration","scope":4935,"src":"13955:41:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning"},"typeName":{"id":4898,"nodeType":"UserDefinedTypeName","pathNode":{"id":4897,"name":"Structs.LiquidatedWarning","nameLocations":["13955:7:16","13963:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":6881,"src":"13955:25:16"},"referencedDeclaration":6881,"src":"13955:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning"}},"visibility":"internal"}],"id":4907,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4900,"name":"nftLiquidationWarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"13999:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref)))"}},"id":4902,"indexExpression":{"id":4901,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"14034:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13999:52:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref))"}},"id":4904,"indexExpression":{"id":4903,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"14052:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13999:64:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$","typeString":"mapping(uint256 => struct Structs.LiquidatedWarning storage ref)"}},"id":4906,"indexExpression":{"id":4905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"14064:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13999:73:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage","typeString":"struct Structs.LiquidatedWarning storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13955:117:16"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4908,"name":"warning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"14082:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning storage pointer"}},"id":4910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14090:10:16","memberName":"liquidator","nodeType":"MemberAccess","referencedDeclaration":6878,"src":"14082:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14103:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14107:6:16","memberName":"sender","nodeType":"MemberAccess","src":"14103:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14082:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4914,"nodeType":"ExpressionStatement","src":"14082:31:16"},{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4915,"name":"warning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"14123:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning storage pointer"}},"id":4917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14131:20:16","memberName":"liquidationTimestamp","nodeType":"MemberAccess","referencedDeclaration":6880,"src":"14123:28:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4920,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14161:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14167:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"14161:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4922,"name":"NFT_WARNING_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"14179:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14161:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14154:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4918,"name":"uint64","nodeType":"ElementaryTypeName","src":"14154:6:16","typeDescriptions":{}}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14154:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"14123:74:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4926,"nodeType":"ExpressionStatement","src":"14123:74:16"},{"eventCall":{"arguments":[{"expression":{"id":4928,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14235:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14239:6:16","memberName":"sender","nodeType":"MemberAccess","src":"14235:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4930,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"14247:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4931,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"14256:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"14268:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4927,"name":"LiquidatingNFTWarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"14213:21:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14213:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4934,"nodeType":"EmitStatement","src":"14208:68:16"}]},"functionSelector":"429e2c1a","id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"triggerNFTiquidation","nameLocation":"13460:20:16","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"account","nameLocation":"13498:7:16","nodeType":"VariableDeclaration","scope":4936,"src":"13490:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4855,"name":"address","nodeType":"ElementaryTypeName","src":"13490:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4858,"mutability":"mutable","name":"nftAddress","nameLocation":"13523:10:16","nodeType":"VariableDeclaration","scope":4936,"src":"13515:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4857,"name":"address","nodeType":"ElementaryTypeName","src":"13515:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"tokenId","nameLocation":"13551:7:16","nodeType":"VariableDeclaration","scope":4936,"src":"13543:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"13543:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13480:84:16"},"returnParameters":{"id":4862,"nodeType":"ParameterList","parameters":[],"src":"13574:0:16"},"scope":6456,"src":"13451:832:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4969,"nodeType":"Block","src":"14410:236:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4946,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"14437:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4945,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"14424:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14424:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4948,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"14448:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14424:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4953,"nodeType":"IfStatement","src":"14420:85:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4950,"name":"BelowHealthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"14486:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14486:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4952,"nodeType":"RevertStatement","src":"14479:26:16"}},{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14515:58:16","subExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4954,"name":"nftLiquidationWarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"14522:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref)))"}},"id":4956,"indexExpression":{"id":4955,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"14544:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14522:30:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref))"}},"id":4958,"indexExpression":{"id":4957,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"14553:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14522:42:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$","typeString":"mapping(uint256 => struct Structs.LiquidatedWarning storage ref)"}},"id":4960,"indexExpression":{"id":4959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"14565:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14522:51:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage","typeString":"struct Structs.LiquidatedWarning storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4962,"nodeType":"ExpressionStatement","src":"14515:58:16"},{"eventCall":{"arguments":[{"id":4964,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"14610:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4965,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"14619:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"14631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4963,"name":"LiquidatingNFTStopped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"14588:21:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14588:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"EmitStatement","src":"14583:56:16"}]},"functionSelector":"0d30320e","id":4970,"implemented":true,"kind":"function","modifiers":[],"name":"stopNFTLiquidation","nameLocation":"14298:18:16","nodeType":"FunctionDefinition","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"account","nameLocation":"14334:7:16","nodeType":"VariableDeclaration","scope":4970,"src":"14326:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4937,"name":"address","nodeType":"ElementaryTypeName","src":"14326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4940,"mutability":"mutable","name":"nftAddress","nameLocation":"14359:10:16","nodeType":"VariableDeclaration","scope":4970,"src":"14351:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4939,"name":"address","nodeType":"ElementaryTypeName","src":"14351:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4942,"mutability":"mutable","name":"tokenId","nameLocation":"14387:7:16","nodeType":"VariableDeclaration","scope":4970,"src":"14379:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"14379:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14316:84:16"},"returnParameters":{"id":4944,"nodeType":"ParameterList","parameters":[],"src":"14410:0:16"},"scope":6456,"src":"14289:357:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5250,"nodeType":"Block","src":"14857:2474:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4985,"name":"repayTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14871:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14883:6:16","memberName":"length","nodeType":"MemberAccess","src":"14871:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14893:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14871:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4992,"nodeType":"IfStatement","src":"14867:48:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4989,"name":"EmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"14903:10:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14903:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4991,"nodeType":"RevertStatement","src":"14896:19:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4993,"name":"repayTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14929:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14941:6:16","memberName":"length","nodeType":"MemberAccess","src":"14929:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4995,"name":"repayAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"14951:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14964:6:16","memberName":"length","nodeType":"MemberAccess","src":"14951:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14929:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5001,"nodeType":"IfStatement","src":"14925:69:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4998,"name":"ArrayMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"14979:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14979:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5000,"nodeType":"RevertStatement","src":"14972:22:16"}},{"expression":{"arguments":[{"id":5003,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"15020:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5004,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"15029:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5005,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"15041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5002,"name":"canLiquidateNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"15004:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15004:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5007,"nodeType":"ExpressionStatement","src":"15004:45:16"},{"assignments":[5009],"declarations":[{"constant":false,"id":5009,"mutability":"mutable","name":"totalDebtValue","nameLocation":"15068:14:16","nodeType":"VariableDeclaration","scope":5250,"src":"15060:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"15060:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5013,"initialValue":{"arguments":[{"id":5011,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"15104:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5010,"name":"getUserTotalBorrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"15085:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15085:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15060:52:16"},{"assignments":[5015],"declarations":[{"constant":false,"id":5015,"mutability":"mutable","name":"nftFloorPrice","nameLocation":"15130:13:16","nodeType":"VariableDeclaration","scope":5250,"src":"15122:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"15122:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5019,"initialValue":{"arguments":[{"id":5017,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"15160:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5016,"name":"getTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"15146:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15146:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15122:49:16"},{"assignments":[5021],"declarations":[{"constant":false,"id":5021,"mutability":"mutable","name":"totalRepaidDebtValue","nameLocation":"15189:20:16","nodeType":"VariableDeclaration","scope":5250,"src":"15181:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"15181:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5022,"nodeType":"VariableDeclarationStatement","src":"15181:28:16"},{"id":5145,"nodeType":"Block","src":"15219:1132:16","statements":[{"assignments":[5024],"declarations":[{"constant":false,"id":5024,"mutability":"mutable","name":"borrower","nameLocation":"15241:8:16","nodeType":"VariableDeclaration","scope":5145,"src":"15233:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5023,"name":"address","nodeType":"ElementaryTypeName","src":"15233:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5026,"initialValue":{"id":5025,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"15252:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15233:26:16"},{"assignments":[5028],"declarations":[{"constant":false,"id":5028,"mutability":"mutable","name":"token","nameLocation":"15281:5:16","nodeType":"VariableDeclaration","scope":5145,"src":"15273:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5027,"name":"address","nodeType":"ElementaryTypeName","src":"15273:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5029,"nodeType":"VariableDeclarationStatement","src":"15273:13:16"},{"assignments":[5031],"declarations":[{"constant":false,"id":5031,"mutability":"mutable","name":"amount","nameLocation":"15308:6:16","nodeType":"VariableDeclaration","scope":5145,"src":"15300:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"15300:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5032,"nodeType":"VariableDeclarationStatement","src":"15300:14:16"},{"assignments":[5034],"declarations":[{"constant":false,"id":5034,"mutability":"mutable","name":"borrowShares","nameLocation":"15336:12:16","nodeType":"VariableDeclaration","scope":5145,"src":"15328:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"15328:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5035,"nodeType":"VariableDeclarationStatement","src":"15328:20:16"},{"body":{"id":5127,"nodeType":"Block","src":"15404:656:16","statements":[{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15422:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5044,"name":"repayTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"15430:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5046,"indexExpression":{"id":5045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"15442:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15430:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15422:22:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5048,"nodeType":"ExpressionStatement","src":"15422:22:16"},{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"15462:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5050,"name":"repayAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"15471:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":5052,"indexExpression":{"id":5051,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"15484:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15471:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15462:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5054,"nodeType":"ExpressionStatement","src":"15462:24:16"},{"expression":{"arguments":[{"id":5056,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15521:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5055,"name":"_accuredInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"15504:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"function (address) returns (uint256,uint256,uint256,uint64)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15504:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"tuple(uint256,uint256,uint256,uint64)"}},"id":5058,"nodeType":"ExpressionStatement","src":"15504:23:16"},{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5059,"name":"borrowShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"15545:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5065,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"15595:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15603:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5060,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"15560:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5062,"indexExpression":{"id":5061,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15567:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15560:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15574:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"15560:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15586:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"15560:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15560:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15545:63:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"15545:63:16"},{"expression":{"arguments":[{"expression":{"id":5073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15646:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15650:6:16","memberName":"sender","nodeType":"MemberAccess","src":"15646:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5077,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15666:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15658:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5075,"name":"address","nodeType":"ElementaryTypeName","src":"15658:7:16","typeDescriptions":{}}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15658:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5079,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"15673:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5070,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15626:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15632:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"15626:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15626:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5081,"nodeType":"ExpressionStatement","src":"15626:54:16"},{"expression":{"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":5082,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"15698:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5084,"indexExpression":{"id":5083,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15705:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15698:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15712:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"15698:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15724:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"15698:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":5089,"name":"borrowShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"15742:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15734:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5087,"name":"uint128","nodeType":"ElementaryTypeName","src":"15734:7:16","typeDescriptions":{}}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15734:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15698:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5092,"nodeType":"ExpressionStatement","src":"15698:57:16"},{"expression":{"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":5093,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"15773:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5095,"indexExpression":{"id":5094,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15780:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15773:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15787:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"15773:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15799:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"15773:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":5100,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"15817:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15809:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5098,"name":"uint128","nodeType":"ElementaryTypeName","src":"15809:7:16","typeDescriptions":{}}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15809:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15773:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5103,"nodeType":"ExpressionStatement","src":"15773:51:16"},{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5104,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"15843:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":5107,"indexExpression":{"id":5105,"name":"borrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"15854:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15843:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":5108,"indexExpression":{"id":5106,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15864:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15843:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":5109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15871:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"15843:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":5112,"name":"borrowShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"15889:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15881:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5110,"name":"uint128","nodeType":"ElementaryTypeName","src":"15881:7:16","typeDescriptions":{}}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15881:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15843:59:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ExpressionStatement","src":"15843:59:16"},{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"totalRepaidDebtValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"15921:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":5118,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"15960:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5119,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"15967:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"name":"getAmountInUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"15945:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15945:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15921:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5122,"nodeType":"ExpressionStatement","src":"15921:53:16"},{"id":5126,"nodeType":"UncheckedBlock","src":"15992:54:16","statements":[{"expression":{"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"16024:3:16","subExpression":{"id":5123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"16026:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5125,"nodeType":"ExpressionStatement","src":"16024:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"15378:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5040,"name":"repayTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"15382:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:6:16","memberName":"length","nodeType":"MemberAccess","src":"15382:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15378:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5128,"initializationExpression":{"assignments":[5037],"declarations":[{"constant":false,"id":5037,"mutability":"mutable","name":"i","nameLocation":"15375:1:16","nodeType":"VariableDeclaration","scope":5128,"src":"15367:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5036,"name":"uint256","nodeType":"ElementaryTypeName","src":"15367:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5038,"nodeType":"VariableDeclarationStatement","src":"15367:9:16"},"nodeType":"ForStatement","src":"15362:698:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"totalDebtValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"16163:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5130,"name":"nftFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"16180:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16163:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5132,"name":"totalRepaidDebtValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"16213:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"nftFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"16253:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5134,"name":"DEFAULT_LIQUIDATION_CLOSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"16269:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16253:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16252:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5137,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"16298:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16252:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16213:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16163:138:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5144,"nodeType":"IfStatement","src":"16142:198:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5141,"name":"MustPayMoreDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"16323:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16323:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5143,"nodeType":"RevertStatement","src":"16316:24:16"}}]},{"assignments":[5147],"declarations":[{"constant":false,"id":5147,"mutability":"mutable","name":"nftBuyPrice","nameLocation":"16369:11:16","nodeType":"VariableDeclaration","scope":5250,"src":"16361:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"16361:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5148,"nodeType":"VariableDeclarationStatement","src":"16361:19:16"},{"id":5231,"nodeType":"Block","src":"16390:682:16","statements":[{"assignments":[5150],"declarations":[{"constant":false,"id":5150,"mutability":"mutable","name":"borrower","nameLocation":"16412:8:16","nodeType":"VariableDeclaration","scope":5231,"src":"16404:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5149,"name":"address","nodeType":"ElementaryTypeName","src":"16404:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5152,"initialValue":{"id":5151,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"16423:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16404:26:16"},{"assignments":[5154],"declarations":[{"constant":false,"id":5154,"mutability":"mutable","name":"totalLiquidatorDiscount","nameLocation":"16452:23:16","nodeType":"VariableDeclaration","scope":5231,"src":"16444:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"16444:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5164,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"totalRepaidDebtValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"16479:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5156,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"16519:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5157,"name":"NFT_LIQUIDATION_DISCOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"16525:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16519:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16518:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16479:71:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16478:73:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5162,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"16554:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16478:79:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16444:113:16"},{"expression":{"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5165,"name":"nftBuyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"16571:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"nftFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"16585:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5167,"name":"totalLiquidatorDiscount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"16601:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16585:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16571:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5170,"nodeType":"ExpressionStatement","src":"16571:53:16"},{"assignments":[5172],"declarations":[{"constant":false,"id":5172,"mutability":"mutable","name":"DAI","nameLocation":"16647:3:16","nodeType":"VariableDeclaration","scope":5231,"src":"16639:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5171,"name":"address","nodeType":"ElementaryTypeName","src":"16639:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5176,"initialValue":{"baseExpression":{"id":5173,"name":"supportedERC20s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"16654:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5175,"indexExpression":{"hexValue":"30","id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16670:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16654:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16639:33:16"},{"expression":{"arguments":[{"expression":{"id":5180,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16704:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16708:6:16","memberName":"sender","nodeType":"MemberAccess","src":"16704:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5184,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16724:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16716:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5182,"name":"address","nodeType":"ElementaryTypeName","src":"16716:7:16","typeDescriptions":{}}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16716:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5186,"name":"nftBuyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"16731:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5177,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"16686:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16690:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"16686:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16686:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5188,"nodeType":"ExpressionStatement","src":"16686:57:16"},{"assignments":[5190],"declarations":[{"constant":false,"id":5190,"mutability":"mutable","name":"shares","nameLocation":"16766:6:16","nodeType":"VariableDeclaration","scope":5231,"src":"16758:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"16758:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5199,"initialValue":{"arguments":[{"id":5196,"name":"nftBuyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"16824:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16853:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5191,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"16775:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5193,"indexExpression":{"id":5192,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"16782:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16775:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16787:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"16775:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16798:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"16775:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16775:97:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16758:114:16"},{"expression":{"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":5200,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"16886:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5202,"indexExpression":{"id":5201,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"16893:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16886:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16898:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"16886:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16909:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"16886:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":5207,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"16927:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16919:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5205,"name":"uint128","nodeType":"ElementaryTypeName","src":"16919:7:16","typeDescriptions":{}}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16919:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16886:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5210,"nodeType":"ExpressionStatement","src":"16886:48:16"},{"expression":{"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":5211,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"16948:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5213,"indexExpression":{"id":5212,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"16955:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16948:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16960:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"16948:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16971:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"16948:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":5218,"name":"nftBuyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"16989:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5216,"name":"uint128","nodeType":"ElementaryTypeName","src":"16981:7:16","typeDescriptions":{}}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16948:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5221,"nodeType":"ExpressionStatement","src":"16948:53:16"},{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5222,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"17015:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":5225,"indexExpression":{"id":5223,"name":"borrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"17026:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17015:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":5226,"indexExpression":{"id":5224,"name":"DAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"17036:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17015:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":5227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17041:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"17015:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5228,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"17055:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17015:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5230,"nodeType":"ExpressionStatement","src":"17015:46:16"}]},{"expression":{"arguments":[{"id":5233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"17095:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5234,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17104:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17108:6:16","memberName":"sender","nodeType":"MemberAccess","src":"17104:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5236,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"17116:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5237,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"17128:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"name":"_withdrawNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"17082:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17082:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5239,"nodeType":"ExpressionStatement","src":"17082:54:16"},{"eventCall":{"arguments":[{"expression":{"id":5241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17179:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17183:6:16","memberName":"sender","nodeType":"MemberAccess","src":"17179:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"17203:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5244,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"17224:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"17248:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5246,"name":"totalRepaidDebtValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"17269:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5247,"name":"nftBuyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"17303:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5240,"name":"NFTLiquidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"17152:13:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256,uint256)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17152:172:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5249,"nodeType":"EmitStatement","src":"17147:177:16"}]},"functionSelector":"c223a9be","id":5251,"implemented":true,"kind":"function","modifiers":[],"name":"executeNFTLiquidation","nameLocation":"14661:21:16","nodeType":"FunctionDefinition","parameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4972,"mutability":"mutable","name":"account","nameLocation":"14700:7:16","nodeType":"VariableDeclaration","scope":5251,"src":"14692:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4971,"name":"address","nodeType":"ElementaryTypeName","src":"14692:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4974,"mutability":"mutable","name":"nftAddress","nameLocation":"14725:10:16","nodeType":"VariableDeclaration","scope":5251,"src":"14717:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4973,"name":"address","nodeType":"ElementaryTypeName","src":"14717:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4976,"mutability":"mutable","name":"tokenId","nameLocation":"14753:7:16","nodeType":"VariableDeclaration","scope":5251,"src":"14745:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"14745:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4979,"mutability":"mutable","name":"repayTokens","nameLocation":"14789:11:16","nodeType":"VariableDeclaration","scope":5251,"src":"14770:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4977,"name":"address","nodeType":"ElementaryTypeName","src":"14770:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4978,"nodeType":"ArrayTypeName","src":"14770:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4982,"mutability":"mutable","name":"repayAmounts","nameLocation":"14829:12:16","nodeType":"VariableDeclaration","scope":5251,"src":"14810:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"14810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4981,"nodeType":"ArrayTypeName","src":"14810:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14682:165:16"},"returnParameters":{"id":4984,"nodeType":"ParameterList","parameters":[],"src":"14857:0:16"},"scope":6456,"src":"14652:2679:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5319,"nodeType":"Block","src":"17458:627:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"17485:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5260,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"17472:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17472:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5263,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"17496:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17472:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5268,"nodeType":"IfStatement","src":"17468:86:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5265,"name":"BorrowerIsSolvant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"17535:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17535:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5267,"nodeType":"RevertStatement","src":"17528:26:16"}},{"assignments":[5273],"declarations":[{"constant":false,"id":5273,"mutability":"mutable","name":"warning","nameLocation":"17598:7:16","nodeType":"VariableDeclaration","scope":5319,"src":"17564:41:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning"},"typeName":{"id":5272,"nodeType":"UserDefinedTypeName","pathNode":{"id":5271,"name":"Structs.LiquidatedWarning","nameLocations":["17564:7:16","17572:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":6881,"src":"17564:25:16"},"referencedDeclaration":6881,"src":"17564:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning"}},"visibility":"internal"}],"id":5281,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5274,"name":"nftLiquidationWarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"17608:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref)))"}},"id":5276,"indexExpression":{"id":5275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"17643:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17608:52:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref))"}},"id":5278,"indexExpression":{"id":5277,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"17661:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17608:64:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$","typeString":"mapping(uint256 => struct Structs.LiquidatedWarning storage ref)"}},"id":5280,"indexExpression":{"id":5279,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"17673:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17608:73:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage","typeString":"struct Structs.LiquidatedWarning storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17564:117:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5282,"name":"warning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"17695:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning storage pointer"}},"id":5283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17703:10:16","memberName":"liquidator","nodeType":"MemberAccess","referencedDeclaration":6878,"src":"17695:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17725:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17717:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5284,"name":"address","nodeType":"ElementaryTypeName","src":"17717:7:16","typeDescriptions":{}}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17717:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17695:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5292,"nodeType":"IfStatement","src":"17691:67:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5289,"name":"NoLiquidationWarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"17736:20:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17736:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5291,"nodeType":"RevertStatement","src":"17729:29:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5293,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17772:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17778:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"17772:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5295,"name":"warning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"17790:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning storage pointer"}},"id":5296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17798:20:16","memberName":"liquidationTimestamp","nodeType":"MemberAccess","referencedDeclaration":6880,"src":"17790:28:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"17772:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5301,"nodeType":"IfStatement","src":"17768:97:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5298,"name":"WarningDelayHasNotPassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"17839:24:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17839:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5300,"nodeType":"RevertStatement","src":"17832:33:16"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5302,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17892:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17898:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"17892:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5304,"name":"warning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"17923:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning storage pointer"}},"id":5305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17931:20:16","memberName":"liquidationTimestamp","nodeType":"MemberAccess","referencedDeclaration":6880,"src":"17923:28:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5306,"name":"NFT_LIQUIDATOR_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"17954:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17923:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17892:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17990:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17994:6:16","memberName":"sender","nodeType":"MemberAccess","src":"17990:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5311,"name":"warning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"18004:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning storage pointer"}},"id":5312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18012:10:16","memberName":"liquidator","nodeType":"MemberAccess","referencedDeclaration":6878,"src":"18004:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17990:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17892:130:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5318,"nodeType":"IfStatement","src":"17875:194:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5315,"name":"LiquidatorDelayHasNotPassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"18040:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18040:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5317,"nodeType":"RevertStatement","src":"18033:36:16"}}]},"functionSelector":"4cd5491c","id":5320,"implemented":true,"kind":"function","modifiers":[],"name":"canLiquidateNFT","nameLocation":"17346:15:16","nodeType":"FunctionDefinition","parameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"account","nameLocation":"17379:7:16","nodeType":"VariableDeclaration","scope":5320,"src":"17371:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5252,"name":"address","nodeType":"ElementaryTypeName","src":"17371:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5255,"mutability":"mutable","name":"nftAddress","nameLocation":"17404:10:16","nodeType":"VariableDeclaration","scope":5320,"src":"17396:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5254,"name":"address","nodeType":"ElementaryTypeName","src":"17396:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5257,"mutability":"mutable","name":"tokenId","nameLocation":"17432:7:16","nodeType":"VariableDeclaration","scope":5320,"src":"17424:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"17424:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17361:84:16"},"returnParameters":{"id":5259,"nodeType":"ParameterList","parameters":[],"src":"17458:0:16"},"scope":6456,"src":"17337:748:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5349,"nodeType":"Block","src":"18424:183:16","statements":[{"expression":{"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5331,"name":"totalTokenCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"18434:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5333,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"18485:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5332,"name":"getUserTotalTokenCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"18457:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18457:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18434:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5336,"nodeType":"ExpressionStatement","src":"18434:56:16"},{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5337,"name":"totalNFTCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"18500:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5339,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"18542:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5338,"name":"getUserNFTCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"18521:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18521:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18500:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5342,"nodeType":"ExpressionStatement","src":"18500:47:16"},{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"totalBorrowValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"18557:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5345,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"18595:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5344,"name":"getUserTotalBorrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"18576:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18576:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18557:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5348,"nodeType":"ExpressionStatement","src":"18557:43:16"}]},"functionSelector":"ffc9896b","id":5350,"implemented":true,"kind":"function","modifiers":[],"name":"getUserData","nameLocation":"18240:11:16","nodeType":"FunctionDefinition","parameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"user","nameLocation":"18269:4:16","nodeType":"VariableDeclaration","scope":5350,"src":"18261:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5321,"name":"address","nodeType":"ElementaryTypeName","src":"18261:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18251:28:16"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"totalTokenCollateral","nameLocation":"18323:20:16","nodeType":"VariableDeclaration","scope":5350,"src":"18315:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"18315:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"totalNFTCollateral","nameLocation":"18361:18:16","nodeType":"VariableDeclaration","scope":5350,"src":"18353:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5326,"name":"uint256","nodeType":"ElementaryTypeName","src":"18353:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"totalBorrowValue","nameLocation":"18397:16:16","nodeType":"VariableDeclaration","scope":5350,"src":"18389:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"18389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18305:114:16"},"scope":6456,"src":"18231:376:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5408,"nodeType":"Block","src":"18724:483:16","statements":[{"assignments":[5358],"declarations":[{"constant":false,"id":5358,"mutability":"mutable","name":"len","nameLocation":"18739:3:16","nodeType":"VariableDeclaration","scope":5408,"src":"18734:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint","nodeType":"ElementaryTypeName","src":"18734:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5361,"initialValue":{"expression":{"id":5359,"name":"supportedERC20s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"18745:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18761:6:16","memberName":"length","nodeType":"MemberAccess","src":"18745:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18734:33:16"},{"body":{"id":5406,"nodeType":"Block","src":"18803:397:16","statements":[{"assignments":[5369],"declarations":[{"constant":false,"id":5369,"mutability":"mutable","name":"token","nameLocation":"18825:5:16","nodeType":"VariableDeclaration","scope":5406,"src":"18817:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5368,"name":"address","nodeType":"ElementaryTypeName","src":"18817:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5373,"initialValue":{"baseExpression":{"id":5370,"name":"supportedERC20s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"18833:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5372,"indexExpression":{"id":5371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"18849:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18833:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18817:34:16"},{"assignments":[5375],"declarations":[{"constant":false,"id":5375,"mutability":"mutable","name":"tokenAmount","nameLocation":"18873:11:16","nodeType":"VariableDeclaration","scope":5406,"src":"18865:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"18865:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5389,"initialValue":{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":5381,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"18938:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":5383,"indexExpression":{"id":5382,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"18949:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18938:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":5385,"indexExpression":{"id":5384,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"18955:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18938:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":5386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18962:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"18938:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18990:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5376,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"18887:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5378,"indexExpression":{"id":5377,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"18894:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18887:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18901:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"18887:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18912:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"18887:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18887:122:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18865:144:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5390,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"19027:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19027:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5401,"nodeType":"IfStatement","src":"19023:108:16","trueBody":{"id":5400,"nodeType":"Block","src":"19045:86:16","statements":[{"expression":{"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5393,"name":"totalValueInUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"19063:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":5395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"19097:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5396,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"19104:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"name":"getAmountInUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"19082:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19082:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19063:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5399,"nodeType":"ExpressionStatement","src":"19063:53:16"}]}},{"id":5405,"nodeType":"UncheckedBlock","src":"19144:46:16","statements":[{"expression":{"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"19172:3:16","subExpression":{"id":5402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"19174:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5404,"nodeType":"ExpressionStatement","src":"19172:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"18793:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5366,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"18797:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18793:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"initializationExpression":{"assignments":[5363],"declarations":[{"constant":false,"id":5363,"mutability":"mutable","name":"i","nameLocation":"18790:1:16","nodeType":"VariableDeclaration","scope":5407,"src":"18782:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5364,"nodeType":"VariableDeclarationStatement","src":"18782:9:16"},"nodeType":"ForStatement","src":"18777:423:16"}]},"functionSelector":"dbe7cc17","id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTotalTokenCollateral","nameLocation":"18622:27:16","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"user","nameLocation":"18667:4:16","nodeType":"VariableDeclaration","scope":5409,"src":"18659:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5351,"name":"address","nodeType":"ElementaryTypeName","src":"18659:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18649:28:16"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"totalValueInUSD","nameLocation":"18707:15:16","nodeType":"VariableDeclaration","scope":5409,"src":"18699:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5354,"name":"uint256","nodeType":"ElementaryTypeName","src":"18699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18698:25:16"},"scope":6456,"src":"18613:594:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5463,"nodeType":"Block","src":"19302:477:16","statements":[{"assignments":[5417],"declarations":[{"constant":false,"id":5417,"mutability":"mutable","name":"len","nameLocation":"19317:3:16","nodeType":"VariableDeclaration","scope":5463,"src":"19312:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint","nodeType":"ElementaryTypeName","src":"19312:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5420,"initialValue":{"expression":{"id":5418,"name":"supportedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"19323:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19337:6:16","memberName":"length","nodeType":"MemberAccess","src":"19323:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19312:31:16"},{"body":{"id":5461,"nodeType":"Block","src":"19379:394:16","statements":[{"assignments":[5428],"declarations":[{"constant":false,"id":5428,"mutability":"mutable","name":"nftAddress","nameLocation":"19401:10:16","nodeType":"VariableDeclaration","scope":5461,"src":"19393:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5427,"name":"address","nodeType":"ElementaryTypeName","src":"19393:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5432,"initialValue":{"baseExpression":{"id":5429,"name":"supportedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"19414:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5431,"indexExpression":{"id":5430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"19428:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19414:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19393:37:16"},{"assignments":[5434],"declarations":[{"constant":false,"id":5434,"mutability":"mutable","name":"userDepositedNFTs","nameLocation":"19452:17:16","nodeType":"VariableDeclaration","scope":5461,"src":"19444:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5433,"name":"uint256","nodeType":"ElementaryTypeName","src":"19444:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5439,"initialValue":{"arguments":[{"id":5436,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"19493:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5437,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"19499:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5435,"name":"getDepositedNFTCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"19472:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19472:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19444:66:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5440,"name":"userDepositedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"19528:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19528:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5456,"nodeType":"IfStatement","src":"19524:180:16","trueBody":{"id":5455,"nodeType":"Block","src":"19552:152:16","statements":[{"assignments":[5444],"declarations":[{"constant":false,"id":5444,"mutability":"mutable","name":"nftFloorPrice","nameLocation":"19578:13:16","nodeType":"VariableDeclaration","scope":5455,"src":"19570:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"19570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5448,"initialValue":{"arguments":[{"id":5446,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"19608:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5445,"name":"getTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"19594:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19594:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19570:49:16"},{"expression":{"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5449,"name":"totalValueInUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"19637:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"userDepositedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"19656:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5451,"name":"nftFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"19676:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19656:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19637:52:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5454,"nodeType":"ExpressionStatement","src":"19637:52:16"}]}},{"id":5460,"nodeType":"UncheckedBlock","src":"19717:46:16","statements":[{"expression":{"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"19745:3:16","subExpression":{"id":5457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"19747:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5459,"nodeType":"ExpressionStatement","src":"19745:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"19369:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5425,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"19373:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19369:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5462,"initializationExpression":{"assignments":[5422],"declarations":[{"constant":false,"id":5422,"mutability":"mutable","name":"i","nameLocation":"19366:1:16","nodeType":"VariableDeclaration","scope":5462,"src":"19358:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"19358:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5423,"nodeType":"VariableDeclarationStatement","src":"19358:9:16"},"nodeType":"ForStatement","src":"19353:420:16"}]},"functionSelector":"2c895aff","id":5464,"implemented":true,"kind":"function","modifiers":[],"name":"getUserNFTCollateral","nameLocation":"19222:20:16","nodeType":"FunctionDefinition","parameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"user","nameLocation":"19251:4:16","nodeType":"VariableDeclaration","scope":5464,"src":"19243:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5410,"name":"address","nodeType":"ElementaryTypeName","src":"19243:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19242:14:16"},"returnParameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5414,"mutability":"mutable","name":"totalValueInUSD","nameLocation":"19285:15:16","nodeType":"VariableDeclaration","scope":5464,"src":"19277:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"19277:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19276:25:16"},"scope":6456,"src":"19213:566:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5522,"nodeType":"Block","src":"19887:479:16","statements":[{"assignments":[5472],"declarations":[{"constant":false,"id":5472,"mutability":"mutable","name":"len","nameLocation":"19902:3:16","nodeType":"VariableDeclaration","scope":5522,"src":"19897:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint","nodeType":"ElementaryTypeName","src":"19897:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5475,"initialValue":{"expression":{"id":5473,"name":"supportedERC20s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"19908:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19924:6:16","memberName":"length","nodeType":"MemberAccess","src":"19908:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19897:33:16"},{"body":{"id":5520,"nodeType":"Block","src":"19966:394:16","statements":[{"assignments":[5483],"declarations":[{"constant":false,"id":5483,"mutability":"mutable","name":"token","nameLocation":"19988:5:16","nodeType":"VariableDeclaration","scope":5520,"src":"19980:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5482,"name":"address","nodeType":"ElementaryTypeName","src":"19980:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5487,"initialValue":{"baseExpression":{"id":5484,"name":"supportedERC20s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"19996:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5486,"indexExpression":{"id":5485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"20012:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19996:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19980:34:16"},{"assignments":[5489],"declarations":[{"constant":false,"id":5489,"mutability":"mutable","name":"tokenAmount","nameLocation":"20036:11:16","nodeType":"VariableDeclaration","scope":5520,"src":"20028:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5488,"name":"uint256","nodeType":"ElementaryTypeName","src":"20028:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5503,"initialValue":{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":5495,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"20102:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":5497,"indexExpression":{"id":5496,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"20113:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20102:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":5499,"indexExpression":{"id":5498,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"20119:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20102:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":5500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20126:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"20102:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20150:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5490,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"20050:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5492,"indexExpression":{"id":5491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"20057:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20050:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20064:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"20050:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20076:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"20050:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20050:119:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20028:141:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"20187:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20202:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20187:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5515,"nodeType":"IfStatement","src":"20183:108:16","trueBody":{"id":5514,"nodeType":"Block","src":"20205:86:16","statements":[{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5507,"name":"totalValueInUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"20223:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":5509,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"20257:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5510,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"20264:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5508,"name":"getAmountInUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"20242:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20242:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20223:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"20223:53:16"}]}},{"id":5519,"nodeType":"UncheckedBlock","src":"20304:46:16","statements":[{"expression":{"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20332:3:16","subExpression":{"id":5516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"20334:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5518,"nodeType":"ExpressionStatement","src":"20332:3:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"19956:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5480,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"19960:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19956:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5521,"initializationExpression":{"assignments":[5477],"declarations":[{"constant":false,"id":5477,"mutability":"mutable","name":"i","nameLocation":"19953:1:16","nodeType":"VariableDeclaration","scope":5521,"src":"19945:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"19945:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5478,"nodeType":"VariableDeclarationStatement","src":"19945:9:16"},"nodeType":"ForStatement","src":"19940:420:16"}]},"functionSelector":"89a1e803","id":5523,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTotalBorrow","nameLocation":"19794:18:16","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"user","nameLocation":"19830:4:16","nodeType":"VariableDeclaration","scope":5523,"src":"19822:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5465,"name":"address","nodeType":"ElementaryTypeName","src":"19822:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19812:28:16"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"totalValueInUSD","nameLocation":"19870:15:16","nodeType":"VariableDeclaration","scope":5523,"src":"19862:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"19862:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19861:25:16"},"scope":6456,"src":"19785:581:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5552,"nodeType":"Block","src":"20573:133:16","statements":[{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"tokenCollateralShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"20583:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5535,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"20606:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":5537,"indexExpression":{"id":5536,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20617:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20606:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":5539,"indexExpression":{"id":5538,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"20623:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20606:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":5540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20630:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"20606:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20583:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"20583:57:16"},{"expression":{"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5543,"name":"tokenBorrowShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"20650:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5544,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"20669:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":5546,"indexExpression":{"id":5545,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20680:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20669:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":5548,"indexExpression":{"id":5547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"20686:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20669:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":5549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20693:6:16","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":6839,"src":"20669:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20650:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5551,"nodeType":"ExpressionStatement","src":"20650:49:16"}]},"functionSelector":"a2d20cf2","id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTokenCollateralAndBorrow","nameLocation":"20381:31:16","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"user","nameLocation":"20430:4:16","nodeType":"VariableDeclaration","scope":5553,"src":"20422:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5524,"name":"address","nodeType":"ElementaryTypeName","src":"20422:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"token","nameLocation":"20452:5:16","nodeType":"VariableDeclaration","scope":5553,"src":"20444:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5526,"name":"address","nodeType":"ElementaryTypeName","src":"20444:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20412:51:16"},"returnParameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"tokenCollateralShare","nameLocation":"20521:20:16","nodeType":"VariableDeclaration","scope":5553,"src":"20513:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"20513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5532,"mutability":"mutable","name":"tokenBorrowShare","nameLocation":"20551:16:16","nodeType":"VariableDeclaration","scope":5553,"src":"20543:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5531,"name":"uint256","nodeType":"ElementaryTypeName","src":"20543:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20512:56:16"},"scope":6456,"src":"20372:334:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5602,"nodeType":"Block","src":"20785:564:16","statements":[{"assignments":[5561,5563,5565],"declarations":[{"constant":false,"id":5561,"mutability":"mutable","name":"totalTokenCollateral","nameLocation":"20817:20:16","nodeType":"VariableDeclaration","scope":5602,"src":"20809:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"20809:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5563,"mutability":"mutable","name":"totalNFTCollateral","nameLocation":"20859:18:16","nodeType":"VariableDeclaration","scope":5602,"src":"20851:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5562,"name":"uint256","nodeType":"ElementaryTypeName","src":"20851:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5565,"mutability":"mutable","name":"totalBorrowValue","nameLocation":"20899:16:16","nodeType":"VariableDeclaration","scope":5602,"src":"20891:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"20891:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5569,"initialValue":{"arguments":[{"id":5567,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"20940:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5566,"name":"getUserData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"20928:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256,uint256)"}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20928:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"20795:150:16"},{"assignments":[5571],"declarations":[{"constant":false,"id":5571,"mutability":"mutable","name":"userTotalCollateralValue","nameLocation":"20964:24:16","nodeType":"VariableDeclaration","scope":5602,"src":"20956:32:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"20956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5575,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5572,"name":"totalTokenCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"20991:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5573,"name":"totalNFTCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"21026:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20991:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20956:88:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"totalBorrowValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"21058:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21078:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21058:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5583,"nodeType":"IfStatement","src":"21054:57:16","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21088:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5580,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"21094:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21088:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5559,"id":5582,"nodeType":"Return","src":"21081:30:16"}},{"assignments":[5585],"declarations":[{"constant":false,"id":5585,"mutability":"mutable","name":"collateralValueWithThreshold","nameLocation":"21129:28:16","nodeType":"VariableDeclaration","scope":5602,"src":"21121:36:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5584,"name":"uint256","nodeType":"ElementaryTypeName","src":"21121:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5592,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5586,"name":"userTotalCollateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"21161:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5587,"name":"LIQUIDATION_THRESHOLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"21201:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21161:61:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21160:63:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5590,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"21226:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21160:69:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21121:108:16"},{"expression":{"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5593,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"21239:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"collateralValueWithThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"21262:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5595,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"21293:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21262:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21261:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5598,"name":"totalBorrowValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"21326:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21261:81:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21239:103:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5601,"nodeType":"ExpressionStatement","src":"21239:103:16"}]},"functionSelector":"6ad9f9df","id":5603,"implemented":true,"kind":"function","modifiers":[],"name":"healthFactor","nameLocation":"20721:12:16","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"user","nameLocation":"20742:4:16","nodeType":"VariableDeclaration","scope":5603,"src":"20734:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5554,"name":"address","nodeType":"ElementaryTypeName","src":"20734:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20733:14:16"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"factor","nameLocation":"20777:6:16","nodeType":"VariableDeclaration","scope":5603,"src":"20769:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"20769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:16:16"},"scope":6456,"src":"20712:637:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5644,"nodeType":"Block","src":"21468:225:16","statements":[{"assignments":[5613],"declarations":[{"constant":false,"id":5613,"mutability":"mutable","name":"price","nameLocation":"21486:5:16","nodeType":"VariableDeclaration","scope":5644,"src":"21478:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"21478:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5617,"initialValue":{"arguments":[{"id":5615,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"21508:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5614,"name":"getTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"21494:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21494:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21478:36:16"},{"assignments":[5619],"declarations":[{"constant":false,"id":5619,"mutability":"mutable","name":"decimals","nameLocation":"21530:8:16","nodeType":"VariableDeclaration","scope":5644,"src":"21524:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5618,"name":"uint8","nodeType":"ElementaryTypeName","src":"21524:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5623,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5620,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"21541:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21547:13:16","memberName":"tokenDecimals","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"21541:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint8_$attached_to$_t_address_$","typeString":"function (address) view returns (uint8)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21541:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"21524:38:16"},{"assignments":[5625],"declarations":[{"constant":false,"id":5625,"mutability":"mutable","name":"amountIn18Decimals","nameLocation":"21580:18:16","nodeType":"VariableDeclaration","scope":5644,"src":"21572:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"21572:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5634,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5626,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"21601:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21610:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21615:2:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5629,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"21619:8:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"21615:12:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21614:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"21610:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21601:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21572:56:16"},{"expression":{"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"21638:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"amountIn18Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"21647:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5637,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"21668:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21647:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21646:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5640,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"21677:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21646:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21638:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5643,"nodeType":"ExpressionStatement","src":"21638:48:16"}]},"functionSelector":"25d07a95","id":5645,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountInUSD","nameLocation":"21364:14:16","nodeType":"FunctionDefinition","parameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"token","nameLocation":"21396:5:16","nodeType":"VariableDeclaration","scope":5645,"src":"21388:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5604,"name":"address","nodeType":"ElementaryTypeName","src":"21388:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5607,"mutability":"mutable","name":"amount","nameLocation":"21419:6:16","nodeType":"VariableDeclaration","scope":5645,"src":"21411:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"21411:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21378:53:16"},"returnParameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"value","nameLocation":"21461:5:16","nodeType":"VariableDeclaration","scope":5645,"src":"21453:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5609,"name":"uint256","nodeType":"ElementaryTypeName","src":"21453:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21452:15:16"},"scope":6456,"src":"21355:338:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5659,"nodeType":"Block","src":"21805:38:16","statements":[{"expression":{"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5653,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"21815:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5654,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"21823:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5656,"indexExpression":{"id":5655,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"21830:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21823:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"src":"21815:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":5658,"nodeType":"ExpressionStatement","src":"21815:21:16"}]},"functionSelector":"30941e62","id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenVault","nameLocation":"21708:13:16","nodeType":"FunctionDefinition","parameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"token","nameLocation":"21739:5:16","nodeType":"VariableDeclaration","scope":5660,"src":"21731:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5646,"name":"address","nodeType":"ElementaryTypeName","src":"21731:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21721:29:16"},"returnParameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"vault","nameLocation":"21798:5:16","nodeType":"VariableDeclaration","scope":5660,"src":"21772:31:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault"},"typeName":{"id":5650,"nodeType":"UserDefinedTypeName","pathNode":{"id":5649,"name":"Structs.TokenVault","nameLocations":["21772:7:16","21780:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":6855,"src":"21772:18:16"},"referencedDeclaration":6855,"src":"21772:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage_ptr","typeString":"struct Structs.TokenVault"}},"visibility":"internal"}],"src":"21771:33:16"},"scope":6456,"src":"21699:144:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5680,"nodeType":"Block","src":"22024:75:16","statements":[{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5672,"name":"nftLiquidationWarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"22041:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref)))"}},"id":5674,"indexExpression":{"id":5673,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"22063:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22041:30:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning storage ref))"}},"id":5676,"indexExpression":{"id":5675,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"22072:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22041:42:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_LiquidatedWarning_$6881_storage_$","typeString":"mapping(uint256 => struct Structs.LiquidatedWarning storage ref)"}},"id":5678,"indexExpression":{"id":5677,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"22084:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22041:51:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage","typeString":"struct Structs.LiquidatedWarning storage ref"}},"functionReturnParameters":5671,"id":5679,"nodeType":"Return","src":"22034:58:16"}]},"functionSelector":"ff9b8bb8","id":5681,"implemented":true,"kind":"function","modifiers":[],"name":"getNFTLiquidationWarning","nameLocation":"21858:24:16","nodeType":"FunctionDefinition","parameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"account","nameLocation":"21900:7:16","nodeType":"VariableDeclaration","scope":5681,"src":"21892:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5661,"name":"address","nodeType":"ElementaryTypeName","src":"21892:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5664,"mutability":"mutable","name":"nftAddress","nameLocation":"21925:10:16","nodeType":"VariableDeclaration","scope":5681,"src":"21917:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5663,"name":"address","nodeType":"ElementaryTypeName","src":"21917:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5666,"mutability":"mutable","name":"tokenId","nameLocation":"21953:7:16","nodeType":"VariableDeclaration","scope":5681,"src":"21945:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"21945:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21882:84:16"},"returnParameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5681,"src":"21990:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_memory_ptr","typeString":"struct Structs.LiquidatedWarning"},"typeName":{"id":5669,"nodeType":"UserDefinedTypeName","pathNode":{"id":5668,"name":"Structs.LiquidatedWarning","nameLocations":["21990:7:16","21998:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":6881,"src":"21990:25:16"},"referencedDeclaration":6881,"src":"21990:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidatedWarning_$6881_storage_ptr","typeString":"struct Structs.LiquidatedWarning"}},"visibility":"internal"}],"src":"21989:34:16"},"scope":6456,"src":"21849:250:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5724,"nodeType":"Block","src":"22244:218:16","statements":[{"condition":{"id":5692,"name":"isAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"22258:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5722,"nodeType":"Block","src":"22364:92:16","statements":[{"expression":{"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5708,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"22378:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5716,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"22430:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22438:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5711,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"22395:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5713,"indexExpression":{"id":5712,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"22402:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22395:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22409:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"22395:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22421:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"22395:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22395:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22387:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"22387:7:16","typeDescriptions":{}}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22387:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22378:67:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5721,"nodeType":"ExpressionStatement","src":"22378:67:16"}]},"id":5723,"nodeType":"IfStatement","src":"22254:202:16","trueBody":{"id":5707,"nodeType":"Block","src":"22267:91:16","statements":[{"expression":{"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5693,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"22281:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"22332:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22340:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5696,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"22298:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5698,"indexExpression":{"id":5697,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"22305:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22298:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22312:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"22298:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22323:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"22298:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22298:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22290:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"22290:7:16","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22290:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22281:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5706,"nodeType":"ExpressionStatement","src":"22281:66:16"}]}}]},"functionSelector":"0f342ee9","id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"amountToShares","nameLocation":"22114:14:16","nodeType":"FunctionDefinition","parameters":{"id":5688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"token","nameLocation":"22146:5:16","nodeType":"VariableDeclaration","scope":5725,"src":"22138:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5682,"name":"address","nodeType":"ElementaryTypeName","src":"22138:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5685,"mutability":"mutable","name":"amount","nameLocation":"22170:6:16","nodeType":"VariableDeclaration","scope":5725,"src":"22162:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5684,"name":"uint256","nodeType":"ElementaryTypeName","src":"22162:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5687,"mutability":"mutable","name":"isAsset","nameLocation":"22191:7:16","nodeType":"VariableDeclaration","scope":5725,"src":"22186:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5686,"name":"bool","nodeType":"ElementaryTypeName","src":"22186:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22128:76:16"},"returnParameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"shares","nameLocation":"22236:6:16","nodeType":"VariableDeclaration","scope":5725,"src":"22228:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint256","nodeType":"ElementaryTypeName","src":"22228:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22227:16:16"},"scope":6456,"src":"22105:357:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5768,"nodeType":"Block","src":"22606:219:16","statements":[{"condition":{"id":5736,"name":"isAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"22621:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5766,"nodeType":"Block","src":"22727:92:16","statements":[{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5752,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"22741:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5760,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"22793:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22801:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5755,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"22758:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5757,"indexExpression":{"id":5756,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"22765:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22758:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22772:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"22758:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22784:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"22758:34:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22758:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22750:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"22750:7:16","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22750:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22741:67:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5765,"nodeType":"ExpressionStatement","src":"22741:67:16"}]},"id":5767,"nodeType":"IfStatement","src":"22617:202:16","trueBody":{"id":5751,"nodeType":"Block","src":"22630:91:16","statements":[{"expression":{"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"22644:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5745,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"22695:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22703:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5740,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"22661:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5742,"indexExpression":{"id":5741,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"22668:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22661:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22675:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"22661:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22686:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"22661:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22661:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22653:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"22653:7:16","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22653:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22644:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5750,"nodeType":"ExpressionStatement","src":"22644:66:16"}]}}]},"functionSelector":"fdda8295","id":5769,"implemented":true,"kind":"function","modifiers":[],"name":"sharesToAmount","nameLocation":"22477:14:16","nodeType":"FunctionDefinition","parameters":{"id":5732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"token","nameLocation":"22509:5:16","nodeType":"VariableDeclaration","scope":5769,"src":"22501:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5726,"name":"address","nodeType":"ElementaryTypeName","src":"22501:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5729,"mutability":"mutable","name":"shares","nameLocation":"22532:6:16","nodeType":"VariableDeclaration","scope":5769,"src":"22524:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"22524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5731,"mutability":"mutable","name":"isAsset","nameLocation":"22553:7:16","nodeType":"VariableDeclaration","scope":5769,"src":"22548:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5730,"name":"bool","nodeType":"ElementaryTypeName","src":"22548:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22491:75:16"},"returnParameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"amount","nameLocation":"22598:6:16","nodeType":"VariableDeclaration","scope":5769,"src":"22590:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5733,"name":"uint256","nodeType":"ElementaryTypeName","src":"22590:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22589:16:16"},"scope":6456,"src":"22468:357:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5789,"nodeType":"Block","src":"22931:81:16","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5776,"name":"maxFlashloanAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"22941:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"arguments":[{"id":5778,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"22975:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5777,"name":"pausedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"22962:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22962:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22993:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"22993:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22988:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22988:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23002:3:16","memberName":"max","nodeType":"MemberAccess","src":"22988:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22962:43:16","trueExpression":{"hexValue":"30","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22941:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"22941:64:16"}]},"functionSelector":"bf370299","id":5790,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashloan","nameLocation":"22840:12:16","nodeType":"FunctionDefinition","parameters":{"id":5772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"token","nameLocation":"22870:5:16","nodeType":"VariableDeclaration","scope":5790,"src":"22862:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5770,"name":"address","nodeType":"ElementaryTypeName","src":"22862:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22852:29:16"},"returnParameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"mutability":"mutable","name":"maxFlashloanAmount","nameLocation":"22911:18:16","nodeType":"VariableDeclaration","scope":5790,"src":"22903:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5773,"name":"uint256","nodeType":"ElementaryTypeName","src":"22903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22902:28:16"},"scope":6456,"src":"22831:181:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5810,"nodeType":"Block","src":"23123:77:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"23141:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"baseExpression":{"id":5800,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"23150:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5802,"indexExpression":{"id":5801,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"23157:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23150:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23164:9:16","memberName":"vaultInfo","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"23150:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage","typeString":"struct Structs.VaultInfo storage ref"}},"id":5804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23174:12:16","memberName":"flashFeeRate","nodeType":"MemberAccess","referencedDeclaration":6861,"src":"23150:36:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"23141:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23140:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5807,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"23190:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23140:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5798,"id":5809,"nodeType":"Return","src":"23133:60:16"}]},"functionSelector":"93f2d72e","id":5811,"implemented":true,"kind":"function","modifiers":[],"name":"flashloanFee","nameLocation":"23027:12:16","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"token","nameLocation":"23057:5:16","nodeType":"VariableDeclaration","scope":5811,"src":"23049:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5791,"name":"address","nodeType":"ElementaryTypeName","src":"23049:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5794,"mutability":"mutable","name":"amount","nameLocation":"23080:6:16","nodeType":"VariableDeclaration","scope":5811,"src":"23072:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5793,"name":"uint256","nodeType":"ElementaryTypeName","src":"23072:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23039:53:16"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5811,"src":"23114:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"23114:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23113:9:16"},"scope":6456,"src":"23018:182:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5836,"nodeType":"Block","src":"23557:75:16","statements":[{"expression":{"arguments":[{"id":5829,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"23579:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5830,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"23586:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5831,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"23597:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},{"id":5832,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"23608:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},{"id":5833,"name":"addToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"23616:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5828,"name":"_setupVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"23567:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_TokenType_$6827_$_t_struct$_VaultSetupParamemters_$6896_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,enum Structs.TokenType,struct Structs.VaultSetupParamemters memory,bool)"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23567:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5835,"nodeType":"ExpressionStatement","src":"23567:58:16"}]},"functionSelector":"1880b981","id":5837,"implemented":true,"kind":"function","modifiers":[{"id":5826,"kind":"modifierInvocation","modifierName":{"id":5825,"name":"onlyOwner","nameLocations":["23547:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"23547:9:16"},"nodeType":"ModifierInvocation","src":"23547:9:16"}],"name":"setupVault","nameLocation":"23358:10:16","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"token","nameLocation":"23386:5:16","nodeType":"VariableDeclaration","scope":5837,"src":"23378:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5812,"name":"address","nodeType":"ElementaryTypeName","src":"23378:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5815,"mutability":"mutable","name":"priceFeed","nameLocation":"23409:9:16","nodeType":"VariableDeclaration","scope":5837,"src":"23401:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5814,"name":"address","nodeType":"ElementaryTypeName","src":"23401:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5818,"mutability":"mutable","name":"tokenType","nameLocation":"23446:9:16","nodeType":"VariableDeclaration","scope":5837,"src":"23428:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"typeName":{"id":5817,"nodeType":"UserDefinedTypeName","pathNode":{"id":5816,"name":"Structs.TokenType","nameLocations":["23428:7:16","23436:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":6827,"src":"23428:17:16"},"referencedDeclaration":6827,"src":"23428:17:16","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"visibility":"internal"},{"constant":false,"id":5821,"mutability":"mutable","name":"params","nameLocation":"23502:6:16","nodeType":"VariableDeclaration","scope":5837,"src":"23465:43:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters"},"typeName":{"id":5820,"nodeType":"UserDefinedTypeName","pathNode":{"id":5819,"name":"Structs.VaultSetupParamemters","nameLocations":["23465:7:16","23473:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":6896,"src":"23465:29:16"},"referencedDeclaration":6896,"src":"23465:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_storage_ptr","typeString":"struct Structs.VaultSetupParamemters"}},"visibility":"internal"},{"constant":false,"id":5823,"mutability":"mutable","name":"addToken","nameLocation":"23523:8:16","nodeType":"VariableDeclaration","scope":5837,"src":"23518:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5822,"name":"bool","nodeType":"ElementaryTypeName","src":"23518:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23368:169:16"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[],"src":"23557:0:16"},"scope":6456,"src":"23349:283:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5887,"nodeType":"Block","src":"24070:314:16","statements":[{"assignments":[5847],"declarations":[{"constant":false,"id":5847,"mutability":"mutable","name":"minVaultReserve","nameLocation":"24088:15:16","nodeType":"VariableDeclaration","scope":5887,"src":"24080:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"24080:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5862,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":5848,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"24107:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5850,"indexExpression":{"id":5849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"24114:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24107:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24121:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"24107:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24132:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"24107:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"baseExpression":{"id":5853,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"24153:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5855,"indexExpression":{"id":5854,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"24160:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24153:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24167:9:16","memberName":"vaultInfo","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"24153:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage","typeString":"struct Structs.VaultInfo storage ref"}},"id":5857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24177:12:16","memberName":"reserveRatio","nodeType":"MemberAccess","referencedDeclaration":6857,"src":"24153:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24107:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24106:84:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5860,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"24193:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24106:90:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24080:116:16"},{"expression":{"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5863,"name":"isAboveReserveRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"24206:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":5864,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"24240:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5866,"indexExpression":{"id":5865,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"24247:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24240:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24254:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"24240:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24265:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"24240:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24275:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24240:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5877,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24324:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24316:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5875,"name":"address","nodeType":"ElementaryTypeName","src":"24316:7:16","typeDescriptions":{}}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24316:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5872,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"24299:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5871,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"24292:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$373_$","typeString":"type(contract IERC20)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24292:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$373","typeString":"contract IERC20"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24306:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":330,"src":"24292:23:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24292:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"minVaultReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"24347:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5881,"name":"pulledAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"24365:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24347:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24292:85:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24240:137:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24206:171:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5886,"nodeType":"ExpressionStatement","src":"24206:171:16"}]},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"vaultAboveReserveRatio","nameLocation":"23939:22:16","nodeType":"FunctionDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"token","nameLocation":"23979:5:16","nodeType":"VariableDeclaration","scope":5888,"src":"23971:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5838,"name":"address","nodeType":"ElementaryTypeName","src":"23971:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5841,"mutability":"mutable","name":"pulledAmount","nameLocation":"24002:12:16","nodeType":"VariableDeclaration","scope":5888,"src":"23994:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"23994:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23961:59:16"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"isAboveReserveRatio","nameLocation":"24049:19:16","nodeType":"VariableDeclaration","scope":5888,"src":"24044:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5843,"name":"bool","nodeType":"ElementaryTypeName","src":"24044:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24043:26:16"},"scope":6456,"src":"23930:454:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6044,"nodeType":"Block","src":"24533:1161:16","statements":[{"expression":{"arguments":[{"id":5900,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"24560:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5899,"name":"_accuredInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"24543:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"function (address) returns (uint256,uint256,uint256,uint64)"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24543:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"tuple(uint256,uint256,uint256,uint64)"}},"id":5902,"nodeType":"ExpressionStatement","src":"24543:23:16"},{"assignments":[5904],"declarations":[{"constant":false,"id":5904,"mutability":"mutable","name":"userCollateralShares","nameLocation":"24585:20:16","nodeType":"VariableDeclaration","scope":6044,"src":"24577:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint256","nodeType":"ElementaryTypeName","src":"24577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5912,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":5905,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"24608:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":5908,"indexExpression":{"expression":{"id":5906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24619:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24623:6:16","memberName":"sender","nodeType":"MemberAccess","src":"24619:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24608:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":5910,"indexExpression":{"id":5909,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"24631:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24608:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":5911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24638:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"24608:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24577:71:16"},{"assignments":[5914],"declarations":[{"constant":false,"id":5914,"mutability":"mutable","name":"shares","nameLocation":"24666:6:16","nodeType":"VariableDeclaration","scope":6044,"src":"24658:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"24658:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5915,"nodeType":"VariableDeclarationStatement","src":"24658:14:16"},{"condition":{"id":5916,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24685:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5960,"nodeType":"Block","src":"24907:180:16","statements":[{"expression":{"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5941,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"24921:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5947,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"24964:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24972:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5942,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"24930:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5944,"indexExpression":{"id":5943,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"24937:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24930:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24944:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"24930:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24955:8:16","memberName":"toShares","nodeType":"MemberAccess","referencedDeclaration":7207,"src":"24930:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24930:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24921:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5951,"nodeType":"ExpressionStatement","src":"24921:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5952,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"24996:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5953,"name":"minAmountOutOrMaxShareIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"25005:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24996:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5959,"nodeType":"IfStatement","src":"24992:84:16","trueBody":{"errorCall":{"arguments":[{"id":5956,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"25069:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5955,"name":"TooHighSlipage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"25054:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25054:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5958,"nodeType":"RevertStatement","src":"25047:29:16"}}]},"id":5961,"nodeType":"IfStatement","src":"24682:405:16","trueBody":{"id":5940,"nodeType":"Block","src":"24692:209:16","statements":[{"expression":{"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5917,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"24706:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"24715:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24706:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5920,"nodeType":"ExpressionStatement","src":"24706:15:16"},{"expression":{"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5921,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"24735:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5927,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"24778:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24786:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"expression":{"baseExpression":{"id":5922,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"24744:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5924,"indexExpression":{"id":5923,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"24751:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24744:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24758:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"24744:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24769:8:16","memberName":"toAmount","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"24744:33:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Vault_$6845_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$attached_to$_t_struct$_Vault_$6845_memory_ptr_$","typeString":"function (struct Structs.Vault memory,uint256,bool) pure returns (uint256)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24744:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24735:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5931,"nodeType":"ExpressionStatement","src":"24735:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5932,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"24810:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5933,"name":"minAmountOutOrMaxShareIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"24819:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24810:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5939,"nodeType":"IfStatement","src":"24806:84:16","trueBody":{"errorCall":{"arguments":[{"id":5936,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"24883:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5935,"name":"TooHighSlipage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"24868:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24868:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"RevertStatement","src":"24861:29:16"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5962,"name":"userCollateralShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"25113:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5963,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"25136:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25113:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5971,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25190:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25182:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5969,"name":"address","nodeType":"ElementaryTypeName","src":"25182:7:16","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25182:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5966,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"25165:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5965,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"25158:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$373_$","typeString":"type(contract IERC20)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25158:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$373","typeString":"contract IERC20"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25172:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":330,"src":"25158:23:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25158:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5974,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"25199:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25158:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25113:92:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5980,"nodeType":"IfStatement","src":"25096:148:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5977,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"25223:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25223:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5979,"nodeType":"RevertStatement","src":"25216:28:16"}},{"id":6013,"nodeType":"UncheckedBlock","src":"25254:213:16","statements":[{"expression":{"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":5981,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"25278:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5983,"indexExpression":{"id":5982,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"25285:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25278:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25292:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"25278:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25303:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"25278:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":5988,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"25321:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25313:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5986,"name":"uint128","nodeType":"ElementaryTypeName","src":"25313:7:16","typeDescriptions":{}}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25313:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"25278:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5991,"nodeType":"ExpressionStatement","src":"25278:50:16"},{"expression":{"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":5992,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"25342:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":5994,"indexExpression":{"id":5993,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"25349:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25342:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":5995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25356:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"25342:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage","typeString":"struct Structs.Vault storage ref"}},"id":5996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25367:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"25342:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"id":5999,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"25385:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25377:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5997,"name":"uint128","nodeType":"ElementaryTypeName","src":"25377:7:16","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25377:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"25342:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ExpressionStatement","src":"25342:50:16"},{"expression":{"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":6003,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"25406:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":6007,"indexExpression":{"expression":{"id":6004,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25417:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25421:6:16","memberName":"sender","nodeType":"MemberAccess","src":"25417:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25406:22:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":6008,"indexExpression":{"id":6006,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"25429:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25406:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":6009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25436:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"25406:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6010,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"25450:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25406:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6012,"nodeType":"ExpressionStatement","src":"25406:50:16"}]},{"expression":{"arguments":[{"arguments":[{"id":6019,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25505:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25497:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6017,"name":"address","nodeType":"ElementaryTypeName","src":"25497:7:16","typeDescriptions":{}}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25497:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25512:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25516:6:16","memberName":"sender","nodeType":"MemberAccess","src":"25512:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6023,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"25524:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6014,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"25477:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25483:13:16","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"25477:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$","typeString":"function (address,address,address,uint256)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25477:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6025,"nodeType":"ExpressionStatement","src":"25477:54:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25558:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25562:6:16","memberName":"sender","nodeType":"MemberAccess","src":"25558:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6026,"name":"healthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"25545:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25545:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6030,"name":"MIN_HEALTH_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"25572:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25545:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6035,"nodeType":"IfStatement","src":"25541:88:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6032,"name":"BelowHealthFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"25610:17:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25610:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6034,"nodeType":"RevertStatement","src":"25603:26:16"}},{"eventCall":{"arguments":[{"expression":{"id":6037,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25653:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25657:6:16","memberName":"sender","nodeType":"MemberAccess","src":"25653:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6039,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"25665:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6040,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"25672:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6041,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"25680:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6036,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"25644:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25644:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6043,"nodeType":"EmitStatement","src":"25639:48:16"}]},"id":6045,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"24399:9:16","nodeType":"FunctionDefinition","parameters":{"id":5897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"token","nameLocation":"24426:5:16","nodeType":"VariableDeclaration","scope":6045,"src":"24418:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5889,"name":"address","nodeType":"ElementaryTypeName","src":"24418:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5892,"mutability":"mutable","name":"amount","nameLocation":"24449:6:16","nodeType":"VariableDeclaration","scope":6045,"src":"24441:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5891,"name":"uint256","nodeType":"ElementaryTypeName","src":"24441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5894,"mutability":"mutable","name":"minAmountOutOrMaxShareIn","nameLocation":"24473:24:16","nodeType":"VariableDeclaration","scope":6045,"src":"24465:32:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"24465:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5896,"mutability":"mutable","name":"share","nameLocation":"24512:5:16","nodeType":"VariableDeclaration","scope":6045,"src":"24507:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5895,"name":"bool","nodeType":"ElementaryTypeName","src":"24507:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24408:115:16"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[],"src":"24533:0:16"},"scope":6456,"src":"24390:1304:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6323,"nodeType":"Block","src":"25933:2656:16","statements":[{"assignments":[6062],"declarations":[{"constant":false,"id":6062,"mutability":"mutable","name":"_vault","nameLocation":"25969:6:16","nodeType":"VariableDeclaration","scope":6323,"src":"25943:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault"},"typeName":{"id":6061,"nodeType":"UserDefinedTypeName","pathNode":{"id":6060,"name":"Structs.TokenVault","nameLocations":["25943:7:16","25951:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":6855,"src":"25943:18:16"},"referencedDeclaration":6855,"src":"25943:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage_ptr","typeString":"struct Structs.TokenVault"}},"visibility":"internal"}],"id":6066,"initialValue":{"baseExpression":{"id":6063,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"25978:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":6065,"indexExpression":{"id":6064,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"25985:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25978:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25943:48:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6067,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"26005:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26012:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"26005:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26023:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"26005:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26005:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6079,"nodeType":"IfStatement","src":"26001:79:16","trueBody":{"id":6078,"nodeType":"Block","src":"26036:44:16","statements":[{"expression":{"components":[{"hexValue":"30","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26058:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26064:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"26057:12:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 0,int_const 0,int_const 0,int_const 0)"}},"functionReturnParameters":6057,"id":6077,"nodeType":"Return","src":"26050:19:16"}]}},{"assignments":[6084],"declarations":[{"constant":false,"id":6084,"mutability":"mutable","name":"_currentRateInfo","nameLocation":"26158:16:16","nodeType":"VariableDeclaration","scope":6323,"src":"26133:41:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo"},"typeName":{"id":6083,"nodeType":"UserDefinedTypeName","pathNode":{"id":6082,"name":"Structs.VaultInfo","nameLocations":["26133:7:16","26141:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":6876,"src":"26133:17:16"},"referencedDeclaration":6876,"src":"26133:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo"}},"visibility":"internal"}],"id":6087,"initialValue":{"expression":{"id":6085,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"26177:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26184:9:16","memberName":"vaultInfo","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"26177:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"26133:60:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6088,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26207:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26224:13:16","memberName":"lastTimestamp","nodeType":"MemberAccess","referencedDeclaration":6865,"src":"26207:30:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6090,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26241:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26247:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"26241:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26207:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6105,"nodeType":"IfStatement","src":"26203:189:16","trueBody":{"id":6104,"nodeType":"Block","src":"26258:134:16","statements":[{"expression":{"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6093,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"26272:7:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6094,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26282:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26299:10:16","memberName":"ratePerSec","nodeType":"MemberAccess","referencedDeclaration":6863,"src":"26282:27:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"26272:37:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6097,"nodeType":"ExpressionStatement","src":"26272:37:16"},{"expression":{"components":[{"id":6098,"name":"_interestEarned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"26331:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6099,"name":"_feesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"26348:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6100,"name":"_feesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"26361:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6101,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"26373:7:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":6102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26330:51:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint64_$","typeString":"tuple(uint256,uint256,uint256,uint64)"}},"functionReturnParameters":6057,"id":6103,"nodeType":"Return","src":"26323:58:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6106,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"26489:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26496:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"26489:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26508:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"26489:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26517:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26489:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":6112,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"26535:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6111,"name":"pausedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"26522:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26522:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26489:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6315,"nodeType":"Block","src":"26741:1783:16","statements":[{"assignments":[6143],"declarations":[{"constant":false,"id":6143,"mutability":"mutable","name":"_deltaTime","nameLocation":"26763:10:16","nodeType":"VariableDeclaration","scope":6315,"src":"26755:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"26755:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6149,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6144,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26776:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26782:6:16","memberName":"number","nodeType":"MemberAccess","src":"26776:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6146,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26791:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26808:9:16","memberName":"lastBlock","nodeType":"MemberAccess","referencedDeclaration":6867,"src":"26791:26:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"26776:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26755:62:16"},{"assignments":[6151],"declarations":[{"constant":false,"id":6151,"mutability":"mutable","name":"_utilization","nameLocation":"26839:12:16","nodeType":"VariableDeclaration","scope":6315,"src":"26831:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"26831:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6162,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6152,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"26855:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26862:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"26855:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26874:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"26855:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6155,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"26883:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26855:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26854:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"expression":{"id":6158,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"26912:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26919:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"26912:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26930:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"26912:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26854:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26831:105:16"},{"assignments":[6164],"declarations":[{"constant":false,"id":6164,"mutability":"mutable","name":"_newRate","nameLocation":"26958:8:16","nodeType":"VariableDeclaration","scope":6315,"src":"26950:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6163,"name":"uint256","nodeType":"ElementaryTypeName","src":"26950:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6169,"initialValue":{"arguments":[{"id":6167,"name":"_utilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"27019:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6165,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26969:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26986:15:16","memberName":"getInterestRate","nodeType":"MemberAccess","referencedDeclaration":7148,"src":"26969:32:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VaultInfo_$6876_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_VaultInfo_$6876_memory_ptr_$","typeString":"function (struct Structs.VaultInfo memory,uint256) pure returns (uint256)"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26969:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26950:95:16"},{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6170,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"27059:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"27076:10:16","memberName":"ratePerSec","nodeType":"MemberAccess","referencedDeclaration":6863,"src":"27059:27:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6175,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"27096:7:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27089:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6173,"name":"uint64","nodeType":"ElementaryTypeName","src":"27089:6:16","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27089:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"27059:45:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6178,"nodeType":"ExpressionStatement","src":"27059:45:16"},{"expression":{"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6179,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"27118:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"27135:13:16","memberName":"lastTimestamp","nodeType":"MemberAccess","referencedDeclaration":6865,"src":"27118:30:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6184,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"27158:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27164:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"27158:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27151:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6182,"name":"uint64","nodeType":"ElementaryTypeName","src":"27151:6:16","typeDescriptions":{}}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27151:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"27118:56:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6188,"nodeType":"ExpressionStatement","src":"27118:56:16"},{"expression":{"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6189,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"27188:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"27205:9:16","memberName":"lastBlock","nodeType":"MemberAccess","referencedDeclaration":6867,"src":"27188:26:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6194,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"27224:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27230:6:16","memberName":"number","nodeType":"MemberAccess","src":"27224:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27217:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6192,"name":"uint64","nodeType":"ElementaryTypeName","src":"27217:6:16","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27217:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"27188:49:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6198,"nodeType":"ExpressionStatement","src":"27188:49:16"},{"eventCall":{"arguments":[{"id":6200,"name":"_deltaTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"27276:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6203,"name":"_newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"27295:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27288:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6201,"name":"uint64","nodeType":"ElementaryTypeName","src":"27288:6:16","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27288:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6199,"name":"UpdateInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"27257:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$returns$__$","typeString":"function (uint256,uint64)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27257:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6206,"nodeType":"EmitStatement","src":"27252:53:16"},{"expression":{"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6207,"name":"_interestEarned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"27361:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6208,"name":"_deltaTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"27396:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":6209,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"27425:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27432:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"27425:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27444:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"27425:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27396:54:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6213,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"27469:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27486:10:16","memberName":"ratePerSec","nodeType":"MemberAccess","referencedDeclaration":6863,"src":"27469:27:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"27396:100:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27395:102:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6217,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"27513:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6218,"name":"BLOCKS_PER_YEAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"27525:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27513:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27512:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27395:146:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27361:180:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6223,"nodeType":"ExpressionStatement","src":"27361:180:16"},{"expression":{"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":6224,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"27600:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27607:11:16","memberName":"totalBorrow","nodeType":"MemberAccess","referencedDeclaration":6851,"src":"27600:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"27619:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"27600:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":6231,"name":"_interestEarned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"27637:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27629:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6229,"name":"uint128","nodeType":"ElementaryTypeName","src":"27629:7:16","typeDescriptions":{}}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27629:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"27600:53:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6234,"nodeType":"ExpressionStatement","src":"27600:53:16"},{"expression":{"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":6235,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"27667:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27674:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"27667:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"27685:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"27667:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":6242,"name":"_interestEarned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"27703:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27695:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6240,"name":"uint128","nodeType":"ElementaryTypeName","src":"27695:7:16","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27695:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"27667:52:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6245,"nodeType":"ExpressionStatement","src":"27667:52:16"},{"expression":{"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6246,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"27733:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"27740:9:16","memberName":"vaultInfo","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"27733:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6249,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"27752:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"src":"27733:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6251,"nodeType":"ExpressionStatement","src":"27733:35:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6252,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"27786:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27803:17:16","memberName":"feeToProtocolRate","nodeType":"MemberAccess","referencedDeclaration":6859,"src":"27786:34:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27786:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6306,"nodeType":"IfStatement","src":"27782:549:16","trueBody":{"id":6305,"nodeType":"Block","src":"27826:505:16","statements":[{"expression":{"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6256,"name":"_feesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"27844:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"_interestEarned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"27879:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6258,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"27897:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27914:17:16","memberName":"feeToProtocolRate","nodeType":"MemberAccess","referencedDeclaration":6859,"src":"27897:34:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"27879:52:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27878:54:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6262,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"27955:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27878:80:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27844:114:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6265,"nodeType":"ExpressionStatement","src":"27844:114:16"},{"expression":{"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6266,"name":"_feesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"27976:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"_feesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"28010:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":6268,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"28024:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28031:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"28024:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28042:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"28024:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28010:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28009:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6273,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"28073:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28080:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"28073:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28091:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"28073:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6276,"name":"_feesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"28100:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28073:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28072:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28009:103:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27976:136:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6281,"nodeType":"ExpressionStatement","src":"27976:136:16"},{"expression":{"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":6282,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"28130:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28137:10:16","memberName":"totalAsset","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"28130:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":6286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"28148:6:16","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"28130:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":6289,"name":"_feesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"28166:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28158:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6287,"name":"uint128","nodeType":"ElementaryTypeName","src":"28158:7:16","typeDescriptions":{}}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28158:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"28130:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6292,"nodeType":"ExpressionStatement","src":"28130:47:16"},{"expression":{"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":6293,"name":"userShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"28259:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$_$","typeString":"mapping(address => mapping(address => struct Structs.AccountShares storage ref))"}},"id":6299,"indexExpression":{"arguments":[{"id":6296,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"28278:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HydraPool_$6456","typeString":"contract HydraPool"}],"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28270:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6294,"name":"address","nodeType":"ElementaryTypeName","src":"28270:7:16","typeDescriptions":{}}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28270:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28259:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AccountShares_$6840_storage_$","typeString":"mapping(address => struct Structs.AccountShares storage ref)"}},"id":6300,"indexExpression":{"id":6298,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"28285:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28259:32:16","typeDescriptions":{"typeIdentifier":"t_struct$_AccountShares_$6840_storage","typeString":"struct Structs.AccountShares storage ref"}},"id":6301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"28292:10:16","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"28259:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6302,"name":"_feesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"28306:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28259:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6304,"nodeType":"ExpressionStatement","src":"28259:57:16"}]}},{"eventCall":{"arguments":[{"expression":{"id":6308,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"28382:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28399:10:16","memberName":"ratePerSec","nodeType":"MemberAccess","referencedDeclaration":6863,"src":"28382:27:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":6310,"name":"_interestEarned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"28427:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6311,"name":"_feesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"28460:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6312,"name":"_feesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"28489:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6307,"name":"AccuredInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"28349:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256,uint256)"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28349:164:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6314,"nodeType":"EmitStatement","src":"28344:169:16"}]},"id":6316,"nodeType":"IfStatement","src":"26486:2038:16","trueBody":{"id":6141,"nodeType":"Block","src":"26543:192:16","statements":[{"expression":{"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6115,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26557:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26574:13:16","memberName":"lastTimestamp","nodeType":"MemberAccess","referencedDeclaration":6865,"src":"26557:30:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6120,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26596:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26602:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"26596:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26589:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6118,"name":"uint64","nodeType":"ElementaryTypeName","src":"26589:6:16","typeDescriptions":{}}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26589:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"26557:55:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6124,"nodeType":"ExpressionStatement","src":"26557:55:16"},{"expression":{"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6125,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26626:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26643:9:16","memberName":"lastBlock","nodeType":"MemberAccess","referencedDeclaration":6867,"src":"26626:26:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6130,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26662:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26668:6:16","memberName":"number","nodeType":"MemberAccess","src":"26662:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26655:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6128,"name":"uint64","nodeType":"ElementaryTypeName","src":"26655:6:16","typeDescriptions":{}}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26655:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"26626:49:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6134,"nodeType":"ExpressionStatement","src":"26626:49:16"},{"expression":{"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6135,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"26689:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"id":6137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26696:9:16","memberName":"vaultInfo","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"26689:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6138,"name":"_currentRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"26708:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"src":"26689:35:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":6140,"nodeType":"ExpressionStatement","src":"26689:35:16"}]}},{"expression":{"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6317,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"28560:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":6319,"indexExpression":{"id":6318,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"28567:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28560:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6320,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"28576:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_memory_ptr","typeString":"struct Structs.TokenVault memory"}},"src":"28560:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":6322,"nodeType":"ExpressionStatement","src":"28560:22:16"}]},"id":6324,"implemented":true,"kind":"function","modifiers":[],"name":"_accuredInterest","nameLocation":"25709:16:16","nodeType":"FunctionDefinition","parameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"token","nameLocation":"25743:5:16","nodeType":"VariableDeclaration","scope":6324,"src":"25735:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6046,"name":"address","nodeType":"ElementaryTypeName","src":"25735:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25725:29:16"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"_interestEarned","nameLocation":"25810:15:16","nodeType":"VariableDeclaration","scope":6324,"src":"25802:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"25802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6052,"mutability":"mutable","name":"_feesAmount","nameLocation":"25847:11:16","nodeType":"VariableDeclaration","scope":6324,"src":"25839:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6051,"name":"uint256","nodeType":"ElementaryTypeName","src":"25839:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6054,"mutability":"mutable","name":"_feesShare","nameLocation":"25880:10:16","nodeType":"VariableDeclaration","scope":6324,"src":"25872:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6053,"name":"uint256","nodeType":"ElementaryTypeName","src":"25872:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6056,"mutability":"mutable","name":"newRate","nameLocation":"25911:7:16","nodeType":"VariableDeclaration","scope":6324,"src":"25904:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6055,"name":"uint64","nodeType":"ElementaryTypeName","src":"25904:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25788:140:16"},"scope":6456,"src":"25700:2889:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6454,"nodeType":"Block","src":"28794:1140:16","statements":[{"condition":{"id":6339,"name":"addToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"28808:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6351,"nodeType":"Block","src":"28895:95:16","statements":[{"expression":{"arguments":[{"id":6348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"28973:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6347,"name":"WhenPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"28962:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28962:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6350,"nodeType":"ExpressionStatement","src":"28962:17:16"}]},"id":6352,"nodeType":"IfStatement","src":"28804:186:16","trueBody":{"id":6346,"nodeType":"Block","src":"28818:71:16","statements":[{"expression":{"arguments":[{"id":6341,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"28850:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6342,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"28857:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6343,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"28868:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}],"id":6340,"name":"addSupportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"28832:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_enum$_TokenType_$6827_$returns$__$","typeString":"function (address,address,enum Structs.TokenType)"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28832:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6345,"nodeType":"ExpressionStatement","src":"28832:46:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"29003:9:16","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":6354,"name":"Structs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"29016:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structs_$6897_$","typeString":"type(contract Structs)"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29024:9:16","memberName":"TokenType","nodeType":"MemberAccess","referencedDeclaration":6827,"src":"29016:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$6827_$","typeString":"type(enum Structs.TokenType)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29034:5:16","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":6825,"src":"29016:23:16","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"src":"29003:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6453,"nodeType":"IfStatement","src":"28999:929:16","trueBody":{"id":6452,"nodeType":"Block","src":"29041:887:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6358,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29059:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29066:12:16","memberName":"reserveRatio","nodeType":"MemberAccess","referencedDeclaration":6883,"src":"29059:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6360,"name":"BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"29081:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29059:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6367,"nodeType":"IfStatement","src":"29055:94:16","trueBody":{"errorCall":{"arguments":[{"expression":{"id":6363,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29129:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29136:12:16","memberName":"reserveRatio","nodeType":"MemberAccess","referencedDeclaration":6883,"src":"29129:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6362,"name":"InvalidReserveRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"29109:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29109:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6366,"nodeType":"RevertStatement","src":"29102:47:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6368,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29167:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29174:17:16","memberName":"feeToProtocolRate","nodeType":"MemberAccess","referencedDeclaration":6885,"src":"29167:24:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6370,"name":"MAX_PROTOCOL_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"29194:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29167:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6377,"nodeType":"IfStatement","src":"29163:112:16","trueBody":{"errorCall":{"arguments":[{"expression":{"id":6373,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29250:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29257:17:16","memberName":"feeToProtocolRate","nodeType":"MemberAccess","referencedDeclaration":6885,"src":"29250:24:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6372,"name":"InvalidFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"29235:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29235:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"RevertStatement","src":"29228:47:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6378,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29292:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29299:12:16","memberName":"flashFeeRate","nodeType":"MemberAccess","referencedDeclaration":6887,"src":"29292:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6380,"name":"MAX_PROTOCOL_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"29314:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29292:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6387,"nodeType":"IfStatement","src":"29289:101:16","trueBody":{"errorCall":{"arguments":[{"expression":{"id":6383,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29370:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29377:12:16","memberName":"flashFeeRate","nodeType":"MemberAccess","referencedDeclaration":6887,"src":"29370:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6382,"name":"InvalidFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"29355:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29355:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6386,"nodeType":"RevertStatement","src":"29348:42:16"}},{"assignments":[6392],"declarations":[{"constant":false,"id":6392,"mutability":"mutable","name":"_vaultInfo","nameLocation":"29430:10:16","nodeType":"VariableDeclaration","scope":6452,"src":"29404:36:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo"},"typeName":{"id":6391,"nodeType":"UserDefinedTypeName","pathNode":{"id":6390,"name":"Structs.VaultInfo","nameLocations":["29404:7:16","29412:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":6876,"src":"29404:17:16"},"referencedDeclaration":6876,"src":"29404:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo"}},"visibility":"internal"}],"id":6397,"initialValue":{"expression":{"baseExpression":{"id":6393,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"29443:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenVault_$6855_storage_$","typeString":"mapping(address => struct Structs.TokenVault storage ref)"}},"id":6395,"indexExpression":{"id":6394,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"29450:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29443:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_TokenVault_$6855_storage","typeString":"struct Structs.TokenVault storage ref"}},"id":6396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29457:9:16","memberName":"vaultInfo","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"29443:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage","typeString":"struct Structs.VaultInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"29404:62:16"},{"expression":{"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6398,"name":"_vaultInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"29480:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo storage pointer"}},"id":6400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29491:12:16","memberName":"reserveRatio","nodeType":"MemberAccess","referencedDeclaration":6857,"src":"29480:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6401,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29506:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29513:12:16","memberName":"reserveRatio","nodeType":"MemberAccess","referencedDeclaration":6883,"src":"29506:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"29480:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6404,"nodeType":"ExpressionStatement","src":"29480:45:16"},{"expression":{"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6405,"name":"_vaultInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"29539:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo storage pointer"}},"id":6407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29550:17:16","memberName":"feeToProtocolRate","nodeType":"MemberAccess","referencedDeclaration":6859,"src":"29539:28:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6408,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29570:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29577:17:16","memberName":"feeToProtocolRate","nodeType":"MemberAccess","referencedDeclaration":6885,"src":"29570:24:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"29539:55:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6411,"nodeType":"ExpressionStatement","src":"29539:55:16"},{"expression":{"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6412,"name":"_vaultInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"29608:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo storage pointer"}},"id":6414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29619:12:16","memberName":"flashFeeRate","nodeType":"MemberAccess","referencedDeclaration":6861,"src":"29608:23:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6415,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29634:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29641:12:16","memberName":"flashFeeRate","nodeType":"MemberAccess","referencedDeclaration":6887,"src":"29634:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"29608:45:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6418,"nodeType":"ExpressionStatement","src":"29608:45:16"},{"expression":{"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6419,"name":"_vaultInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"29667:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo storage pointer"}},"id":6421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29678:8:16","memberName":"baseRate","nodeType":"MemberAccess","referencedDeclaration":6869,"src":"29667:19:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6422,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29689:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29696:8:16","memberName":"baseRate","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"29689:15:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"29667:37:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6425,"nodeType":"ExpressionStatement","src":"29667:37:16"},{"expression":{"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6426,"name":"_vaultInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"29718:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo storage pointer"}},"id":6428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29729:6:16","memberName":"slope1","nodeType":"MemberAccess","referencedDeclaration":6871,"src":"29718:17:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6429,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29738:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29745:6:16","memberName":"slope1","nodeType":"MemberAccess","referencedDeclaration":6891,"src":"29738:13:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"29718:33:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6432,"nodeType":"ExpressionStatement","src":"29718:33:16"},{"expression":{"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6433,"name":"_vaultInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"29765:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo storage pointer"}},"id":6435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29776:6:16","memberName":"slope2","nodeType":"MemberAccess","referencedDeclaration":6873,"src":"29765:17:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6436,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29785:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29792:6:16","memberName":"slope2","nodeType":"MemberAccess","referencedDeclaration":6893,"src":"29785:13:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"29765:33:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6439,"nodeType":"ExpressionStatement","src":"29765:33:16"},{"expression":{"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6440,"name":"_vaultInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"29812:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo storage pointer"}},"id":6442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29823:18:16","memberName":"optimalUtilization","nodeType":"MemberAccess","referencedDeclaration":6875,"src":"29812:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6443,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29844:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}},"id":6444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29851:18:16","memberName":"optimalUtilization","nodeType":"MemberAccess","referencedDeclaration":6895,"src":"29844:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29812:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6446,"nodeType":"ExpressionStatement","src":"29812:57:16"},{"eventCall":{"arguments":[{"id":6448,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"29903:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6449,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"29910:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters memory"}],"id":6447,"name":"NewVaultSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"29889:13:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_VaultSetupParamemters_$6896_memory_ptr_$returns$__$","typeString":"function (address,struct Structs.VaultSetupParamemters memory)"}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29889:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6451,"nodeType":"EmitStatement","src":"29884:33:16"}]}}]},"id":6455,"implemented":true,"kind":"function","modifiers":[],"name":"_setupVault","nameLocation":"28604:11:16","nodeType":"FunctionDefinition","parameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"token","nameLocation":"28633:5:16","nodeType":"VariableDeclaration","scope":6455,"src":"28625:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6325,"name":"address","nodeType":"ElementaryTypeName","src":"28625:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6328,"mutability":"mutable","name":"priceFeed","nameLocation":"28656:9:16","nodeType":"VariableDeclaration","scope":6455,"src":"28648:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6327,"name":"address","nodeType":"ElementaryTypeName","src":"28648:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6331,"mutability":"mutable","name":"tokenType","nameLocation":"28693:9:16","nodeType":"VariableDeclaration","scope":6455,"src":"28675:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"typeName":{"id":6330,"nodeType":"UserDefinedTypeName","pathNode":{"id":6329,"name":"Structs.TokenType","nameLocations":["28675:7:16","28683:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":6827,"src":"28675:17:16"},"referencedDeclaration":6827,"src":"28675:17:16","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"visibility":"internal"},{"constant":false,"id":6334,"mutability":"mutable","name":"params","nameLocation":"28749:6:16","nodeType":"VariableDeclaration","scope":6455,"src":"28712:43:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_memory_ptr","typeString":"struct Structs.VaultSetupParamemters"},"typeName":{"id":6333,"nodeType":"UserDefinedTypeName","pathNode":{"id":6332,"name":"Structs.VaultSetupParamemters","nameLocations":["28712:7:16","28720:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":6896,"src":"28712:29:16"},"referencedDeclaration":6896,"src":"28712:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSetupParamemters_$6896_storage_ptr","typeString":"struct Structs.VaultSetupParamemters"}},"visibility":"internal"},{"constant":false,"id":6336,"mutability":"mutable","name":"addToken","nameLocation":"28770:8:16","nodeType":"VariableDeclaration","scope":6455,"src":"28765:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6335,"name":"bool","nodeType":"ElementaryTypeName","src":"28765:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28615:169:16"},"returnParameters":{"id":6338,"nodeType":"ParameterList","parameters":[],"src":"28794:0:16"},"scope":6456,"src":"28595:1339:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6457,"src":"552:29389:16","usedErrors":[3722,3724,3726,3728,3730,3738,3742,3746,3750,3752,3754,3756,3758,3760,3762,3764,6474,6662,6664,6669,6903,6982,7319,7321],"usedEvents":[59,3774,3784,3794,3804,3816,3822,3832,3847,3855,3865,3875,3883,3897,3904,6676,7325,7331]}],"src":"33:29911:16"},"id":16},"contracts/NFTPledging.sol":{"ast":{"absolutePath":"contracts/NFTPledging.sol","exportedSymbols":{"EnumerableSet":[3664],"IERC165":[1892],"IERC721":[1525],"IERC721Receiver":[1543],"NFTPledging":[6637],"Structs":[6897],"TokenSupporter":[6800]},"id":6638,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6458,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"contracts/TokenSupporter.sol","file":"./TokenSupporter.sol","id":6460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6638,"sourceUnit":6801,"src":"58:52:17","symbolAliases":[{"foreign":{"id":6459,"name":"TokenSupporter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"66:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":6461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6638,"sourceUnit":1526,"src":"111:58:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":6462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6638,"sourceUnit":1544,"src":"170:66:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":6463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6638,"sourceUnit":3665,"src":"237:65:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/Structs.sol","file":"./interfaces/Structs.sol","id":6464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6638,"sourceUnit":6898,"src":"303:34:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6465,"name":"TokenSupporter","nameLocations":["363:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":6800,"src":"363:14:17"},"id":6466,"nodeType":"InheritanceSpecifier","src":"363:14:17"},{"baseName":{"id":6467,"name":"IERC721Receiver","nameLocations":["379:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":1543,"src":"379:15:17"},"id":6468,"nodeType":"InheritanceSpecifier","src":"379:15:17"}],"canonicalName":"NFTPledging","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6637,"linearizedBaseContracts":[6637,1543,6800,7305],"name":"NFTPledging","nameLocation":"348:11:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6472,"libraryName":{"id":6469,"name":"EnumerableSet","nameLocations":["407:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3664,"src":"407:13:17"},"nodeType":"UsingForDirective","src":"401:46:17","typeName":{"id":6471,"nodeType":"UserDefinedTypeName","pathNode":{"id":6470,"name":"EnumerableSet.UintSet","nameLocations":["425:13:17","439:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"425:21:17"},"referencedDeclaration":3534,"src":"425:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}},{"errorSelector":"0f3e2a3e","id":6474,"name":"InvalidNFT","nameLocation":"459:10:17","nodeType":"ErrorDefinition","parameters":{"id":6473,"nodeType":"ParameterList","parameters":[],"src":"469:2:17"},"src":"453:19:17"},{"constant":false,"id":6481,"mutability":"mutable","name":"depositedNFTs","nameLocation":"558:13:17","nodeType":"VariableDeclaration","scope":6637,"src":"478:93:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$_$","typeString":"mapping(address => mapping(address => struct EnumerableSet.UintSet))"},"typeName":{"id":6480,"keyName":"user","keyNameLocation":"494:4:17","keyType":{"id":6475,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"478:79:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$_$","typeString":"mapping(address => mapping(address => struct EnumerableSet.UintSet))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6479,"keyName":"nft","keyNameLocation":"518:3:17","keyType":{"id":6476,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"502:54:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$","typeString":"mapping(address => struct EnumerableSet.UintSet)"},"valueName":"tokenIds","valueNameLocation":"547:8:17","valueType":{"id":6478,"nodeType":"UserDefinedTypeName","pathNode":{"id":6477,"name":"EnumerableSet.UintSet","nameLocations":["525:13:17","539:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"525:21:17"},"referencedDeclaration":3534,"src":"525:21:17","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}}},"visibility":"internal"},{"body":{"id":6515,"nodeType":"Block","src":"645:229:17","statements":[{"expression":{"arguments":[{"id":6489,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"668:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6488,"name":"allowedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"655:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"655:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6491,"nodeType":"ExpressionStatement","src":"655:24:17"},{"expression":{"arguments":[{"expression":{"id":6496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"739:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"743:6:17","memberName":"sender","nodeType":"MemberAccess","src":"739:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6500,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"771:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_NFTPledging_$6637","typeString":"contract NFTPledging"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTPledging_$6637","typeString":"contract NFTPledging"}],"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"763:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6498,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:17","typeDescriptions":{}}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"763:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6502,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"790:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6493,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"697:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6492,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"689:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1525_$","typeString":"type(contract IERC721)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"689:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1525","typeString":"contract IERC721"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"709:16:17","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"689:36:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"689:118:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6504,"nodeType":"ExpressionStatement","src":"689:118:17"},{"expression":{"arguments":[{"id":6512,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":6505,"name":"depositedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"817:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$_$","typeString":"mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"}},"id":6509,"indexExpression":{"expression":{"id":6506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"831:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"835:6:17","memberName":"sender","nodeType":"MemberAccess","src":"831:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"817:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$","typeString":"mapping(address => struct EnumerableSet.UintSet storage ref)"}},"id":6510,"indexExpression":{"id":6508,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"843:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"817:37:17","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":6511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"855:3:17","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3555,"src":"817:41:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$3534_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$3534_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6514,"nodeType":"ExpressionStatement","src":"817:50:17"}]},"id":6516,"implemented":true,"kind":"function","modifiers":[],"name":"_depositNFT","nameLocation":"587:11:17","nodeType":"FunctionDefinition","parameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6483,"mutability":"mutable","name":"nftAddress","nameLocation":"607:10:17","nodeType":"VariableDeclaration","scope":6516,"src":"599:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6482,"name":"address","nodeType":"ElementaryTypeName","src":"599:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6485,"mutability":"mutable","name":"tokenId","nameLocation":"627:7:17","nodeType":"VariableDeclaration","scope":6516,"src":"619:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6484,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"598:37:17"},"returnParameters":{"id":6487,"nodeType":"ParameterList","parameters":[],"src":"645:0:17"},"scope":6637,"src":"578:296:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6558,"nodeType":"Block","src":"1020:247:17","statements":[{"condition":{"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1034:44:17","subExpression":{"arguments":[{"id":6528,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"1051:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6529,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"1058:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6530,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"1070:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6527,"name":"hasDepositedNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"1035:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1035:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6536,"nodeType":"IfStatement","src":"1030:69:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6533,"name":"InvalidNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"1087:10:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1087:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6535,"nodeType":"RevertStatement","src":"1080:19:17"}},{"expression":{"arguments":[{"id":6543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"1149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":6537,"name":"depositedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"1109:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$_$","typeString":"mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"}},"id":6540,"indexExpression":{"id":6538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"1123:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1109:20:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$","typeString":"mapping(address => struct EnumerableSet.UintSet storage ref)"}},"id":6541,"indexExpression":{"id":6539,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"1130:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1109:32:17","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":6542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1142:6:17","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3576,"src":"1109:39:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$3534_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$3534_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6545,"nodeType":"ExpressionStatement","src":"1109:48:17"},{"expression":{"arguments":[{"arguments":[{"id":6552,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1225:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_NFTPledging_$6637","typeString":"contract NFTPledging"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTPledging_$6637","typeString":"contract NFTPledging"}],"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1217:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6550,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:17","typeDescriptions":{}}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1217:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6554,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"1232:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"1243:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6547,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"1175:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6546,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"1167:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1525_$","typeString":"type(contract IERC721)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1525","typeString":"contract IERC721"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1187:16:17","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"1167:36:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:93:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6557,"nodeType":"ExpressionStatement","src":"1167:93:17"}]},"id":6559,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawNft","nameLocation":"889:12:17","nodeType":"FunctionDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"owner","nameLocation":"919:5:17","nodeType":"VariableDeclaration","scope":6559,"src":"911:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6517,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6520,"mutability":"mutable","name":"recipient","nameLocation":"942:9:17","nodeType":"VariableDeclaration","scope":6559,"src":"934:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6519,"name":"address","nodeType":"ElementaryTypeName","src":"934:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6522,"mutability":"mutable","name":"nftAddress","nameLocation":"969:10:17","nodeType":"VariableDeclaration","scope":6559,"src":"961:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6521,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"tokenId","nameLocation":"997:7:17","nodeType":"VariableDeclaration","scope":6559,"src":"989:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:109:17"},"returnParameters":{"id":6526,"nodeType":"ParameterList","parameters":[],"src":"1020:0:17"},"scope":6637,"src":"880:387:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6579,"nodeType":"Block","src":"1407:74:17","statements":[{"expression":{"arguments":[{"id":6576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"1466:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":6570,"name":"depositedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"1424:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$_$","typeString":"mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"}},"id":6572,"indexExpression":{"id":6571,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"1438:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1424:20:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$","typeString":"mapping(address => struct EnumerableSet.UintSet storage ref)"}},"id":6574,"indexExpression":{"id":6573,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"1445:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1424:32:17","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":6575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1457:8:17","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3597,"src":"1424:41:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$3534_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$3534_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (bool)"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1424:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6569,"id":6578,"nodeType":"Return","src":"1417:57:17"}]},"functionSelector":"f6aa13f2","id":6580,"implemented":true,"kind":"function","modifiers":[],"name":"hasDepositedNFT","nameLocation":"1282:15:17","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6561,"mutability":"mutable","name":"owner","nameLocation":"1315:5:17","nodeType":"VariableDeclaration","scope":6580,"src":"1307:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6560,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6563,"mutability":"mutable","name":"nftAddress","nameLocation":"1338:10:17","nodeType":"VariableDeclaration","scope":6580,"src":"1330:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6562,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6565,"mutability":"mutable","name":"tokenId","nameLocation":"1366:7:17","nodeType":"VariableDeclaration","scope":6580,"src":"1358:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1358:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1297:82:17"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6580,"src":"1401:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6567,"name":"bool","nodeType":"ElementaryTypeName","src":"1401:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1400:6:17"},"scope":6637,"src":"1273:208:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6598,"nodeType":"Block","src":"1608:65:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"baseExpression":{"id":6590,"name":"depositedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"1625:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$_$","typeString":"mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"}},"id":6592,"indexExpression":{"id":6591,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"1639:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1625:20:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$","typeString":"mapping(address => struct EnumerableSet.UintSet storage ref)"}},"id":6594,"indexExpression":{"id":6593,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"1646:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1625:32:17","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":6595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1658:6:17","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":3663,"src":"1625:39:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$3534_storage_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$attached_to$_t_struct$_UintSet_$3534_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer) view returns (uint256[] memory)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1625:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":6589,"id":6597,"nodeType":"Return","src":"1618:48:17"}]},"functionSelector":"351b14a0","id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"getDepositedNFT","nameLocation":"1496:15:17","nodeType":"FunctionDefinition","parameters":{"id":6585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"owner","nameLocation":"1529:5:17","nodeType":"VariableDeclaration","scope":6599,"src":"1521:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6581,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6584,"mutability":"mutable","name":"nftAddress","nameLocation":"1552:10:17","nodeType":"VariableDeclaration","scope":6599,"src":"1544:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6583,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1511:57:17"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6599,"src":"1590:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6587,"nodeType":"ArrayTypeName","src":"1590:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1589:18:17"},"scope":6637,"src":"1487:186:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6616,"nodeType":"Block","src":"1782:69:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"baseExpression":{"id":6608,"name":"depositedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"1803:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$_$","typeString":"mapping(address => mapping(address => struct EnumerableSet.UintSet storage ref))"}},"id":6610,"indexExpression":{"id":6609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"1817:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1803:20:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$3534_storage_$","typeString":"mapping(address => struct EnumerableSet.UintSet storage ref)"}},"id":6612,"indexExpression":{"id":6611,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"1824:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1803:32:17","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3534_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":6613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1836:6:17","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"1803:39:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$3534_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$3534_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6607,"id":6615,"nodeType":"Return","src":"1796:48:17"}]},"functionSelector":"b4240c99","id":6617,"implemented":true,"kind":"function","modifiers":[],"name":"getDepositedNFTCount","nameLocation":"1688:20:17","nodeType":"FunctionDefinition","parameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"owner","nameLocation":"1717:5:17","nodeType":"VariableDeclaration","scope":6617,"src":"1709:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6600,"name":"address","nodeType":"ElementaryTypeName","src":"1709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6603,"mutability":"mutable","name":"nftAddress","nameLocation":"1732:10:17","nodeType":"VariableDeclaration","scope":6617,"src":"1724:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6602,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1708:35:17"},"returnParameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6617,"src":"1773:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1773:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1772:9:17"},"scope":6637,"src":"1679:172:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1542],"body":{"id":6635,"nodeType":"Block","src":"2004:65:17","statements":[{"expression":{"expression":{"expression":{"id":6631,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2021:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1543_$","typeString":"type(contract IERC721Receiver)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2037:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1542,"src":"2021:32:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2054:8:17","memberName":"selector","nodeType":"MemberAccess","src":"2021:41:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":6630,"id":6634,"nodeType":"Return","src":"2014:48:17"}]},"functionSelector":"150b7a02","id":6636,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"1866:16:17","nodeType":"FunctionDefinition","overrides":{"id":6627,"nodeType":"OverrideSpecifier","overrides":[],"src":"1978:8:17"},"parameters":{"id":6626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6636,"src":"1892:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6618,"name":"address","nodeType":"ElementaryTypeName","src":"1892:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6636,"src":"1909:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6620,"name":"address","nodeType":"ElementaryTypeName","src":"1909:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6636,"src":"1926:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6636,"src":"1943:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6624,"name":"bytes","nodeType":"ElementaryTypeName","src":"1943:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1882:81:17"},"returnParameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6636,"src":"1996:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6628,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1996:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1995:8:17"},"scope":6637,"src":"1857:212:17","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":6638,"src":"339:1732:17","usedErrors":[6474,6662,6664,6669,6903],"usedEvents":[6676]}],"src":"32:2039:17"},"id":17},"contracts/TokenSupporter.sol":{"ast":{"absolutePath":"contracts/TokenSupporter.sol","exportedSymbols":{"AggregatorV3Interface":[45],"ChainlinkOracle":[6975],"Constants":[7305],"Structs":[6897],"TokenSupporter":[6800]},"id":6801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6639,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":6640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6801,"sourceUnit":46,"src":"58:76:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/ChainlinkOracle.sol","file":"./libraries/ChainlinkOracle.sol","id":6641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6801,"sourceUnit":6976,"src":"135:41:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/Structs.sol","file":"./interfaces/Structs.sol","id":6642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6801,"sourceUnit":6898,"src":"177:34:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Constants.sol","file":"./utils/Constants.sol","id":6643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6801,"sourceUnit":7306,"src":"212:31:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6644,"name":"Constants","nameLocations":["272:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":7305,"src":"272:9:18"},"id":6645,"nodeType":"InheritanceSpecifier","src":"272:9:18"}],"canonicalName":"TokenSupporter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6800,"linearizedBaseContracts":[6800,7305],"name":"TokenSupporter","nameLocation":"254:14:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6649,"libraryName":{"id":6646,"name":"ChainlinkOracle","nameLocations":["294:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":6975,"src":"294:15:18"},"nodeType":"UsingForDirective","src":"288:48:18","typeName":{"id":6648,"nodeType":"UserDefinedTypeName","pathNode":{"id":6647,"name":"AggregatorV3Interface","nameLocations":["314:21:18"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"314:21:18"},"referencedDeclaration":45,"src":"314:21:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}}},{"constant":false,"id":6652,"mutability":"mutable","name":"supportedERC20s","nameLocation":"361:15:18","nodeType":"VariableDeclaration","scope":6800,"src":"342:34:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6650,"name":"address","nodeType":"ElementaryTypeName","src":"342:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6651,"nodeType":"ArrayTypeName","src":"342:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6655,"mutability":"mutable","name":"supportedNFTs","nameLocation":"401:13:18","nodeType":"VariableDeclaration","scope":6800,"src":"382:32:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6653,"name":"address","nodeType":"ElementaryTypeName","src":"382:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6654,"nodeType":"ArrayTypeName","src":"382:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6660,"mutability":"mutable","name":"supportedToken","nameLocation":"473:14:18","nodeType":"VariableDeclaration","scope":6800,"src":"421:66:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken)"},"typeName":{"id":6659,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6656,"name":"address","nodeType":"ElementaryTypeName","src":"429:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"421:42:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6658,"nodeType":"UserDefinedTypeName","pathNode":{"id":6657,"name":"Structs.SupportedToken","nameLocations":["440:7:18","448:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":6835,"src":"440:22:18"},"referencedDeclaration":6835,"src":"440:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage_ptr","typeString":"struct Structs.SupportedToken"}}},"visibility":"internal"},{"errorSelector":"3dd1b305","id":6662,"name":"TokenNotSupported","nameLocation":"500:17:18","nodeType":"ErrorDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[],"src":"517:2:18"},"src":"494:26:18"},{"errorSelector":"3706ba49","id":6664,"name":"AlreadySupported","nameLocation":"531:16:18","nodeType":"ErrorDefinition","parameters":{"id":6663,"nodeType":"ParameterList","parameters":[],"src":"547:2:18"},"src":"525:25:18"},{"errorSelector":"4e00ade0","id":6669,"name":"InvalidTokenType","nameLocation":"561:16:18","nodeType":"ErrorDefinition","parameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6667,"mutability":"mutable","name":"tokenType","nameLocation":"596:9:18","nodeType":"VariableDeclaration","scope":6669,"src":"578:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"typeName":{"id":6666,"nodeType":"UserDefinedTypeName","pathNode":{"id":6665,"name":"Structs.TokenType","nameLocations":["578:7:18","586:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":6827,"src":"578:17:18"},"referencedDeclaration":6827,"src":"578:17:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"visibility":"internal"}],"src":"577:29:18"},"src":"555:52:18"},{"anonymous":false,"eventSelector":"20ba3738d0f69ad18e0a9923005003b1434ffc62c40ad3332d30d2d42c49ef42","id":6676,"name":"AddSupportedToken","nameLocation":"619:17:18","nodeType":"EventDefinition","parameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6671,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"645:5:18","nodeType":"VariableDeclaration","scope":6676,"src":"637:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6670,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6674,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"670:9:18","nodeType":"VariableDeclaration","scope":6676,"src":"652:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"typeName":{"id":6673,"nodeType":"UserDefinedTypeName","pathNode":{"id":6672,"name":"Structs.TokenType","nameLocations":["652:7:18","660:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":6827,"src":"652:17:18"},"referencedDeclaration":6827,"src":"652:17:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"visibility":"internal"}],"src":"636:44:18"},"src":"613:68:18"},{"body":{"id":6751,"nodeType":"Block","src":"816:518:18","statements":[{"condition":{"expression":{"baseExpression":{"id":6686,"name":"supportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"830:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken storage ref)"}},"id":6688,"indexExpression":{"id":6687,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"845:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"830:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage","typeString":"struct Structs.SupportedToken storage ref"}},"id":6689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"852:9:18","memberName":"supported","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"830:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6693,"nodeType":"IfStatement","src":"826:62:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6690,"name":"AlreadySupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"870:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"870:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6692,"nodeType":"RevertStatement","src":"863:25:18"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6696,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"907:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}],"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"902:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6694,"name":"uint","nodeType":"ElementaryTypeName","src":"902:4:18","typeDescriptions":{}}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"920:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"902:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"898:59:18","trueBody":{"errorCall":{"arguments":[{"id":6701,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"947:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}],"id":6700,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"930:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_enum$_TokenType_$6827_$returns$__$","typeString":"function (enum Structs.TokenType) pure"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6703,"nodeType":"RevertStatement","src":"923:34:18"}},{"expression":{"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6705,"name":"supportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"968:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken storage ref)"}},"id":6707,"indexExpression":{"id":6706,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"983:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"968:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage","typeString":"struct Structs.SupportedToken storage ref"}},"id":6708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"990:12:18","memberName":"usdPriceFeed","nodeType":"MemberAccess","referencedDeclaration":6829,"src":"968:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6709,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"1005:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"968:46:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6711,"nodeType":"ExpressionStatement","src":"968:46:18"},{"expression":{"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6712,"name":"supportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"1024:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken storage ref)"}},"id":6714,"indexExpression":{"id":6713,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1039:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1024:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage","typeString":"struct Structs.SupportedToken storage ref"}},"id":6715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1046:9:18","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":6832,"src":"1024:31:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6716,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"1058:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"src":"1024:43:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"id":6718,"nodeType":"ExpressionStatement","src":"1024:43:18"},{"expression":{"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6719,"name":"supportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"1077:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken storage ref)"}},"id":6721,"indexExpression":{"id":6720,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1092:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1077:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage","typeString":"struct Structs.SupportedToken storage ref"}},"id":6722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1099:9:18","memberName":"supported","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"1077:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1111:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1077:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6725,"nodeType":"ExpressionStatement","src":"1077:38:18"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6726,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"1130:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":6727,"name":"Structs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"1143:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Structs_$6897_$","typeString":"type(contract Structs)"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1151:9:18","memberName":"TokenType","nodeType":"MemberAccess","referencedDeclaration":6827,"src":"1143:17:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$6827_$","typeString":"type(enum Structs.TokenType)"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1161:6:18","memberName":"ERC721","nodeType":"MemberAccess","referencedDeclaration":6826,"src":"1143:24:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"src":"1130:37:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6744,"nodeType":"Block","src":"1225:52:18","statements":[{"expression":{"arguments":[{"id":6741,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1260:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6738,"name":"supportedERC20s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"1239:15:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1255:4:18","memberName":"push","nodeType":"MemberAccess","src":"1239:20:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6743,"nodeType":"ExpressionStatement","src":"1239:27:18"}]},"id":6745,"nodeType":"IfStatement","src":"1126:151:18","trueBody":{"id":6737,"nodeType":"Block","src":"1169:50:18","statements":[{"expression":{"arguments":[{"id":6734,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1202:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6731,"name":"supportedNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"1183:13:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1197:4:18","memberName":"push","nodeType":"MemberAccess","src":"1183:18:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6736,"nodeType":"ExpressionStatement","src":"1183:25:18"}]}},{"eventCall":{"arguments":[{"id":6747,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1310:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6748,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"1317:9:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}],"id":6746,"name":"AddSupportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"1292:17:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_TokenType_$6827_$returns$__$","typeString":"function (address,enum Structs.TokenType)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1292:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"EmitStatement","src":"1287:40:18"}]},"id":6752,"implemented":true,"kind":"function","modifiers":[],"name":"addSupportedToken","nameLocation":"696:17:18","nodeType":"FunctionDefinition","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"token","nameLocation":"731:5:18","nodeType":"VariableDeclaration","scope":6752,"src":"723:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6677,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6680,"mutability":"mutable","name":"priceFeed","nameLocation":"754:9:18","nodeType":"VariableDeclaration","scope":6752,"src":"746:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6679,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6683,"mutability":"mutable","name":"tokenType","nameLocation":"791:9:18","nodeType":"VariableDeclaration","scope":6752,"src":"773:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"typeName":{"id":6682,"nodeType":"UserDefinedTypeName","pathNode":{"id":6681,"name":"Structs.TokenType","nameLocations":["773:7:18","781:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":6827,"src":"773:17:18"},"referencedDeclaration":6827,"src":"773:17:18","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"visibility":"internal"}],"src":"713:93:18"},"returnParameters":{"id":6685,"nodeType":"ParameterList","parameters":[],"src":"816:0:18"},"scope":6800,"src":"687:647:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6783,"nodeType":"Block","src":"1414:224:18","statements":[{"condition":{"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1428:32:18","subExpression":{"expression":{"baseExpression":{"id":6759,"name":"supportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"1429:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken storage ref)"}},"id":6761,"indexExpression":{"id":6760,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"1444:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1429:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage","typeString":"struct Structs.SupportedToken storage ref"}},"id":6762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1451:9:18","memberName":"supported","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"1429:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6766,"nodeType":"IfStatement","src":"1424:46:18","trueBody":{"expression":{"hexValue":"30","id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1469:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6758,"id":6765,"nodeType":"Return","src":"1462:8:18"}},{"assignments":[6769],"declarations":[{"constant":false,"id":6769,"mutability":"mutable","name":"priceFeed","nameLocation":"1502:9:18","nodeType":"VariableDeclaration","scope":6783,"src":"1480:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":6768,"nodeType":"UserDefinedTypeName","pathNode":{"id":6767,"name":"AggregatorV3Interface","nameLocations":["1480:21:18"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1480:21:18"},"referencedDeclaration":45,"src":"1480:21:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":6776,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":6771,"name":"supportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"1549:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken storage ref)"}},"id":6773,"indexExpression":{"id":6772,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"1564:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1549:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage","typeString":"struct Structs.SupportedToken storage ref"}},"id":6774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1571:12:18","memberName":"usdPriceFeed","nodeType":"MemberAccess","referencedDeclaration":6829,"src":"1549:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6770,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"1514:21:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1514:79:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1480:113:18"},{"expression":{"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6777,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"1603:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6778,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"1611:9:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1621:8:18","memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":6963,"src":"1611:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_AggregatorV3Interface_$45_$returns$_t_uint256_$attached_to$_t_contract$_AggregatorV3Interface_$45_$","typeString":"function (contract AggregatorV3Interface) view returns (uint256)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1611:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1603:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6782,"nodeType":"ExpressionStatement","src":"1603:28:18"}]},"functionSelector":"d02641a0","id":6784,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenPrice","nameLocation":"1349:13:18","nodeType":"FunctionDefinition","parameters":{"id":6755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"token","nameLocation":"1371:5:18","nodeType":"VariableDeclaration","scope":6784,"src":"1363:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6753,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1362:15:18"},"returnParameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"price","nameLocation":"1407:5:18","nodeType":"VariableDeclaration","scope":6784,"src":"1399:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1398:15:18"},"scope":6800,"src":"1340:298:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6798,"nodeType":"Block","src":"1695:81:18","statements":[{"condition":{"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1709:32:18","subExpression":{"expression":{"baseExpression":{"id":6789,"name":"supportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"1710:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_SupportedToken_$6835_storage_$","typeString":"mapping(address => struct Structs.SupportedToken storage ref)"}},"id":6791,"indexExpression":{"id":6790,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"1725:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1710:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_SupportedToken_$6835_storage","typeString":"struct Structs.SupportedToken storage ref"}},"id":6792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1732:9:18","memberName":"supported","nodeType":"MemberAccess","referencedDeclaration":6834,"src":"1710:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6797,"nodeType":"IfStatement","src":"1705:64:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6794,"name":"TokenNotSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"1750:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6796,"nodeType":"RevertStatement","src":"1743:26:18"}}]},"id":6799,"implemented":true,"kind":"function","modifiers":[],"name":"allowedToken","nameLocation":"1653:12:18","nodeType":"FunctionDefinition","parameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"token","nameLocation":"1674:5:18","nodeType":"VariableDeclaration","scope":6799,"src":"1666:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6785,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1665:15:18"},"returnParameters":{"id":6788,"nodeType":"ParameterList","parameters":[],"src":"1695:0:18"},"scope":6800,"src":"1644:132:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6801,"src":"245:1533:18","usedErrors":[6662,6664,6669,6903],"usedEvents":[6676]}],"src":"32:1746:18"},"id":18},"contracts/interfaces/FlashLoanReceiverInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/FlashLoanReceiverInterface.sol","exportedSymbols":{"FlashLoanReceiverInterface":[6822]},"id":6823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6802,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"FlashLoanReceiverInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6822,"linearizedBaseContracts":[6822],"name":"FlashLoanReceiverInterface","nameLocation":"68:26:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"101:225:19","text":" @param initiator ng bat dau khoan vay\n @param token token vay\n @param amounts so tien vay\n @param fees phi vay\n @param data user-defined parameters\n @return bool success or not"},"functionSelector":"64573d02","id":6821,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"340:11:19","nodeType":"FunctionDefinition","parameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"initiator","nameLocation":"369:9:19","nodeType":"VariableDeclaration","scope":6821,"src":"361:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6804,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6808,"mutability":"mutable","name":"token","nameLocation":"407:5:19","nodeType":"VariableDeclaration","scope":6821,"src":"388:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6806,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6807,"nodeType":"ArrayTypeName","src":"388:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6811,"mutability":"mutable","name":"amounts","nameLocation":"441:7:19","nodeType":"VariableDeclaration","scope":6821,"src":"422:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6809,"name":"uint256","nodeType":"ElementaryTypeName","src":"422:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6810,"nodeType":"ArrayTypeName","src":"422:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6814,"mutability":"mutable","name":"fees","nameLocation":"477:4:19","nodeType":"VariableDeclaration","scope":6821,"src":"458:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6812,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6813,"nodeType":"ArrayTypeName","src":"458:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6816,"mutability":"mutable","name":"data","nameLocation":"506:4:19","nodeType":"VariableDeclaration","scope":6821,"src":"491:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6815,"name":"bytes","nodeType":"ElementaryTypeName","src":"491:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"351:165:19"},"returnParameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6821,"src":"535:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6818,"name":"bool","nodeType":"ElementaryTypeName","src":"535:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"534:6:19"},"scope":6822,"src":"331:210:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6823,"src":"58:485:19","usedErrors":[],"usedEvents":[]}],"src":"32:511:19"},"id":19},"contracts/interfaces/Structs.sol":{"ast":{"absolutePath":"contracts/interfaces/Structs.sol","exportedSymbols":{"Structs":[6897]},"id":6898,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6824,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Structs","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":6897,"linearizedBaseContracts":[6897],"name":"Structs","nameLocation":"68:7:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Structs.TokenType","id":6827,"members":[{"id":6825,"name":"ERC20","nameLocation":"107:5:20","nodeType":"EnumValue","src":"107:5:20"},{"id":6826,"name":"ERC721","nameLocation":"122:6:20","nodeType":"EnumValue","src":"122:6:20"}],"name":"TokenType","nameLocation":"87:9:20","nodeType":"EnumDefinition","src":"82:52:20"},{"canonicalName":"Structs.SupportedToken","id":6835,"members":[{"constant":false,"id":6829,"mutability":"mutable","name":"usdPriceFeed","nameLocation":"180:12:20","nodeType":"VariableDeclaration","scope":6835,"src":"172:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6828,"name":"address","nodeType":"ElementaryTypeName","src":"172:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6832,"mutability":"mutable","name":"tokenType","nameLocation":"212:9:20","nodeType":"VariableDeclaration","scope":6835,"src":"202:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"},"typeName":{"id":6831,"nodeType":"UserDefinedTypeName","pathNode":{"id":6830,"name":"TokenType","nameLocations":["202:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":6827,"src":"202:9:20"},"referencedDeclaration":6827,"src":"202:9:20","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$6827","typeString":"enum Structs.TokenType"}},"visibility":"internal"},{"constant":false,"id":6834,"mutability":"mutable","name":"supported","nameLocation":"236:9:20","nodeType":"VariableDeclaration","scope":6835,"src":"231:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6833,"name":"bool","nodeType":"ElementaryTypeName","src":"231:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SupportedToken","nameLocation":"147:14:20","nodeType":"StructDefinition","scope":6897,"src":"140:112:20","visibility":"public"},{"canonicalName":"Structs.AccountShares","id":6840,"members":[{"constant":false,"id":6837,"mutability":"mutable","name":"collateral","nameLocation":"297:10:20","nodeType":"VariableDeclaration","scope":6840,"src":"289:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6836,"name":"uint256","nodeType":"ElementaryTypeName","src":"289:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6839,"mutability":"mutable","name":"borrow","nameLocation":"325:6:20","nodeType":"VariableDeclaration","scope":6840,"src":"317:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6838,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AccountShares","nameLocation":"265:13:20","nodeType":"StructDefinition","scope":6897,"src":"258:80:20","visibility":"public"},{"canonicalName":"Structs.Vault","id":6845,"members":[{"constant":false,"id":6842,"mutability":"mutable","name":"amount","nameLocation":"375:6:20","nodeType":"VariableDeclaration","scope":6845,"src":"367:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6841,"name":"uint256","nodeType":"ElementaryTypeName","src":"367:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6844,"mutability":"mutable","name":"shares","nameLocation":"399:6:20","nodeType":"VariableDeclaration","scope":6845,"src":"391:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6843,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Vault","nameLocation":"351:5:20","nodeType":"StructDefinition","scope":6897,"src":"344:68:20","visibility":"public"},{"canonicalName":"Structs.TokenVault","id":6855,"members":[{"constant":false,"id":6848,"mutability":"mutable","name":"totalAsset","nameLocation":"452:10:20","nodeType":"VariableDeclaration","scope":6855,"src":"446:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage_ptr","typeString":"struct Structs.Vault"},"typeName":{"id":6847,"nodeType":"UserDefinedTypeName","pathNode":{"id":6846,"name":"Vault","nameLocations":["446:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":6845,"src":"446:5:20"},"referencedDeclaration":6845,"src":"446:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage_ptr","typeString":"struct Structs.Vault"}},"visibility":"internal"},{"constant":false,"id":6851,"mutability":"mutable","name":"totalBorrow","nameLocation":"478:11:20","nodeType":"VariableDeclaration","scope":6855,"src":"472:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage_ptr","typeString":"struct Structs.Vault"},"typeName":{"id":6850,"nodeType":"UserDefinedTypeName","pathNode":{"id":6849,"name":"Vault","nameLocations":["472:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":6845,"src":"472:5:20"},"referencedDeclaration":6845,"src":"472:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage_ptr","typeString":"struct Structs.Vault"}},"visibility":"internal"},{"constant":false,"id":6854,"mutability":"mutable","name":"vaultInfo","nameLocation":"509:9:20","nodeType":"VariableDeclaration","scope":6855,"src":"499:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo"},"typeName":{"id":6853,"nodeType":"UserDefinedTypeName","pathNode":{"id":6852,"name":"VaultInfo","nameLocations":["499:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":6876,"src":"499:9:20"},"referencedDeclaration":6876,"src":"499:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo"}},"visibility":"internal"}],"name":"TokenVault","nameLocation":"425:10:20","nodeType":"StructDefinition","scope":6897,"src":"418:107:20","visibility":"public"},{"canonicalName":"Structs.VaultInfo","id":6876,"members":[{"constant":false,"id":6857,"mutability":"mutable","name":"reserveRatio","nameLocation":"566:12:20","nodeType":"VariableDeclaration","scope":6876,"src":"558:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6856,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6859,"mutability":"mutable","name":"feeToProtocolRate","nameLocation":"595:17:20","nodeType":"VariableDeclaration","scope":6876,"src":"588:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6858,"name":"uint64","nodeType":"ElementaryTypeName","src":"588:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6861,"mutability":"mutable","name":"flashFeeRate","nameLocation":"629:12:20","nodeType":"VariableDeclaration","scope":6876,"src":"622:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6860,"name":"uint64","nodeType":"ElementaryTypeName","src":"622:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6863,"mutability":"mutable","name":"ratePerSec","nameLocation":"658:10:20","nodeType":"VariableDeclaration","scope":6876,"src":"651:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6862,"name":"uint64","nodeType":"ElementaryTypeName","src":"651:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6865,"mutability":"mutable","name":"lastTimestamp","nameLocation":"685:13:20","nodeType":"VariableDeclaration","scope":6876,"src":"678:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6864,"name":"uint64","nodeType":"ElementaryTypeName","src":"678:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6867,"mutability":"mutable","name":"lastBlock","nameLocation":"715:9:20","nodeType":"VariableDeclaration","scope":6876,"src":"708:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6866,"name":"uint64","nodeType":"ElementaryTypeName","src":"708:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6869,"mutability":"mutable","name":"baseRate","nameLocation":"741:8:20","nodeType":"VariableDeclaration","scope":6876,"src":"734:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6868,"name":"uint64","nodeType":"ElementaryTypeName","src":"734:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6871,"mutability":"mutable","name":"slope1","nameLocation":"766:6:20","nodeType":"VariableDeclaration","scope":6876,"src":"759:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6870,"name":"uint64","nodeType":"ElementaryTypeName","src":"759:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6873,"mutability":"mutable","name":"slope2","nameLocation":"789:6:20","nodeType":"VariableDeclaration","scope":6876,"src":"782:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6872,"name":"uint64","nodeType":"ElementaryTypeName","src":"782:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6875,"mutability":"mutable","name":"optimalUtilization","nameLocation":"813:18:20","nodeType":"VariableDeclaration","scope":6876,"src":"805:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6874,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VaultInfo","nameLocation":"538:9:20","nodeType":"StructDefinition","scope":6897,"src":"531:307:20","visibility":"public"},{"canonicalName":"Structs.LiquidatedWarning","id":6881,"members":[{"constant":false,"id":6878,"mutability":"mutable","name":"liquidator","nameLocation":"887:10:20","nodeType":"VariableDeclaration","scope":6881,"src":"879:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6877,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6880,"mutability":"mutable","name":"liquidationTimestamp","nameLocation":"914:20:20","nodeType":"VariableDeclaration","scope":6881,"src":"907:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6879,"name":"uint64","nodeType":"ElementaryTypeName","src":"907:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"LiquidatedWarning","nameLocation":"851:17:20","nodeType":"StructDefinition","scope":6897,"src":"844:97:20","visibility":"public"},{"canonicalName":"Structs.VaultSetupParamemters","id":6896,"members":[{"constant":false,"id":6883,"mutability":"mutable","name":"reserveRatio","nameLocation":"993:12:20","nodeType":"VariableDeclaration","scope":6896,"src":"986:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6882,"name":"uint64","nodeType":"ElementaryTypeName","src":"986:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6885,"mutability":"mutable","name":"feeToProtocolRate","nameLocation":"1022:17:20","nodeType":"VariableDeclaration","scope":6896,"src":"1015:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6884,"name":"uint64","nodeType":"ElementaryTypeName","src":"1015:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6887,"mutability":"mutable","name":"flashFeeRate","nameLocation":"1056:12:20","nodeType":"VariableDeclaration","scope":6896,"src":"1049:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6886,"name":"uint64","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6889,"mutability":"mutable","name":"baseRate","nameLocation":"1085:8:20","nodeType":"VariableDeclaration","scope":6896,"src":"1078:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6888,"name":"uint64","nodeType":"ElementaryTypeName","src":"1078:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6891,"mutability":"mutable","name":"slope1","nameLocation":"1110:6:20","nodeType":"VariableDeclaration","scope":6896,"src":"1103:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6890,"name":"uint64","nodeType":"ElementaryTypeName","src":"1103:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6893,"mutability":"mutable","name":"slope2","nameLocation":"1133:6:20","nodeType":"VariableDeclaration","scope":6896,"src":"1126:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6892,"name":"uint64","nodeType":"ElementaryTypeName","src":"1126:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6895,"mutability":"mutable","name":"optimalUtilization","nameLocation":"1157:18:20","nodeType":"VariableDeclaration","scope":6896,"src":"1149:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VaultSetupParamemters","nameLocation":"954:21:20","nodeType":"StructDefinition","scope":6897,"src":"947:235:20","visibility":"public"}],"scope":6898,"src":"58:1126:20","usedErrors":[],"usedEvents":[]}],"src":"32:1152:20"},"id":20},"contracts/libraries/ChainlinkOracle.sol":{"ast":{"absolutePath":"contracts/libraries/ChainlinkOracle.sol","exportedSymbols":{"AggregatorV3Interface":[45],"ChainlinkOracle":[6975]},"id":6976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6899,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:21"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":6901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6976,"sourceUnit":46,"src":"59:105:21","symbolAliases":[{"foreign":{"id":6900,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"67:21:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ChainlinkOracle","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6975,"linearizedBaseContracts":[6975],"name":"ChainlinkOracle","nameLocation":"174:15:21","nodeType":"ContractDefinition","nodes":[{"errorSelector":"00bfc921","id":6903,"name":"InvalidPrice","nameLocation":"202:12:21","nodeType":"ErrorDefinition","parameters":{"id":6902,"nodeType":"ParameterList","parameters":[],"src":"214:2:21"},"src":"196:21:21"},{"constant":true,"id":6906,"mutability":"constant","name":"TIME_OUT","nameLocation":"248:8:21","nodeType":"VariableDeclaration","scope":6975,"src":"223:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6904,"name":"uint256","nodeType":"ElementaryTypeName","src":"223:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"259:7:21","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_7200_by_1","typeString":"int_const 7200"},"value":"2"},"visibility":"private"},{"constant":true,"id":6909,"mutability":"constant","name":"USD_ORACLE_DECIMALS","nameLocation":"298:19:21","nodeType":"VariableDeclaration","scope":6975,"src":"273:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"320:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"private"},{"body":{"id":6962,"nodeType":"Block","src":"432:447:21","statements":[{"assignments":[6918,6920,null,6922,6924],"declarations":[{"constant":false,"id":6918,"mutability":"mutable","name":"roundId","nameLocation":"463:7:21","nodeType":"VariableDeclaration","scope":6962,"src":"456:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6917,"name":"uint80","nodeType":"ElementaryTypeName","src":"456:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":6920,"mutability":"mutable","name":"answer","nameLocation":"491:6:21","nodeType":"VariableDeclaration","scope":6962,"src":"484:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6919,"name":"int256","nodeType":"ElementaryTypeName","src":"484:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,{"constant":false,"id":6922,"mutability":"mutable","name":"updatedAt","nameLocation":"533:9:21","nodeType":"VariableDeclaration","scope":6962,"src":"525:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6921,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6924,"mutability":"mutable","name":"answerInRound","nameLocation":"563:13:21","nodeType":"VariableDeclaration","scope":6962,"src":"556:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6923,"name":"uint80","nodeType":"ElementaryTypeName","src":"556:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"id":6928,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6925,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"589:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"599:15:21","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"589:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"589:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"442:174:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6929,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"644:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"654:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"644:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6932,"name":"updatedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"671:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"671:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"644:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint80","typeString":"uint80"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6936,"name":"answerInRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"701:13:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6937,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"717:7:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"701:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"644:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6940,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"740:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"746:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"740:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6942,"name":"updatedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"758:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"740:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6944,"name":"TIME_OUT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"770:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"740:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"644:134:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6950,"nodeType":"IfStatement","src":"627:183:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6947,"name":"InvalidPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"796:12:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"796:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6949,"nodeType":"RevertStatement","src":"789:21:21"}},{"expression":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6951,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"821:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6954,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"837:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"829:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6952,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:21","typeDescriptions":{}}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"829:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"847:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6957,"name":"USD_ORACLE_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"853:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"847:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"829:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"821:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6961,"nodeType":"ExpressionStatement","src":"821:51:21"}]},"id":6963,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"338:8:21","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"priceFeed","nameLocation":"378:9:21","nodeType":"VariableDeclaration","scope":6963,"src":"356:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":6911,"nodeType":"UserDefinedTypeName","pathNode":{"id":6910,"name":"AggregatorV3Interface","nameLocations":["356:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"356:21:21"},"referencedDeclaration":45,"src":"356:21:21","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"346:47:21"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"price","nameLocation":"425:5:21","nodeType":"VariableDeclaration","scope":6963,"src":"417:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"417:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"416:15:21"},"scope":6975,"src":"329:550:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6973,"nodeType":"Block","src":"959:32:21","statements":[{"expression":{"id":6971,"name":"TIME_OUT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"976:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6970,"id":6972,"nodeType":"Return","src":"969:15:21"}]},"functionSelector":"c03e0fd7","id":6974,"implemented":true,"kind":"function","modifiers":[],"name":"getTimeOut","nameLocation":"895:10:21","nodeType":"FunctionDefinition","parameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6974,"src":"906:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":6965,"nodeType":"UserDefinedTypeName","pathNode":{"id":6964,"name":"AggregatorV3Interface","nameLocations":["906:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"906:21:21"},"referencedDeclaration":45,"src":"906:21:21","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"905:23:21"},"returnParameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6974,"src":"950:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6968,"name":"uint256","nodeType":"ElementaryTypeName","src":"950:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"949:9:21"},"scope":6975,"src":"886:105:21","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":6976,"src":"166:827:21","usedErrors":[6903],"usedEvents":[]}],"src":"33:960:21"},"id":21},"contracts/libraries/Helper.sol":{"ast":{"absolutePath":"contracts/libraries/Helper.sol","exportedSymbols":{"Helper":[7050],"IERC20":[373],"IERC20Metadata":[399]},"id":7051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6977,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":6980,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7051,"sourceUnit":400,"src":"59:105:22","symbolAliases":[{"foreign":{"id":6978,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"67:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6979,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"75:14:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Helper","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":7050,"linearizedBaseContracts":[7050],"name":"Helper","nameLocation":"175:6:22","nodeType":"ContractDefinition","nodes":[{"errorSelector":"90b8ec18","id":6982,"name":"TransferFailed","nameLocation":"194:14:22","nodeType":"ErrorDefinition","parameters":{"id":6981,"nodeType":"ParameterList","parameters":[],"src":"208:2:22"},"src":"188:23:22"},{"body":{"id":6997,"nodeType":"Block","src":"312:60:22","statements":[{"expression":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6989,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"322:8:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":6991,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"348:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6990,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"333:14:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$399_$","typeString":"type(contract IERC20Metadata)"}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"333:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$399","typeString":"contract IERC20Metadata"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"355:8:22","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":398,"src":"333:30:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"333:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"322:43:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6996,"nodeType":"ExpressionStatement","src":"322:43:22"}]},"id":6998,"implemented":true,"kind":"function","modifiers":[],"name":"tokenDecimals","nameLocation":"230:13:22","nodeType":"FunctionDefinition","parameters":{"id":6985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"token","nameLocation":"261:5:22","nodeType":"VariableDeclaration","scope":6998,"src":"253:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6983,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"243:29:22"},"returnParameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"decimals","nameLocation":"302:8:22","nodeType":"VariableDeclaration","scope":6998,"src":"296:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6986,"name":"uint8","nodeType":"ElementaryTypeName","src":"296:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"295:16:22"},"scope":7050,"src":"221:151:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"510:274:22","statements":[{"assignments":[7010],"declarations":[{"constant":false,"id":7010,"mutability":"mutable","name":"success","nameLocation":"525:7:22","nodeType":"VariableDeclaration","scope":7048,"src":"520:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7009,"name":"bool","nodeType":"ElementaryTypeName","src":"520:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7011,"nodeType":"VariableDeclarationStatement","src":"520:12:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"546:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7015,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"563:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_Helper_$7050","typeString":"library Helper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Helper_$7050","typeString":"library Helper"}],"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"555:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7013,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:22","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"555:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"546:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7040,"nodeType":"Block","src":"648:83:22","statements":[{"expression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7029,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"662:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7034,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"700:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7035,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"707:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7036,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"712:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7031,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"679:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7030,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"672:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$373_$","typeString":"type(contract IERC20)"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$373","typeString":"contract IERC20"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"687:12:22","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":372,"src":"672:27:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:48:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"662:58:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7039,"nodeType":"ExpressionStatement","src":"662:58:22"}]},"id":7041,"nodeType":"IfStatement","src":"542:189:22","trueBody":{"id":7028,"nodeType":"Block","src":"570:72:22","statements":[{"expression":{"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7018,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"584:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7023,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"618:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7024,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7020,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"601:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7019,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"594:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$373_$","typeString":"type(contract IERC20)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"594:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$373","typeString":"contract IERC20"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"609:8:22","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":340,"src":"594:23:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"594:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"584:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7027,"nodeType":"ExpressionStatement","src":"584:47:22"}]}},{"condition":{"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"744:8:22","subExpression":{"id":7042,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"745:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7047,"nodeType":"IfStatement","src":"740:37:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7044,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"761:14:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"761:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7046,"nodeType":"RevertStatement","src":"754:23:22"}}]},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"transferERC20","nameLocation":"387:13:22","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7000,"mutability":"mutable","name":"_token","nameLocation":"418:6:22","nodeType":"VariableDeclaration","scope":7049,"src":"410:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6999,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7002,"mutability":"mutable","name":"_from","nameLocation":"442:5:22","nodeType":"VariableDeclaration","scope":7049,"src":"434:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7001,"name":"address","nodeType":"ElementaryTypeName","src":"434:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7004,"mutability":"mutable","name":"_to","nameLocation":"466:3:22","nodeType":"VariableDeclaration","scope":7049,"src":"457:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7003,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"_amount","nameLocation":"487:7:22","nodeType":"VariableDeclaration","scope":7049,"src":"479:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7005,"name":"uint256","nodeType":"ElementaryTypeName","src":"479:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"400:100:22"},"returnParameters":{"id":7008,"nodeType":"ParameterList","parameters":[],"src":"510:0:22"},"scope":7050,"src":"378:406:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7051,"src":"166:620:22","usedErrors":[6982],"usedEvents":[]}],"src":"33:753:22"},"id":22},"contracts/libraries/InterestRate.sol":{"ast":{"absolutePath":"contracts/libraries/InterestRate.sol","exportedSymbols":{"InterestRate":[7149],"Structs":[6897]},"id":7150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7052,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:23"},{"absolutePath":"contracts/interfaces/Structs.sol","file":"../interfaces/Structs.sol","id":7053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7150,"sourceUnit":6898,"src":"59:35:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"InterestRate","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":7149,"linearizedBaseContracts":[7149],"name":"InterestRate","nameLocation":"104:12:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":7056,"mutability":"constant","name":"RATE_PRECISION","nameLocation":"149:14:23","nodeType":"VariableDeclaration","scope":7149,"src":"123:47:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7054,"name":"uint256","nodeType":"ElementaryTypeName","src":"123:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":7055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"body":{"id":7147,"nodeType":"Block","src":"329:752:23","statements":[{"assignments":[7067],"declarations":[{"constant":false,"id":7067,"mutability":"mutable","name":"optimalUtilization","nameLocation":"347:18:23","nodeType":"VariableDeclaration","scope":7147,"src":"339:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7066,"name":"uint256","nodeType":"ElementaryTypeName","src":"339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7070,"initialValue":{"expression":{"id":7068,"name":"_interestRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"368:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":7069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"386:18:23","memberName":"optimalUtilization","nodeType":"MemberAccess","referencedDeclaration":6875,"src":"368:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"339:65:23"},{"assignments":[7072],"declarations":[{"constant":false,"id":7072,"mutability":"mutable","name":"baseRate","nameLocation":"422:8:23","nodeType":"VariableDeclaration","scope":7147,"src":"414:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7071,"name":"uint256","nodeType":"ElementaryTypeName","src":"414:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7078,"initialValue":{"arguments":[{"expression":{"id":7075,"name":"_interestRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"441:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":7076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"459:8:23","memberName":"baseRate","nodeType":"MemberAccess","referencedDeclaration":6869,"src":"441:26:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":7074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"433:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:23","typeDescriptions":{}}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"433:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"414:54:23"},{"assignments":[7080],"declarations":[{"constant":false,"id":7080,"mutability":"mutable","name":"slope1","nameLocation":"486:6:23","nodeType":"VariableDeclaration","scope":7147,"src":"478:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7079,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7086,"initialValue":{"arguments":[{"expression":{"id":7083,"name":"_interestRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"503:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":7084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"521:6:23","memberName":"slope1","nodeType":"MemberAccess","referencedDeclaration":6871,"src":"503:24:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":7082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"495:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:23","typeDescriptions":{}}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"495:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"478:50:23"},{"assignments":[7088],"declarations":[{"constant":false,"id":7088,"mutability":"mutable","name":"slope2","nameLocation":"546:6:23","nodeType":"VariableDeclaration","scope":7147,"src":"538:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7087,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7094,"initialValue":{"arguments":[{"expression":{"id":7091,"name":"_interestRateInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"563:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo memory"}},"id":7092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"581:6:23","memberName":"slope2","nodeType":"MemberAccess","referencedDeclaration":6873,"src":"563:24:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"555:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7089,"name":"uint256","nodeType":"ElementaryTypeName","src":"555:7:23","typeDescriptions":{}}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"555:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"538:50:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7095,"name":"utilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"603:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7096,"name":"optimalUtilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"618:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"603:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7145,"nodeType":"Block","src":"766:309:23","statements":[{"assignments":[7115],"declarations":[{"constant":false,"id":7115,"mutability":"mutable","name":"delta","nameLocation":"788:5:23","nodeType":"VariableDeclaration","scope":7145,"src":"780:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7114,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7119,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7116,"name":"utilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"796:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7117,"name":"optimalUtilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"810:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"796:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"780:48:23"},{"assignments":[7121],"declarations":[{"constant":false,"id":7121,"mutability":"mutable","name":"excessUtilizationRate","nameLocation":"850:21:23","nodeType":"VariableDeclaration","scope":7145,"src":"842:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7131,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7122,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"892:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7123,"name":"RATE_PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"900:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"892:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7126,"name":"RATE_PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"919:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7127,"name":"optimalUtilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"936:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"919:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"918:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"891:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"842:113:23"},{"expression":{"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7132,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"969:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7133,"name":"baseRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"979:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7134,"name":"slope1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"990:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"979:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7136,"name":"excessUtilizationRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"1000:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7137,"name":"slope2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"1024:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1000:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"999:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7140,"name":"RATE_PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"1050:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"999:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"979:85:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"969:95:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7144,"nodeType":"ExpressionStatement","src":"969:95:23"}]},"id":7146,"nodeType":"IfStatement","src":"599:476:23","trueBody":{"id":7113,"nodeType":"Block","src":"638:122:23","statements":[{"assignments":[7099],"declarations":[{"constant":false,"id":7099,"mutability":"mutable","name":"rate","nameLocation":"660:4:23","nodeType":"VariableDeclaration","scope":7113,"src":"652:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7098,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7100,"name":"utilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"668:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7101,"name":"slope1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"682:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"668:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"667:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7104,"name":"optimalUtilization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"692:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"667:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"652:58:23"},{"expression":{"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7107,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"724:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7108,"name":"baseRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"734:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7109,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"745:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"734:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"724:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7112,"nodeType":"ExpressionStatement","src":"724:25:23"}]}}]},"id":7148,"implemented":true,"kind":"function","modifiers":[],"name":"getInterestRate","nameLocation":"186:15:23","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7059,"mutability":"mutable","name":"_interestRateInfo","nameLocation":"236:17:23","nodeType":"VariableDeclaration","scope":7148,"src":"211:42:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_memory_ptr","typeString":"struct Structs.VaultInfo"},"typeName":{"id":7058,"nodeType":"UserDefinedTypeName","pathNode":{"id":7057,"name":"Structs.VaultInfo","nameLocations":["211:7:23","219:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6876,"src":"211:17:23"},"referencedDeclaration":6876,"src":"211:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_VaultInfo_$6876_storage_ptr","typeString":"struct Structs.VaultInfo"}},"visibility":"internal"},{"constant":false,"id":7061,"mutability":"mutable","name":"utilization","nameLocation":"271:11:23","nodeType":"VariableDeclaration","scope":7148,"src":"263:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7060,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"201:87:23"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"newRate","nameLocation":"320:7:23","nodeType":"VariableDeclaration","scope":7148,"src":"312:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7063,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"311:17:23"},"scope":7149,"src":"177:904:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7150,"src":"96:987:23","usedErrors":[],"usedEvents":[]}],"src":"33:1050:23"},"id":23},"contracts/libraries/VaultAccounting.sol":{"ast":{"absolutePath":"contracts/libraries/VaultAccounting.sol","exportedSymbols":{"Structs":[6897],"VaultAccounting":[7263]},"id":7264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7151,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"contracts/interfaces/Structs.sol","file":"../interfaces/Structs.sol","id":7152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7264,"sourceUnit":6898,"src":"58:35:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"VaultAccounting","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":7263,"linearizedBaseContracts":[7263],"name":"VaultAccounting","nameLocation":"103:15:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":7206,"nodeType":"Block","src":"270:285:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7164,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"283:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"289:6:24","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"283:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"299:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"283:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7204,"nodeType":"Block","src":"348:201:24","statements":[{"expression":{"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7173,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"362:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7174,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"372:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7175,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"381:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"387:6:24","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"381:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"372:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"371:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":7179,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"397:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"403:6:24","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"397:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"371:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"362:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7183,"nodeType":"ExpressionStatement","src":"362:47:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7184,"name":"roundUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"427:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7185,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"439:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7186,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"448:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"454:6:24","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"448:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"439:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"438:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":7190,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"464:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"470:6:24","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"464:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"438:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"479:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"438:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"427:58:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7203,"nodeType":"IfStatement","src":"423:116:24","trueBody":{"id":7202,"nodeType":"Block","src":"487:52:24","statements":[{"expression":{"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7196,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"505:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7197,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"514:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"523:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"514:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"505:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7201,"nodeType":"ExpressionStatement","src":"505:19:24"}]}}]},"id":7205,"nodeType":"IfStatement","src":"280:269:24","trueBody":{"id":7172,"nodeType":"Block","src":"302:40:24","statements":[{"expression":{"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7168,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"316:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7169,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"325:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"316:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7171,"nodeType":"ExpressionStatement","src":"316:15:24"}]}}]},"id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"toShares","nameLocation":"134:8:24","nodeType":"FunctionDefinition","parameters":{"id":7160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7155,"mutability":"mutable","name":"total","nameLocation":"173:5:24","nodeType":"VariableDeclaration","scope":7207,"src":"152:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault"},"typeName":{"id":7154,"nodeType":"UserDefinedTypeName","pathNode":{"id":7153,"name":"Structs.Vault","nameLocations":["152:7:24","160:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":6845,"src":"152:13:24"},"referencedDeclaration":6845,"src":"152:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage_ptr","typeString":"struct Structs.Vault"}},"visibility":"internal"},{"constant":false,"id":7157,"mutability":"mutable","name":"amount","nameLocation":"196:6:24","nodeType":"VariableDeclaration","scope":7207,"src":"188:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7156,"name":"uint256","nodeType":"ElementaryTypeName","src":"188:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7159,"mutability":"mutable","name":"roundUp","nameLocation":"217:7:24","nodeType":"VariableDeclaration","scope":7207,"src":"212:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7158,"name":"bool","nodeType":"ElementaryTypeName","src":"212:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"142:88:24"},"returnParameters":{"id":7163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7162,"mutability":"mutable","name":"shares","nameLocation":"262:6:24","nodeType":"VariableDeclaration","scope":7207,"src":"254:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7161,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:16:24"},"scope":7263,"src":"125:430:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7261,"nodeType":"Block","src":"706:285:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7219,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"719:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"725:6:24","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"719:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"735:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"719:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7259,"nodeType":"Block","src":"784:201:24","statements":[{"expression":{"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7228,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"798:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7229,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"808:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7230,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"817:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"823:6:24","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"817:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"808:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"807:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":7234,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"833:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"839:6:24","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"833:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"807:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"798:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7238,"nodeType":"ExpressionStatement","src":"798:47:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7239,"name":"roundUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"863:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7240,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"875:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7241,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"884:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"890:6:24","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":6844,"src":"884:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"875:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"874:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":7245,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"900:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault memory"}},"id":7246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"906:6:24","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6842,"src":"900:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"874:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7248,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"915:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"874:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"863:58:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7258,"nodeType":"IfStatement","src":"859:116:24","trueBody":{"id":7257,"nodeType":"Block","src":"923:52:24","statements":[{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7251,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"941:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"950:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"959:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"950:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7256,"nodeType":"ExpressionStatement","src":"941:19:24"}]}}]},"id":7260,"nodeType":"IfStatement","src":"716:269:24","trueBody":{"id":7227,"nodeType":"Block","src":"738:40:24","statements":[{"expression":{"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7223,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"752:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7224,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"761:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"752:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7226,"nodeType":"ExpressionStatement","src":"752:15:24"}]}}]},"id":7262,"implemented":true,"kind":"function","modifiers":[],"name":"toAmount","nameLocation":"570:8:24","nodeType":"FunctionDefinition","parameters":{"id":7215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7210,"mutability":"mutable","name":"total","nameLocation":"609:5:24","nodeType":"VariableDeclaration","scope":7262,"src":"588:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_memory_ptr","typeString":"struct Structs.Vault"},"typeName":{"id":7209,"nodeType":"UserDefinedTypeName","pathNode":{"id":7208,"name":"Structs.Vault","nameLocations":["588:7:24","596:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":6845,"src":"588:13:24"},"referencedDeclaration":6845,"src":"588:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$6845_storage_ptr","typeString":"struct Structs.Vault"}},"visibility":"internal"},{"constant":false,"id":7212,"mutability":"mutable","name":"shares","nameLocation":"632:6:24","nodeType":"VariableDeclaration","scope":7262,"src":"624:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7211,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7214,"mutability":"mutable","name":"roundUp","nameLocation":"653:7:24","nodeType":"VariableDeclaration","scope":7262,"src":"648:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7213,"name":"bool","nodeType":"ElementaryTypeName","src":"648:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"578:88:24"},"returnParameters":{"id":7218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7217,"mutability":"mutable","name":"amount","nameLocation":"698:6:24","nodeType":"VariableDeclaration","scope":7262,"src":"690:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7216,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"689:16:24"},"scope":7263,"src":"561:430:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7264,"src":"95:898:24","usedErrors":[],"usedEvents":[]}],"src":"32:961:24"},"id":24},"contracts/utils/Constants.sol":{"ast":{"absolutePath":"contracts/utils/Constants.sol","exportedSymbols":{"Constants":[7305]},"id":7306,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7265,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:25"},{"abstract":true,"baseContracts":[],"canonicalName":"Constants","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7305,"linearizedBaseContracts":[7305],"name":"Constants","nameLocation":"76:9:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"249d39e9","id":7268,"mutability":"constant","name":"BPS","nameLocation":"116:3:25","nodeType":"VariableDeclaration","scope":7305,"src":"92:33:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7266,"name":"uint256","nodeType":"ElementaryTypeName","src":"92:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"316535","id":7267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"1e5"},"visibility":"public"},{"constant":true,"functionSelector":"aaf5eb68","id":7271,"mutability":"constant","name":"PRECISION","nameLocation":"201:9:25","nodeType":"VariableDeclaration","scope":7305,"src":"177:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7269,"name":"uint256","nodeType":"ElementaryTypeName","src":"177:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":7270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"213:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":true,"id":7274,"mutability":"constant","name":"MIN_HEALTH_FACTOR","nameLocation":"264:17:25","nodeType":"VariableDeclaration","scope":7305,"src":"238:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7272,"name":"uint256","nodeType":"ElementaryTypeName","src":"238:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"284:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":true,"id":7277,"mutability":"constant","name":"FULL_LIQUIDATION_THRESHOLD","nameLocation":"320:26:25","nodeType":"VariableDeclaration","scope":7305,"src":"294:61:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7275,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e39653138","id":7276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"349:6:25","typeDescriptions":{"typeIdentifier":"t_rational_900000000000000000_by_1","typeString":"int_const 900000000000000000"},"value":"0.9e18"},"visibility":"internal"},{"constant":true,"id":7280,"mutability":"constant","name":"LIQUIDATION_THRESHOLD","nameLocation":"387:21:25","nodeType":"VariableDeclaration","scope":7305,"src":"361:53:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7278,"name":"uint256","nodeType":"ElementaryTypeName","src":"361:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"386534","id":7279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"411:3:25","typeDescriptions":{"typeIdentifier":"t_rational_80000_by_1","typeString":"int_const 80000"},"value":"8e4"},"visibility":"internal"},{"constant":true,"id":7283,"mutability":"constant","name":"DEFAULT_LIQUIDATION_CLOSE","nameLocation":"452:25:25","nodeType":"VariableDeclaration","scope":7305,"src":"426:57:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"356534","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"480:3:25","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"5e4"},"visibility":"internal"},{"constant":true,"id":7286,"mutability":"constant","name":"LIQUIDATION_REWARD","nameLocation":"521:18:25","nodeType":"VariableDeclaration","scope":7305,"src":"495:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"356533","id":7285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"542:3:25","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5e3"},"visibility":"internal"},{"constant":true,"id":7289,"mutability":"constant","name":"NFT_LIQUIDATION_DISCOUNT","nameLocation":"583:24:25","nodeType":"VariableDeclaration","scope":7305,"src":"557:56:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7287,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"316534","id":7288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:3:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"1e4"},"visibility":"internal"},{"constant":true,"id":7292,"mutability":"constant","name":"NFT_WARNING_DELAY","nameLocation":"651:17:25","nodeType":"VariableDeclaration","scope":7305,"src":"625:54:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7290,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3234","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"671:8:25","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"24"},"visibility":"internal"},{"constant":true,"id":7295,"mutability":"constant","name":"NFT_LIQUIDATOR_DELAY","nameLocation":"711:20:25","nodeType":"VariableDeclaration","scope":7305,"src":"685:58:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7293,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"734:9:25","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"visibility":"internal"},{"constant":true,"id":7298,"mutability":"constant","name":"DEFAULT_INTEREST","nameLocation":"812:16:25","nodeType":"VariableDeclaration","scope":7305,"src":"787:53:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7296,"name":"uint64","nodeType":"ElementaryTypeName","src":"787:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"313538323437303436","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"831:9:25","typeDescriptions":{"typeIdentifier":"t_rational_158247046_by_1","typeString":"int_const 158247046"},"value":"158247046"},"visibility":"internal"},{"constant":true,"id":7301,"mutability":"constant","name":"MAX_PROTOCOL_FEE","nameLocation":"907:16:25","nodeType":"VariableDeclaration","scope":7305,"src":"881:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7299,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e356534","id":7300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"926:5:25","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"0.5e4"},"visibility":"internal"},{"constant":true,"functionSelector":"d37db1d2","id":7304,"mutability":"constant","name":"BLOCKS_PER_YEAR","nameLocation":"961:15:25","nodeType":"VariableDeclaration","scope":7305,"src":"937:49:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7302,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32313032343030","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"979:7:25","typeDescriptions":{"typeIdentifier":"t_rational_2102400_by_1","typeString":"int_const 2102400"},"value":"2102400"},"visibility":"public"}],"scope":7306,"src":"58:966:25","usedErrors":[],"usedEvents":[]}],"src":"32:993:25"},"id":25},"contracts/utils/Pausing.sol":{"ast":{"absolutePath":"contracts/utils/Pausing.sol","exportedSymbols":{"Context":[1601],"Ownable":[158],"Pausing":[7414]},"id":7415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7307,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7415,"sourceUnit":159,"src":"58:52:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7309,"name":"Ownable","nameLocations":["132:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":158,"src":"132:7:26"},"id":7310,"nodeType":"InheritanceSpecifier","src":"132:7:26"}],"canonicalName":"Pausing","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7414,"linearizedBaseContracts":[7414,158,1601],"name":"Pausing","nameLocation":"121:7:26","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"61a552dc","id":7313,"mutability":"mutable","name":"globalPaused","nameLocation":"159:12:26","nodeType":"VariableDeclaration","scope":7414,"src":"147:31:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7311,"name":"bool","nodeType":"ElementaryTypeName","src":"147:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":7312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"174:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"id":7317,"mutability":"mutable","name":"vaultPaused","nameLocation":"228:11:26","nodeType":"VariableDeclaration","scope":7414,"src":"185:54:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7316,"keyName":"vaulToken","keyNameLocation":"202:9:26","keyType":{"id":7314,"name":"address","nodeType":"ElementaryTypeName","src":"194:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"185:42:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"status","valueNameLocation":"220:6:26","valueType":{"id":7315,"name":"bool","nodeType":"ElementaryTypeName","src":"215:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"errorSelector":"b187bd26","id":7319,"name":"isPaused","nameLocation":"252:8:26","nodeType":"ErrorDefinition","parameters":{"id":7318,"nodeType":"ParameterList","parameters":[],"src":"260:2:26"},"src":"246:17:26"},{"errorSelector":"7acf4892","id":7321,"name":"isNotPaused","nameLocation":"274:11:26","nodeType":"ErrorDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[],"src":"285:2:26"},"src":"268:20:26"},{"anonymous":false,"eventSelector":"59617e84cd4a4d47c34c76f190da73d3a6a0236e0770dcba41851db53f336f57","id":7325,"name":"SystemPaused","nameLocation":"300:12:26","nodeType":"EventDefinition","parameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"indexed":false,"mutability":"mutable","name":"state","nameLocation":"318:5:26","nodeType":"VariableDeclaration","scope":7325,"src":"313:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7322,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"312:12:26"},"src":"294:31:26"},{"anonymous":false,"eventSelector":"f0158690f9b0f41fc31e96038d36f6b6517557ebe2d3202408966ef3c616f5b6","id":7331,"name":"VaultPaused","nameLocation":"336:11:26","nodeType":"EventDefinition","parameters":{"id":7330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"indexed":false,"mutability":"mutable","name":"vault","nameLocation":"356:5:26","nodeType":"VariableDeclaration","scope":7331,"src":"348:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7326,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7329,"indexed":false,"mutability":"mutable","name":"state","nameLocation":"368:5:26","nodeType":"VariableDeclaration","scope":7331,"src":"363:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7328,"name":"bool","nodeType":"ElementaryTypeName","src":"363:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"347:27:26"},"src":"330:45:26"},{"body":{"id":7347,"nodeType":"Block","src":"430:79:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"444:13:26","subExpression":{"id":7336,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"445:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"461:19:26","subExpression":{"baseExpression":{"id":7338,"name":"vaultPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"462:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7340,"indexExpression":{"id":7339,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"474:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"462:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"444:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7346,"nodeType":"IfStatement","src":"440:62:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7343,"name":"isNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"489:11:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7345,"nodeType":"RevertStatement","src":"482:20:26"}}]},"id":7348,"implemented":true,"kind":"function","modifiers":[],"name":"WhenPaused","nameLocation":"390:10:26","nodeType":"FunctionDefinition","parameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"vault","nameLocation":"409:5:26","nodeType":"VariableDeclaration","scope":7348,"src":"401:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7332,"name":"address","nodeType":"ElementaryTypeName","src":"401:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"400:15:26"},"returnParameters":{"id":7335,"nodeType":"ParameterList","parameters":[],"src":"430:0:26"},"scope":7414,"src":"381:128:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7360,"nodeType":"Block","src":"567:59:26","statements":[{"condition":{"arguments":[{"id":7354,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"594:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7353,"name":"pausedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"581:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7359,"nodeType":"IfStatement","src":"577:42:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7356,"name":"isPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"609:8:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"609:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7358,"nodeType":"RevertStatement","src":"602:17:26"}}]},"id":7361,"implemented":true,"kind":"function","modifiers":[],"name":"WhenNotPaused","nameLocation":"524:13:26","nodeType":"FunctionDefinition","parameters":{"id":7351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7350,"mutability":"mutable","name":"vault","nameLocation":"546:5:26","nodeType":"VariableDeclaration","scope":7361,"src":"538:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7349,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"537:15:26"},"returnParameters":{"id":7352,"nodeType":"ParameterList","parameters":[],"src":"567:0:26"},"scope":7414,"src":"515:111:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7374,"nodeType":"Block","src":"696:58:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7368,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"713:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":7369,"name":"vaultPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"729:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7371,"indexExpression":{"id":7370,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"741:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"729:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"713:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7367,"id":7373,"nodeType":"Return","src":"706:41:26"}]},"functionSelector":"b6812c99","id":7375,"implemented":true,"kind":"function","modifiers":[],"name":"pausedStatus","nameLocation":"641:12:26","nodeType":"FunctionDefinition","parameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"vault","nameLocation":"662:5:26","nodeType":"VariableDeclaration","scope":7375,"src":"654:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7362,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"653:15:26"},"returnParameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7375,"src":"690:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7365,"name":"bool","nodeType":"ElementaryTypeName","src":"690:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"689:6:26"},"scope":7414,"src":"632:122:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7412,"nodeType":"Block","src":"832:288:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7384,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"846:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"863:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"855:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7385,"name":"address","nodeType":"ElementaryTypeName","src":"855:7:26","typeDescriptions":{}}},"id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"846:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7410,"nodeType":"Block","src":"1017:97:26","statements":[{"expression":{"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7399,"name":"vaultPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"1031:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7401,"indexExpression":{"id":7400,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"1043:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1031:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7402,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"1052:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1031:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7404,"nodeType":"ExpressionStatement","src":"1031:27:26"},{"eventCall":{"arguments":[{"id":7406,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"1089:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7407,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"1096:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7405,"name":"VaultPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"1077:11:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1077:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7409,"nodeType":"EmitStatement","src":"1072:31:26"}]},"id":7411,"nodeType":"IfStatement","src":"842:272:26","trueBody":{"id":7398,"nodeType":"Block","src":"867:144:26","statements":[{"expression":{"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7390,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"940:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7391,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"955:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"940:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7393,"nodeType":"ExpressionStatement","src":"940:21:26"},{"eventCall":{"arguments":[{"id":7395,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"993:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7394,"name":"SystemPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"980:12:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"980:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7397,"nodeType":"EmitStatement","src":"975:25:26"}]}}]},"functionSelector":"1d81944f","id":7413,"implemented":true,"kind":"function","modifiers":[{"id":7382,"kind":"modifierInvocation","modifierName":{"id":7381,"name":"onlyOwner","nameLocations":["822:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"822:9:26"},"nodeType":"ModifierInvocation","src":"822:9:26"}],"name":"setPausedStatus","nameLocation":"769:15:26","nodeType":"FunctionDefinition","parameters":{"id":7380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7377,"mutability":"mutable","name":"vault","nameLocation":"793:5:26","nodeType":"VariableDeclaration","scope":7413,"src":"785:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7376,"name":"address","nodeType":"ElementaryTypeName","src":"785:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7379,"mutability":"mutable","name":"status","nameLocation":"805:6:26","nodeType":"VariableDeclaration","scope":7413,"src":"800:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7378,"name":"bool","nodeType":"ElementaryTypeName","src":"800:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"784:28:26"},"returnParameters":{"id":7383,"nodeType":"ParameterList","parameters":[],"src":"832:0:26"},"scope":7414,"src":"760:360:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7415,"src":"112:1010:26","usedErrors":[7319,7321],"usedEvents":[59,7325,7331]}],"src":"32:1090:26"},"id":26}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":432,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":434,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":438,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":442,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":446,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":452,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"devdoc":{"details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c14ed779ba5121e803c74d38b342784e50c8a2524f56414382ea5e0cb692b4064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C EQ 0xED PUSH24 0x9BA5121E803C74D38B342784E50C8A2524F56414382EA5E0 0xCB PUSH10 0x2B4064736F6C63430008 EQ STOP CALLER ","sourceMap":"251:2847:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c14ed779ba5121e803c74d38b342784e50c8a2524f56414382ea5e0cb692b4064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C EQ 0xED PUSH24 0x9BA5121E803C74D38B342784E50C8A2524F56414382EA5E0 0xCB PUSH10 0x2B4064736F6C63430008 EQ STOP CALLER ","sourceMap":"251:2847:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite","toStringSigned(int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","errors":{"MathOverflowedMulDiv()":[{"details":"Muldiv operation overflow."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab814cfea946e022b97d24a219db99dc611af91d817f34a73287c7c8f7c44b064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB8 EQ 0xCF 0xEA SWAP5 PUSH15 0x22B97D24A219DB99DC611AF91D817 RETURN 0x4A PUSH20 0x287C7C8F7C44B064736F6C634300081400330000 ","sourceMap":"203:14914:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab814cfea946e022b97d24a219db99dc611af91d817f34a73287c7c8f7c44b064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB8 EQ 0xCF 0xEA SWAP5 PUSH15 0x22B97D24A219DB99DC611AF91D817 RETURN 0x4A PUSH20 0x287C7C8F7C44B064736F6C634300081400330000 ","sourceMap":"203:14914:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee16814fbc2917902afb8d274c3a31f9348d19a5c6bb7a0462bc965d2a94ab3e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE AND DUP2 0x4F 0xBC 0x29 OR SWAP1 0x2A 0xFB DUP14 0x27 0x4C GASPRICE BALANCE 0xF9 CALLVALUE DUP14 NOT 0xA5 0xC6 0xBB PUSH27 0x462BC965D2A94AB3E64736F6C6343000814003300000000000000 ","sourceMap":"216:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee16814fbc2917902afb8d274c3a31f9348d19a5c6bb7a0462bc965d2a94ab3e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE AND DUP2 0x4F 0xBC 0x29 OR SWAP1 0x2A 0xFB DUP14 0x27 0x4C GASPRICE BALANCE 0xF9 CALLVALUE DUP14 NOT 0xA5 0xC6 0xBB PUSH27 0x462BC965D2A94AB3E64736F6C6343000814003300000000000000 ","sourceMap":"216:1047:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220394fa7af868cf54806b1c1cadd276afd6d850d473f76bad5eebf10d5462d672664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x4F 0xA7 0xAF DUP7 DUP13 CREATE2 BASEFEE MOD 0xB1 0xC1 0xCA 0xDD 0x27 PUSH11 0xFD6D850D473F76BAD5EEBF LT 0xD5 CHAINID 0x2D PUSH8 0x2664736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1330:11640:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1330:11640:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220394fa7af868cf54806b1c1cadd276afd6d850d473f76bad5eebf10d5462d672664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x4F 0xA7 0xAF DUP7 DUP13 CREATE2 BASEFEE MOD 0xB1 0xC1 0xCA 0xDD 0x27 PUSH11 0xFD6D850D473F76BAD5EEBF LT 0xD5 CHAINID 0x2D PUSH8 0x2664736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1330:11640:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HydraPool.sol":{"HydraPool":{"abi":[{"inputs":[{"internalType":"address","name":"daiAddress","type":"address"},{"internalType":"address","name":"daiPriceFeed","type":"address"},{"components":[{"internalType":"uint64","name":"reserveRatio","type":"uint64"},{"internalType":"uint64","name":"feeToProtocolRate","type":"uint64"},{"internalType":"uint64","name":"flashFeeRate","type":"uint64"},{"internalType":"uint64","name":"baseRate","type":"uint64"},{"internalType":"uint64","name":"slope1","type":"uint64"},{"internalType":"uint64","name":"slope2","type":"uint64"},{"internalType":"uint256","name":"optimalUtilization","type":"uint256"}],"internalType":"struct Structs.VaultSetupParamemters","name":"daiVaultParams","type":"tuple"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AlreadySupported","type":"error"},{"inputs":[],"name":"ArrayMismatch","type":"error"},{"inputs":[],"name":"BelowHealthFactor","type":"error"},{"inputs":[],"name":"BorrowerIsSolvant","type":"error"},{"inputs":[],"name":"EmptyArray","type":"error"},{"inputs":[],"name":"FlashloanFailed","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"FlashloanPaused","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"InvalidFeeRate","type":"error"},{"inputs":[],"name":"InvalidNFT","type":"error"},{"inputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"InvalidNFTLiquidation","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[{"internalType":"uint256","name":"ratio","type":"uint256"}],"name":"InvalidReserveRatio","type":"error"},{"inputs":[{"internalType":"enum Structs.TokenType","name":"tokenType","type":"uint8"}],"name":"InvalidTokenType","type":"error"},{"inputs":[],"name":"LiquidatorDelayHasNotPassed","type":"error"},{"inputs":[],"name":"MustPayMoreDebt","type":"error"},{"inputs":[],"name":"NoLiquidationWarning","type":"error"},{"inputs":[],"name":"SelfLiquidation","type":"error"},{"inputs":[],"name":"TokenNotSupported","type":"error"},{"inputs":[{"internalType":"uint256","name":"sharesOutOrAmountIn","type":"uint256"}],"name":"TooHighSlipage","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"WarningDelayHasNotPassed","type":"error"},{"inputs":[],"name":"isNotPaused","type":"error"},{"inputs":[],"name":"isPaused","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"interestRatePerSec","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"interestEarned","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feesAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feesShare","type":"uint256"}],"name":"AccuredInterest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"enum Structs.TokenType","name":"tokenType","type":"uint8"}],"name":"AddSupportedToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"DepositNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address[]","name":"token","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"fees","type":"uint256[]"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"FlashloanSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"uint256","name":"repaidAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateral","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"Liquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"address","name":"nftAddres","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"LiquidatingNFTStopped","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"LiquidatingNFTWarning","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"address","name":"borrower","type":"address"},{"indexed":false,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRepayDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftBuyPrice","type":"uint256"}],"name":"NFTLiquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"components":[{"internalType":"uint64","name":"reserveRatio","type":"uint64"},{"internalType":"uint64","name":"feeToProtocolRate","type":"uint64"},{"internalType":"uint64","name":"flashFeeRate","type":"uint64"},{"internalType":"uint64","name":"baseRate","type":"uint64"},{"internalType":"uint64","name":"slope1","type":"uint64"},{"internalType":"uint64","name":"slope2","type":"uint64"},{"internalType":"uint256","name":"optimalUtilization","type":"uint256"}],"indexed":false,"internalType":"struct Structs.VaultSetupParamemters","name":"params","type":"tuple"}],"name":"NewVaultSetup","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"state","type":"bool"}],"name":"SystemPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"elapsedTime","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"newInterestRate","type":"uint64"}],"name":"UpdateInterestRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"bool","name":"state","type":"bool"}],"name":"VaultPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"WithdrawNFT","type":"event"},{"inputs":[],"name":"BLOCKS_PER_YEAR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"accureInterest","outputs":[{"internalType":"uint256","name":"_interestEarned","type":"uint256"},{"internalType":"uint256","name":"_feesAmount","type":"uint256"},{"internalType":"uint256","name":"_feesShare","type":"uint256"},{"internalType":"uint64","name":"_newRate","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isAsset","type":"bool"}],"name":"amountToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"canLiquidateNFT","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"depositNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address[]","name":"repayTokens","type":"address[]"},{"internalType":"uint256[]","name":"repayAmounts","type":"uint256[]"}],"name":"executeNFTLiquidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashloan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashloanFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountInUSD","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"}],"name":"getDepositedNFT","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"}],"name":"getDepositedNFTCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getNFTLiquidationWarning","outputs":[{"components":[{"internalType":"address","name":"liquidator","type":"address"},{"internalType":"uint64","name":"liquidationTimestamp","type":"uint64"}],"internalType":"struct Structs.LiquidatedWarning","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenVault","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"shares","type":"uint256"}],"internalType":"struct Structs.Vault","name":"totalAsset","type":"tuple"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"shares","type":"uint256"}],"internalType":"struct Structs.Vault","name":"totalBorrow","type":"tuple"},{"components":[{"internalType":"uint256","name":"reserveRatio","type":"uint256"},{"internalType":"uint64","name":"feeToProtocolRate","type":"uint64"},{"internalType":"uint64","name":"flashFeeRate","type":"uint64"},{"internalType":"uint64","name":"ratePerSec","type":"uint64"},{"internalType":"uint64","name":"lastTimestamp","type":"uint64"},{"internalType":"uint64","name":"lastBlock","type":"uint64"},{"internalType":"uint64","name":"baseRate","type":"uint64"},{"internalType":"uint64","name":"slope1","type":"uint64"},{"internalType":"uint64","name":"slope2","type":"uint64"},{"internalType":"uint256","name":"optimalUtilization","type":"uint256"}],"internalType":"struct Structs.VaultInfo","name":"vaultInfo","type":"tuple"}],"internalType":"struct Structs.TokenVault","name":"vault","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserData","outputs":[{"internalType":"uint256","name":"totalTokenCollateral","type":"uint256"},{"internalType":"uint256","name":"totalNFTCollateral","type":"uint256"},{"internalType":"uint256","name":"totalBorrowValue","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserNFTCollateral","outputs":[{"internalType":"uint256","name":"totalValueInUSD","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getUserTokenCollateralAndBorrow","outputs":[{"internalType":"uint256","name":"tokenCollateralShare","type":"uint256"},{"internalType":"uint256","name":"tokenBorrowShare","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTotalBorrow","outputs":[{"internalType":"uint256","name":"totalValueInUSD","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTotalTokenCollateral","outputs":[{"internalType":"uint256","name":"totalValueInUSD","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"hasDepositedNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"healthFactor","outputs":[{"internalType":"uint256","name":"factor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"collateral","type":"address"},{"internalType":"address","name":"userBorrowToken","type":"address"},{"internalType":"uint256","name":"amountToLiquidate","type":"uint256"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashloan","outputs":[{"internalType":"uint256","name":"maxFlashloanAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"name":"pausedStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"redeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setPausedStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"priceFeed","type":"address"},{"internalType":"enum Structs.TokenType","name":"tokenType","type":"uint8"},{"components":[{"internalType":"uint64","name":"reserveRatio","type":"uint64"},{"internalType":"uint64","name":"feeToProtocolRate","type":"uint64"},{"internalType":"uint64","name":"flashFeeRate","type":"uint64"},{"internalType":"uint64","name":"baseRate","type":"uint64"},{"internalType":"uint64","name":"slope1","type":"uint64"},{"internalType":"uint64","name":"slope2","type":"uint64"},{"internalType":"uint256","name":"optimalUtilization","type":"uint256"}],"internalType":"struct Structs.VaultSetupParamemters","name":"params","type":"tuple"},{"internalType":"bool","name":"addToken","type":"bool"}],"name":"setupVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"bool","name":"isAsset","type":"bool"}],"name":"sharesToAmount","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"stopNFTLiquidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minSharesOut","type":"uint256"}],"name":"supply","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"triggerNFTiquidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxShareIn","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@WhenPaused_7348":{"entryPoint":1350,"id":7348,"parameterSlots":1,"returnSlots":0},"@_3925":{"entryPoint":null,"id":3925,"parameterSlots":3,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_1583":{"entryPoint":null,"id":1583,"parameterSlots":0,"returnSlots":1},"@_setupVault_6455":{"entryPoint":188,"id":6455,"parameterSlots":5,"returnSlots":0},"@_transferOwnership_157":{"entryPoint":108,"id":157,"parameterSlots":1,"returnSlots":0},"@addSupportedToken_6752":{"entryPoint":845,"id":6752,"parameterSlots":3,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":1436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_struct$_VaultSetupParamemters_$6896_memory_ptr_fromMemory":{"entryPoint":1489,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint64_fromMemory":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_enum_TokenType":{"entryPoint":1770,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_enum$_TokenType_$6827__to_t_address_t_uint8__fromStack_reversed":{"entryPoint":1827,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__to_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_TokenType_$6827__to_t_uint8__fromStack_reversed":{"entryPoint":1805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":1748,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3602:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:27","statements":[{"nodeType":"YulAssignment","src":"84:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:27"},"nodeType":"YulFunctionCall","src":"93:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:27"}]},{"body":{"nodeType":"YulBlock","src":"169:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:27"},"nodeType":"YulFunctionCall","src":"171:12:27"},"nodeType":"YulExpressionStatement","src":"171:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:27"},"nodeType":"YulFunctionCall","src":"150:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:27"},"nodeType":"YulFunctionCall","src":"146:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:27"},"nodeType":"YulFunctionCall","src":"135:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:27"},"nodeType":"YulFunctionCall","src":"125:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:27"},"nodeType":"YulFunctionCall","src":"118:50:27"},"nodeType":"YulIf","src":"115:70:27"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:27","type":""}],"src":"14:177:27"},{"body":{"nodeType":"YulBlock","src":"255:116:27","statements":[{"nodeType":"YulAssignment","src":"265:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"280:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"274:5:27"},"nodeType":"YulFunctionCall","src":"274:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"265:5:27"}]},{"body":{"nodeType":"YulBlock","src":"349:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"358:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"361:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"351:6:27"},"nodeType":"YulFunctionCall","src":"351:12:27"},"nodeType":"YulExpressionStatement","src":"351:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"309:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"320:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"335:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"339:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"331:3:27"},"nodeType":"YulFunctionCall","src":"331:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"343:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"327:3:27"},"nodeType":"YulFunctionCall","src":"327:18:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"316:3:27"},"nodeType":"YulFunctionCall","src":"316:30:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"306:2:27"},"nodeType":"YulFunctionCall","src":"306:41:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"299:6:27"},"nodeType":"YulFunctionCall","src":"299:49:27"},"nodeType":"YulIf","src":"296:69:27"}]},"name":"abi_decode_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"234:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"245:5:27","type":""}],"src":"196:175:27"},{"body":{"nodeType":"YulBlock","src":"530:1150:27","statements":[{"nodeType":"YulVariableDeclaration","src":"540:33:27","value":{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"554:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"550:3:27"},"nodeType":"YulFunctionCall","src":"550:23:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"544:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"598:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"607:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"610:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"600:6:27"},"nodeType":"YulFunctionCall","src":"600:12:27"},"nodeType":"YulExpressionStatement","src":"600:12:27"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"589:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"593:3:27","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"585:3:27"},"nodeType":"YulFunctionCall","src":"585:12:27"},"nodeType":"YulIf","src":"582:32:27"},{"nodeType":"YulAssignment","src":"623:50:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"663:9:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"633:29:27"},"nodeType":"YulFunctionCall","src":"633:40:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"623:6:27"}]},{"nodeType":"YulAssignment","src":"682:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"726:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"737:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"722:3:27"},"nodeType":"YulFunctionCall","src":"722:18:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"692:29:27"},"nodeType":"YulFunctionCall","src":"692:49:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"682:6:27"}]},{"body":{"nodeType":"YulBlock","src":"781:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"790:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"793:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"783:6:27"},"nodeType":"YulFunctionCall","src":"783:12:27"},"nodeType":"YulExpressionStatement","src":"783:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"761:2:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"769:2:27","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"765:3:27"},"nodeType":"YulFunctionCall","src":"765:7:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"757:3:27"},"nodeType":"YulFunctionCall","src":"757:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"775:4:27","type":"","value":"0xe0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"753:3:27"},"nodeType":"YulFunctionCall","src":"753:27:27"},"nodeType":"YulIf","src":"750:47:27"},{"nodeType":"YulVariableDeclaration","src":"806:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"826:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"820:5:27"},"nodeType":"YulFunctionCall","src":"820:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"810:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"838:35:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"860:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"868:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"856:3:27"},"nodeType":"YulFunctionCall","src":"856:17:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"842:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"956:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"977:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"984:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"989:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"980:3:27"},"nodeType":"YulFunctionCall","src":"980:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"970:6:27"},"nodeType":"YulFunctionCall","src":"970:31:27"},"nodeType":"YulExpressionStatement","src":"970:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1021:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1024:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1014:6:27"},"nodeType":"YulFunctionCall","src":"1014:15:27"},"nodeType":"YulExpressionStatement","src":"1014:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1049:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1052:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1042:6:27"},"nodeType":"YulFunctionCall","src":"1042:15:27"},"nodeType":"YulExpressionStatement","src":"1042:15:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"891:10:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"915:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"907:3:27"},"nodeType":"YulFunctionCall","src":"907:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"919:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"903:3:27"},"nodeType":"YulFunctionCall","src":"903:18:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"888:2:27"},"nodeType":"YulFunctionCall","src":"888:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"927:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"939:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"924:2:27"},"nodeType":"YulFunctionCall","src":"924:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"885:2:27"},"nodeType":"YulFunctionCall","src":"885:62:27"},"nodeType":"YulIf","src":"882:185:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1083:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1087:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1076:6:27"},"nodeType":"YulFunctionCall","src":"1076:22:27"},"nodeType":"YulExpressionStatement","src":"1076:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1114:6:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1155:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1166:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1151:3:27"},"nodeType":"YulFunctionCall","src":"1151:18:27"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"1122:28:27"},"nodeType":"YulFunctionCall","src":"1122:48:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1107:6:27"},"nodeType":"YulFunctionCall","src":"1107:64:27"},"nodeType":"YulExpressionStatement","src":"1107:64:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1191:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1199:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1187:3:27"},"nodeType":"YulFunctionCall","src":"1187:15:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1237:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1248:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1233:3:27"},"nodeType":"YulFunctionCall","src":"1233:18:27"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"1204:28:27"},"nodeType":"YulFunctionCall","src":"1204:48:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1180:6:27"},"nodeType":"YulFunctionCall","src":"1180:73:27"},"nodeType":"YulExpressionStatement","src":"1180:73:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1273:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1281:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1269:3:27"},"nodeType":"YulFunctionCall","src":"1269:15:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1330:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:27"},"nodeType":"YulFunctionCall","src":"1315:19:27"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"1286:28:27"},"nodeType":"YulFunctionCall","src":"1286:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1262:6:27"},"nodeType":"YulFunctionCall","src":"1262:74:27"},"nodeType":"YulExpressionStatement","src":"1262:74:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1356:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1364:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1352:3:27"},"nodeType":"YulFunctionCall","src":"1352:15:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1413:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:27"},"nodeType":"YulFunctionCall","src":"1398:19:27"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"1369:28:27"},"nodeType":"YulFunctionCall","src":"1369:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1345:6:27"},"nodeType":"YulFunctionCall","src":"1345:74:27"},"nodeType":"YulExpressionStatement","src":"1345:74:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1439:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1447:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1435:3:27"},"nodeType":"YulFunctionCall","src":"1435:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1486:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1497:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1482:3:27"},"nodeType":"YulFunctionCall","src":"1482:19:27"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"1453:28:27"},"nodeType":"YulFunctionCall","src":"1453:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1428:6:27"},"nodeType":"YulFunctionCall","src":"1428:75:27"},"nodeType":"YulExpressionStatement","src":"1428:75:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1523:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1531:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1519:3:27"},"nodeType":"YulFunctionCall","src":"1519:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1570:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1581:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1566:3:27"},"nodeType":"YulFunctionCall","src":"1566:20:27"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"1537:28:27"},"nodeType":"YulFunctionCall","src":"1537:50:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1512:6:27"},"nodeType":"YulFunctionCall","src":"1512:76:27"},"nodeType":"YulExpressionStatement","src":"1512:76:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1608:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1616:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1604:3:27"},"nodeType":"YulFunctionCall","src":"1604:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1643:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1628:3:27"},"nodeType":"YulFunctionCall","src":"1628:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1622:5:27"},"nodeType":"YulFunctionCall","src":"1622:26:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1597:6:27"},"nodeType":"YulFunctionCall","src":"1597:52:27"},"nodeType":"YulExpressionStatement","src":"1597:52:27"},{"nodeType":"YulAssignment","src":"1658:16:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1668:6:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_struct$_VaultSetupParamemters_$6896_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"480:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"491:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"503:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"511:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"519:6:27","type":""}],"src":"376:1304:27"},{"body":{"nodeType":"YulBlock","src":"1717:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1734:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1741:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1746:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1737:3:27"},"nodeType":"YulFunctionCall","src":"1737:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1727:6:27"},"nodeType":"YulFunctionCall","src":"1727:31:27"},"nodeType":"YulExpressionStatement","src":"1727:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1774:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1777:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1767:6:27"},"nodeType":"YulFunctionCall","src":"1767:15:27"},"nodeType":"YulExpressionStatement","src":"1767:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1798:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1801:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1791:6:27"},"nodeType":"YulFunctionCall","src":"1791:15:27"},"nodeType":"YulExpressionStatement","src":"1791:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"1685:127:27"},{"body":{"nodeType":"YulBlock","src":"1917:101:27","statements":[{"nodeType":"YulAssignment","src":"1927:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1939:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1950:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1935:3:27"},"nodeType":"YulFunctionCall","src":"1935:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1927:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1969:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1984:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2000:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2004:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1996:3:27"},"nodeType":"YulFunctionCall","src":"1996:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2008:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1992:3:27"},"nodeType":"YulFunctionCall","src":"1992:18:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1980:3:27"},"nodeType":"YulFunctionCall","src":"1980:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1962:6:27"},"nodeType":"YulFunctionCall","src":"1962:50:27"},"nodeType":"YulExpressionStatement","src":"1962:50:27"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1886:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1897:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1908:4:27","type":""}],"src":"1817:201:27"},{"body":{"nodeType":"YulBlock","src":"2230:605:27","statements":[{"nodeType":"YulAssignment","src":"2240:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2252:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2263:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2248:3:27"},"nodeType":"YulFunctionCall","src":"2248:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2240:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2283:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2298:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2314:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2319:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2310:3:27"},"nodeType":"YulFunctionCall","src":"2310:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2323:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2306:3:27"},"nodeType":"YulFunctionCall","src":"2306:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:27"},"nodeType":"YulFunctionCall","src":"2294:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2276:6:27"},"nodeType":"YulFunctionCall","src":"2276:51:27"},"nodeType":"YulExpressionStatement","src":"2276:51:27"},{"nodeType":"YulVariableDeclaration","src":"2336:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2354:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2358:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2350:3:27"},"nodeType":"YulFunctionCall","src":"2350:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2362:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2346:3:27"},"nodeType":"YulFunctionCall","src":"2346:18:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2340:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2384:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2395:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2380:3:27"},"nodeType":"YulFunctionCall","src":"2380:18:27"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2410:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2404:5:27"},"nodeType":"YulFunctionCall","src":"2404:13:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2419:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2400:3:27"},"nodeType":"YulFunctionCall","src":"2400:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2373:6:27"},"nodeType":"YulFunctionCall","src":"2373:50:27"},"nodeType":"YulExpressionStatement","src":"2373:50:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2443:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2454:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2439:3:27"},"nodeType":"YulFunctionCall","src":"2439:18:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2473:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2481:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:27"},"nodeType":"YulFunctionCall","src":"2469:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2463:5:27"},"nodeType":"YulFunctionCall","src":"2463:22:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2487:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2459:3:27"},"nodeType":"YulFunctionCall","src":"2459:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2432:6:27"},"nodeType":"YulFunctionCall","src":"2432:59:27"},"nodeType":"YulExpressionStatement","src":"2432:59:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2511:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2522:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2507:3:27"},"nodeType":"YulFunctionCall","src":"2507:18:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2541:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2549:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2537:3:27"},"nodeType":"YulFunctionCall","src":"2537:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2531:5:27"},"nodeType":"YulFunctionCall","src":"2531:22:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2555:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2527:3:27"},"nodeType":"YulFunctionCall","src":"2527:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2500:6:27"},"nodeType":"YulFunctionCall","src":"2500:59:27"},"nodeType":"YulExpressionStatement","src":"2500:59:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2579:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2590:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2575:3:27"},"nodeType":"YulFunctionCall","src":"2575:19:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2610:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2618:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2606:3:27"},"nodeType":"YulFunctionCall","src":"2606:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2600:5:27"},"nodeType":"YulFunctionCall","src":"2600:22:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2624:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2596:3:27"},"nodeType":"YulFunctionCall","src":"2596:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2568:6:27"},"nodeType":"YulFunctionCall","src":"2568:60:27"},"nodeType":"YulExpressionStatement","src":"2568:60:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2648:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2659:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2644:3:27"},"nodeType":"YulFunctionCall","src":"2644:19:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2679:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2687:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2675:3:27"},"nodeType":"YulFunctionCall","src":"2675:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2669:5:27"},"nodeType":"YulFunctionCall","src":"2669:23:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2694:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2665:3:27"},"nodeType":"YulFunctionCall","src":"2665:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2637:6:27"},"nodeType":"YulFunctionCall","src":"2637:61:27"},"nodeType":"YulExpressionStatement","src":"2637:61:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2718:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2729:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2714:3:27"},"nodeType":"YulFunctionCall","src":"2714:19:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2749:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2757:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2745:3:27"},"nodeType":"YulFunctionCall","src":"2745:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2739:5:27"},"nodeType":"YulFunctionCall","src":"2739:23:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2764:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2735:3:27"},"nodeType":"YulFunctionCall","src":"2735:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2707:6:27"},"nodeType":"YulFunctionCall","src":"2707:61:27"},"nodeType":"YulExpressionStatement","src":"2707:61:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2788:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2799:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2784:3:27"},"nodeType":"YulFunctionCall","src":"2784:19:27"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2815:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2823:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:27"},"nodeType":"YulFunctionCall","src":"2811:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2805:5:27"},"nodeType":"YulFunctionCall","src":"2805:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2777:6:27"},"nodeType":"YulFunctionCall","src":"2777:52:27"},"nodeType":"YulExpressionStatement","src":"2777:52:27"}]},"name":"abi_encode_tuple_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__to_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2191:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2202:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2210:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2221:4:27","type":""}],"src":"2023:812:27"},{"body":{"nodeType":"YulBlock","src":"2891:186:27","statements":[{"body":{"nodeType":"YulBlock","src":"2933:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2954:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2961:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2966:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2957:3:27"},"nodeType":"YulFunctionCall","src":"2957:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2947:6:27"},"nodeType":"YulFunctionCall","src":"2947:31:27"},"nodeType":"YulExpressionStatement","src":"2947:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2998:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3001:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2991:6:27"},"nodeType":"YulFunctionCall","src":"2991:15:27"},"nodeType":"YulExpressionStatement","src":"2991:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3026:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3029:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3019:6:27"},"nodeType":"YulFunctionCall","src":"3019:15:27"},"nodeType":"YulExpressionStatement","src":"3019:15:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2914:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2921:1:27","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2911:2:27"},"nodeType":"YulFunctionCall","src":"2911:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2904:6:27"},"nodeType":"YulFunctionCall","src":"2904:20:27"},"nodeType":"YulIf","src":"2901:143:27"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3060:3:27"},{"name":"value","nodeType":"YulIdentifier","src":"3065:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3053:6:27"},"nodeType":"YulFunctionCall","src":"3053:18:27"},"nodeType":"YulExpressionStatement","src":"3053:18:27"}]},"name":"abi_encode_enum_TokenType","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2875:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2882:3:27","type":""}],"src":"2840:237:27"},{"body":{"nodeType":"YulBlock","src":"3195:95:27","statements":[{"nodeType":"YulAssignment","src":"3205:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3217:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3228:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3213:3:27"},"nodeType":"YulFunctionCall","src":"3213:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3205:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3266:6:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3274:9:27"}],"functionName":{"name":"abi_encode_enum_TokenType","nodeType":"YulIdentifier","src":"3240:25:27"},"nodeType":"YulFunctionCall","src":"3240:44:27"},"nodeType":"YulExpressionStatement","src":"3240:44:27"}]},"name":"abi_encode_tuple_t_enum$_TokenType_$6827__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3164:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3175:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3186:4:27","type":""}],"src":"3082:208:27"},{"body":{"nodeType":"YulBlock","src":"3436:164:27","statements":[{"nodeType":"YulAssignment","src":"3446:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3458:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3469:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3454:3:27"},"nodeType":"YulFunctionCall","src":"3454:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3446:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3488:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3503:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3519:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3524:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3515:3:27"},"nodeType":"YulFunctionCall","src":"3515:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"3528:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3511:3:27"},"nodeType":"YulFunctionCall","src":"3511:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3499:3:27"},"nodeType":"YulFunctionCall","src":"3499:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3481:6:27"},"nodeType":"YulFunctionCall","src":"3481:51:27"},"nodeType":"YulExpressionStatement","src":"3481:51:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3567:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3579:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3590:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3575:3:27"},"nodeType":"YulFunctionCall","src":"3575:18:27"}],"functionName":{"name":"abi_encode_enum_TokenType","nodeType":"YulIdentifier","src":"3541:25:27"},"nodeType":"YulFunctionCall","src":"3541:53:27"},"nodeType":"YulExpressionStatement","src":"3541:53:27"}]},"name":"abi_encode_tuple_t_address_t_enum$_TokenType_$6827__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3397:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3408:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3416:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3427:4:27","type":""}],"src":"3295:305:27"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_struct$_VaultSetupParamemters_$6896_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 288) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        if slt(add(_1, not(63)), 0xe0) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xe0)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint64_fromMemory(add(headStart, 64)))\n        mstore(add(memPtr, 32), abi_decode_uint64_fromMemory(add(headStart, 96)))\n        mstore(add(memPtr, 64), abi_decode_uint64_fromMemory(add(headStart, 128)))\n        mstore(add(memPtr, 96), abi_decode_uint64_fromMemory(add(headStart, 160)))\n        mstore(add(memPtr, 128), abi_decode_uint64_fromMemory(add(headStart, 192)))\n        mstore(add(memPtr, 160), abi_decode_uint64_fromMemory(add(headStart, 0xe0)))\n        mstore(add(memPtr, 192), mload(add(headStart, 256)))\n        value2 := memPtr\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__to_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := sub(shl(64, 1), 1)\n        mstore(add(headStart, 32), and(mload(value1), _1))\n        mstore(add(headStart, 64), and(mload(add(value1, 32)), _1))\n        mstore(add(headStart, 96), and(mload(add(value1, 64)), _1))\n        mstore(add(headStart, 128), and(mload(add(value1, 96)), _1))\n        mstore(add(headStart, 160), and(mload(add(value1, 128)), _1))\n        mstore(add(headStart, 192), and(mload(add(value1, 160)), _1))\n        mstore(add(headStart, 224), mload(add(value1, 192)))\n    }\n    function abi_encode_enum_TokenType(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_TokenType_$6827__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_TokenType(value0, headStart)\n    }\n    function abi_encode_tuple_t_address_t_enum$_TokenType_$6827__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        abi_encode_enum_TokenType(value1, add(headStart, 32))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526000805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200516b3803806200516b8339810160408190526200004791620005d1565b62000052336200006c565b6200006383836000846001620000bc565b50505062000749565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8015620000d657620000d08585856200034d565b620000e1565b620000e18562000546565b6000836001811115620000f857620000f8620006d4565b036200034657620186a082600001516001600160401b0316111562000143578151604051635f7918ed60e01b81526001600160401b0390911660048201526024015b60405180910390fd5b61138882602001516001600160401b03161115620001865760208201516040516336e6824b60e21b81526001600160401b0390911660048201526024016200013a565b61138882604001516001600160401b03161115620001c95760408083015190516336e6824b60e21b81526001600160401b0390911660048201526024016200013a565b6001600160a01b03851660009081526006602081815260409283902085516001600160401b039081166004830190815592870151600583018054898801518416680100000000000000009081026001600160801b0319909216938516939093171790556060880151948301805460808a015160a08b01518516600160c01b026001600160c01b03918616600160801b02600160801b600160c01b03199990961690940297909716600160401b600160c01b03199091161792909217949094169390931790925560c085015160079092019190915590517f7e914af3d8d31ac64e6df6e8087ac12953b11a1bceebf2a80692aa35e6b0e6ff906200033c908890869060006101008201905060018060a01b038416825260018060401b038084511660208401528060208501511660408401528060408501511660608401528060608501511660808401528060808501511660a08401528060a08501511660c08401525060c083015160e08301529392505050565b60405180910390a1505b5050505050565b6001600160a01b038316600090815260046020526040902054600160a81b900460ff16156200038f57604051633706ba4960e01b815260040160405180910390fd5b6001816001811115620003a657620003a6620006d4565b1115620003ca5780604051630270056f60e51b81526004016200013a91906200070d565b6001600160a01b03808416600090815260046020526040902080549184166001600160a01b031983168117825583926001600160a81b03191617600160a01b8360018111156200041e576200041e620006d4565b02179055506001600160a01b0383166000908152600460205260409020805460ff60a81b1916600160a81b1790556001816001811115620004635762000463620006d4565b03620004ba57600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03851617905562000506565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385161790555b7f20ba3738d0f69ad18e0a9923005003b1434ffc62c40ad3332d30d2d42c49ef4283826040516200053992919062000723565b60405180910390a1505050565b600054600160a01b900460ff161580156200057a57506001600160a01b03811660009081526001602052604090205460ff16155b156200059957604051633d67a44960e11b815260040160405180910390fd5b50565b80516001600160a01b0381168114620005b457600080fd5b919050565b80516001600160401b0381168114620005b457600080fd5b6000806000838503610120811215620005e957600080fd5b620005f4856200059c565b935062000604602086016200059c565b925060e0603f19820112156200061957600080fd5b5060405160e081016001600160401b03811182821017156200064b57634e487b7160e01b600052604160045260246000fd5b80604052506200065e60408601620005b9565b81526200066e60608601620005b9565b60208201526200068160808601620005b9565b60408201526200069460a08601620005b9565b6060820152620006a760c08601620005b9565b6080820152620006ba60e08601620005b9565b60a0820152610100949094015160c0850152509093909250565b634e487b7160e01b600052602160045260246000fd5b600281106200070957634e487b7160e01b600052602160045260246000fd5b9052565b602081016200071d8284620006ea565b92915050565b6001600160a01b038316815260408101620007426020830184620006ea565b9392505050565b614a1280620007596000396000f3fe6080604052600436106102c65760003560e01c80637dbca35311610179578063b6812c99116100d6578063dbe7cc171161008a578063fdda829511610064578063fdda82951461085b578063ff9b8bb81461087b578063ffc9896b1461093357600080fd5b8063dbe7cc17146107fb578063f2fde38b1461081b578063f6aa13f21461083b57600080fd5b8063c223a9be116100bb578063c223a9be146107a4578063d02641a0146107c4578063d37db1d2146107e457600080fd5b8063b6812c9914610764578063bf3702991461078457600080fd5b8063a2d20cf21161012d578063aaf5eb6811610112578063aaf5eb6814610708578063b4240c9914610724578063b5c5f6721461074457600080fd5b8063a2d20cf214610685578063aab3f868146106e857600080fd5b806389a1e8031161015e57806389a1e8031461061d5780638da5cb5b1461063d57806393f2d72e1461066557600080fd5b80637dbca353146105ea57806382a5b1aa146105fd57600080fd5b80632c895aff116102275780634cd5491c116101db5780636ad9f9df116101c05780636ad9f9df14610595578063715018a6146105b557806378767d70146105ca57600080fd5b80634cd5491c1461054457806361a552dc1461056457600080fd5b8063351b14a01161020c578063351b14a0146104e4578063429e2c1a146105115780634b8a35291461053157600080fd5b80632c895aff1461049757806330941e62146104b757600080fd5b80631d81944f1161027e578063249d39e911610263578063249d39e91461044057806325d07a95146104575780632b83cccd1461047757600080fd5b80631d81944f1461040057806322867d781461042057600080fd5b80630f342ee9116102af5780630f342ee91461033c578063150b7a021461036a5780631880b981146103e057600080fd5b80630d30320e146102cb5780630d8459fe146102ed575b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613f8d565b61096e565b005b3480156102f957600080fd5b5061030d610308366004613fc9565b610a3a565b6040805194855260208501939093529183015267ffffffffffffffff1660608201526080015b60405180910390f35b34801561034857600080fd5b5061035c610357366004613ffd565b610a59565b604051908152602001610333565b34801561037657600080fd5b506103af610385366004614086565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610333565b3480156103ec57600080fd5b506102eb6103fb366004614123565b610aef565b34801561040c57600080fd5b506102eb61041b36600461423b565b610b0b565b34801561042c57600080fd5b506102eb61043b366004614272565b610bf1565b34801561044c57600080fd5b5061035c620186a081565b34801561046357600080fd5b5061035c610472366004614272565b610d74565b34801561048357600080fd5b506102eb61049236600461429c565b610de3565b3480156104a357600080fd5b5061035c6104b2366004613fc9565b610df5565b3480156104c357600080fd5b506104d76104d2366004613fc9565b610e78565b60405161033391906142cf565b3480156104f057600080fd5b506105046104ff3660046143ca565b610f77565b6040516103339190614438565b34801561051d57600080fd5b506102eb61052c366004613f8d565b610fb1565b6102eb61053f366004614272565b611138565b34801561055057600080fd5b506102eb61055f366004613f8d565b6112fb565b34801561057057600080fd5b5060005461058590600160a01b900460ff1681565b6040519015158152602001610333565b3480156105a157600080fd5b5061035c6105b0366004613fc9565b611457565b3480156105c157600080fd5b506102eb6114dd565b3480156105d657600080fd5b506102eb6105e5366004614490565b6114f1565b6102eb6105f836600461429c565b6118f2565b34801561060957600080fd5b506102eb610618366004613f8d565b611a7e565b34801561062957600080fd5b5061035c610638366004613fc9565b611b0c565b34801561064957600080fd5b506000546040516001600160a01b039091168152602001610333565b34801561067157600080fd5b5061035c610680366004614272565b611bbc565b34801561069157600080fd5b506106d36106a03660046143ca565b6001600160a01b039182166000908152600760209081526040808320939094168252919091522080546001909101549091565b60408051928352602083019190915201610333565b3480156106f457600080fd5b506102eb61070336600461453b565b611c07565b34801561071457600080fd5b5061035c670de0b6b3a764000081565b34801561073057600080fd5b5061035c61073f3660046143ca565b61218e565b34801561075057600080fd5b506102eb61075f36600461429c565b6121be565b34801561077057600080fd5b5061058561077f366004613fc9565b6121cb565b34801561079057600080fd5b5061035c61079f366004613fc9565b6121fe565b3480156107b057600080fd5b506102eb6107bf366004614586565b61221d565b3480156107d057600080fd5b5061035c6107df366004613fc9565b612653565b3480156107f057600080fd5b5061035c6220148081565b34801561080757600080fd5b5061035c610816366004613fc9565b6126a6565b34801561082757600080fd5b506102eb610836366004613fc9565b612750565b34801561084757600080fd5b50610585610856366004613f8d565b6127e0565b34801561086757600080fd5b5061035c610876366004613ffd565b612811565b34801561088757600080fd5b50610905610896366004613f8d565b6040805180820190915260008082526020820152506001600160a01b03928316600090815260086020908152604080832094861683529381528382209282529182528290208251808401909352549283168252600160a01b90920467ffffffffffffffff169181019190915290565b6040805182516001600160a01b0316815260209283015167ffffffffffffffff169281019290925201610333565b34801561093f57600080fd5b5061095361094e366004613fc9565b612896565b60408051938452602084019290925290820152606001610333565b670de0b6b3a764000061098084611457565b101561099f576040516374fa216b60e01b815260040160405180910390fd5b6001600160a01b03838116600081815260086020908152604080832094871680845294825280832086845282529182902080547fffffffff0000000000000000000000000000000000000000000000000000000016905581519283528201929092529081018290527f077c7becfad752fe6ee0143187438b002e564c671aabfd4b3b3c4343a2e79524906060015b60405180910390a1505050565b600080600080610a49856128c2565b93509350935093505b9193509193565b60008115610aa5576001600160a01b03841660009081526006602090815260408083208151808301909252805482526001015491810191909152610a9e918590612de3565b9050610ae8565b6001600160a01b03841660009081526006602090815260408083208151808301909252600281015482526003015491810191909152610ae5918590612de3565b90505b9392505050565b610af7612e4a565b610b048585858585612ea4565b5050505050565b610b13612e4a565b6001600160a01b038216610b955760008054821515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff9091161790556040517f59617e84cd4a4d47c34c76f190da73d3a6a0236e0770dcba41851db53f336f5790610b8990831515815260200190565b60405180910390a15050565b6001600160a01b038216600081815260016020908152604091829020805460ff19168515159081179091558251938452908301527ff0158690f9b0f41fc31e96038d36f6b6517557ebe2d3202408966ef3c616f5b69101610b89565b610bfa826128c2565b50503360009081526007602090815260408083206001600160a01b03881684528252808320600190810154600684528285208351808501909452600281015484526003015493830193909352919450919250610c5891908590612de3565b9050600019831480610c6957508181115b15610cb357506001600160a01b03831660009081526006602090815260409182902082518084019093526002810154835260030154908201528190610cb090826001613186565b92505b610cc86001600160a01b0385163330866131d4565b6001600160a01b03841660008181526006602090815260408083206003810180546001600160801b03888116909103909155600290910180549189169091039055338084526007835281842085855283529281902085870360019190910155805192835290820192909252908101849052606081018290527fe4a1ae657f49cb1fb1c7d3a94ae6093565c4c8c0e03de488f79c377c3c3a24e0906080015b60405180910390a150505050565b600080610d8084612653565b90506000610d96856001600160a01b0316613347565b90506000610da5826012614624565b610db090600a614721565b610dba9086614730565b9050670de0b6b3a7640000610dcf8483614730565b610dd99190614747565b9695505050505050565b610df083838360016133ab565b505050565b600354600090815b81811015610e7157600060038281548110610e1a57610e1a614769565b60009182526020822001546001600160a01b03169150610e3a868361218e565b90508015610e67576000610e4d83612653565b9050610e598183614730565b610e63908761477f565b9550505b5050600101610dfd565b5050919050565b610e80613eda565b506001600160a01b0316600090815260066020818152604092839020835160a0808201865282546060808401918252600185015460808086019190915291845287518089018952600286015481526003860154818801528487015287516101408101895260048601548152600586015467ffffffffffffffff80821698830198909852680100000000000000008082048916838c0152600160801b8083048a1694840194909452600160c01b918290048916948301949094529786015480881694820194909452918304861660c08301528204851660e0820152949004909216610100840152600701546101208301529182015290565b6001600160a01b038083166000908152600560209081526040808320938516835292905220606090610fa890613627565b90505b92915050565b610fbc8383836127e0565b610fd95760405163079f151f60e11b815260040160405180910390fd5b6000610fe4846126a6565b9050670de0b6b3a7640000610ff885611457565b10158061100457508015155b1561105a576040517f6560982d0000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152604481018390526064015b60405180910390fd5b6001600160a01b038085166000908152600860209081526040808320938716835292815282822085835290522080546001600160a01b031916331781556110a4620151804261477f565b81547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff9290921691909102178155604080513381526001600160a01b0387811660208301528616818301526060810185905290517f2d2541220f1c874dae8d6fa2dc8987e584ca7efede079594de6066330745daa59181900360800190a15050505050565b61114182613634565b61114b8282613674565b61116857604051631e9acf1760e31b815260040160405180910390fd5b611171826128c2565b505050506001600160a01b038216600090815260066020908152604080832081518083019092526002810154825260030154918101919091526111b5908383612de3565b6001600160a01b038416600090815260066020526040812060030180549293506001600160801b038416929091906111ee90849061477f565b90915550506001600160a01b038316600090815260066020526040812060020180546001600160801b038516929061122790849061477f565b90915550503360009081526007602090815260408083206001600160a01b03871684529091528120600101805483929061126290849061477f565b9091555061127d90506001600160a01b0384163033856131d4565b670de0b6b3a764000061128f33611457565b10156112ae576040516374fa216b60e01b815260040160405180910390fd5b604080513381526001600160a01b0385166020820152908101839052606081018290527fc1561b330e73faa7d5d1ac03c968d8f359b0191ccdb9cc002cf7d8eb6ae038cb90608001610a2d565b670de0b6b3a764000061130d84611457565b101561132c576040516330af2d6760e21b815260040160405180910390fd5b6001600160a01b0380841660009081526008602090815260408083208685168452825280832085845290915290208054909116611395576040517f049c49b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8054600160a01b900467ffffffffffffffff164210156113e1576040517f606f9ea300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80546114019061012c90600160a01b900467ffffffffffffffff1661477f565b421115801561141a575080546001600160a01b03163314155b15611451576040517f728e956900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60008060008061146685612896565b919450925090506000611479838561477f565b90508160000361149657610dd9670de0b6b3a76400006064614730565b6000620186a06114a96201388084614730565b6114b39190614747565b9050826114c8670de0b6b3a764000083614730565b6114d29190614747565b979650505050505050565b6114e5612e4a565b6114ef6000613750565b565b60008590036115135760405163521299a960e01b815260040160405180910390fd5b8483146115335760405163b7c1140d60e01b815260040160405180910390fd5b8660008667ffffffffffffffff81111561154f5761154f6140f5565b604051908082528060200260200182016040528015611578578160200160208202803683370190505b50905060005b878110156116e0576115b089898381811061159b5761159b614769565b905060200201602081019061079f9190613fc9565b60000361161c578888828181106115c9576115c9614769565b90506020020160208101906115de9190613fc9565b6040517f7c154f890000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152602401611051565b61166489898381811061163157611631614769565b90506020020160208101906116469190613fc9565b88888481811061165857611658614769565b90506020020135611bbc565b82828151811061167657611676614769565b6020026020010181815250506116d8308b89898581811061169957611699614769565b905060200201358c8c868181106116b2576116b2614769565b90506020020160208101906116c79190613fc9565b6001600160a01b03169291906131d4565b60010161157e565b506040517f64573d020000000000000000000000000000000000000000000000000000000081526001600160a01b038316906364573d02906117349033908c908c908c908c9089908d908d906004016147bb565b6020604051808303816000875af1158015611753573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611777919061488d565b6117ad576040517ffd5ead8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b888110156118a0578281815181106117cb576117cb614769565b60200260200101518888838181106117e5576117e5614769565b905060200201356117f6919061477f565b91506118108b30848d8d868181106116b2576116b2614769565b82818151811061182257611822614769565b60200260200101516001600160801b0316600660008c8c8581811061184957611849614769565b905060200201602081019061185e9190613fc9565b6001600160a01b03166001600160a01b031681526020019081526020016000206000016000016000828254611893919061477f565b90915550506001016117b1565b507f76f226d30806b7b34cf90ae0330c53df665a4127510985a1a3958387039b9d75338a8a8a8a878b8b6040516118de9897969594939291906147bb565b60405180910390a150505050505050505050565b6118fb83613634565b611904836137a0565b61190d836128c2565b50611927925050506001600160a01b0384163330856131d4565b6001600160a01b03831660009081526006602090815260408083208151808301909252805482526001015491810191909152611964908483612de3565b90508181101561198a576040516328ac9b3f60e11b815260048101829052602401611051565b6001600160a01b038416600090815260066020526040812060010180546001600160801b03841692906119be90849061477f565b90915550506001600160a01b038416600090815260066020526040812080546001600160801b03861692906119f490849061477f565b90915550503360009081526007602090815260408083206001600160a01b038816845290915281208054839290611a2c90849061477f565b9091555050604080513381526001600160a01b0386166020820152908101849052606081018290527fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d790608001610d66565b611a8a338484846137f9565b670de0b6b3a7640000611a9c33611457565b1015611abb576040516374fa216b60e01b815260040160405180910390fd5b604080513381526001600160a01b038086166020830152841691810191909152606081018290527fa766742a23fe9ecbd32c553cd9ad3115b2d15c6b72cd5e95858f5a911d55cb4590608001610a2d565b600254600090815b81811015610e7157600060028281548110611b3157611b31614769565b60009182526020808320909101546001600160a01b03888116845260078352604080852091909216808552908352818420600101546006845282852083518085019094526002810154845260030154938301939093529350611b939183613186565b90508015611bb257611ba58282610d74565b611baf908661477f565b94505b5050600101611b14565b6001600160a01b038216600090815260066020526040812060050154620186a090611bfd9068010000000000000000900467ffffffffffffffff1684614730565b610fa89190614747565b6001600160a01b0384163303611c49576040517f44511af100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611c5485611457565b9050670de0b6b3a76400008110611c7e576040516330af2d6760e21b815260040160405180910390fd5b6001600160a01b0385811660009081526007602090815260408083208885168452909152808220549286168252902060010154811580611cbc575080155b15611cc957505050611451565b6001600160a01b03851660009081526006602090815260408083208151808301909252600281015482526003015491810191909152611d0a90836001613186565b90506000670c7d713b49da0000851015611d245781611d3e565b620186a0611d3461c35084614730565b611d3e9190614747565b9050808611611d4d5785611d4f565b805b6001600160a01b038916600090815260066020908152604080832081518083019092528054825260010154918101919091529197509250829150899088908a9089908590611d9e908a83613186565b90506000611dab84612653565b90506000611db886612653565b90506000611dce866001600160a01b0316613347565b90506000611de4886001600160a01b0316613347565b9050611df181600a614721565b611dfb9085614730565b611e0683600a614721565b611e108589614730565b611e1a9190614730565b611e249190614747565b9a506000620186a0611e386113888e614730565b611e429190614747565b9050858c1115611e9a57859b5082600a611e5c9190614721565b84611e6884600a614721565b611e72888a614730565b611e7c9190614730565b611e869190614747565b611e909190614730565b9a50869f50611ebb565b6000611ea68d886148aa565b9050808211611eb55781611eb7565b805b9b50505b6001600160a01b03891660009081526006602090815260408083208151808301909252600281015482526003015491810191909152611efb908983612de3565b6001600160a01b038b16600090815260066020526040812060030180549293506001600160801b03841692909190611f349084906148aa565b90915550506001600160a01b038a16600090815260066020526040812060020180546001600160801b038b169290611f6d9084906148aa565b925050819055506000611fbe8d8f611f85919061477f565b6001600160a01b038c16600090815260066020908152604080832081518083019092528054825260010154918101919091529190612de3565b6001600160a01b038b16600090815260066020526040812060010180549293506001600160801b03841692909190611ff79084906148aa565b9091555061200790508d8f61477f565b6001600160a01b038b16600090815260066020526040812080546001600160801b03939093169290919061203c9084906148aa565b90915550506001600160a01b03808d166000908152600760209081526040808320938f16835292905290812060010180546001600160801b03851692906120849084906148aa565b90915550506001600160a01b03808d166000908152600760209081526040808320938e16835292905290812080546001600160801b03841692906120c99084906148aa565b925050819055505050505050505050505050506120ff303383856120ed919061477f565b6001600160a01b038b169291906131d4565b612120303361210e848661477f565b6001600160a01b038c169291906131d4565b7ffcbc974bf3a532baf2bb229db3c37fd58299b62d2d1db6a855dac5b693bb6ff389338861214e858761477f565b604080516001600160a01b0395861681529490931660208501529183015260608201526080810183905260a00160405180910390a1505050505050505050565b6001600160a01b0380831660009081526005602090815260408083209385168352929052908120610fa8906138d8565b610df083838360006133ab565b60008054600160a01b900460ff1680610fab5750506001600160a01b031660009081526001602052604090205460ff1690565b6000612209826121cb565b61221557600019610fab565b600092915050565b600083900361223f5760405163521299a960e01b815260040160405180910390fd5b82811461225f5760405163b7c1140d60e01b815260040160405180910390fd5b61226a8787876112fb565b600061227588611b0c565b9050600061228288612653565b9050600089818080805b8a811015612414578b8b828181106122a6576122a6614769565b90506020020160208101906122bb9190613fc9565b93508989828181106122cf576122cf614769565b9050602002013592506122e1846128c2565b5050506001600160a01b03851660009081526006602090815260409182902082518084019093526002810154835260030154908201526123249150846001612de3565b915061233b6001600160a01b0385163330866131d4565b6001600160a01b038416600090815260066020526040812060030180546001600160801b038516929061236f9084906148aa565b90915550506001600160a01b038416600090815260066020526040812060020180546001600160801b03861692906123a89084906148aa565b90915550506001600160a01b038086166000908152600760209081526040808320938816835292905290812060010180546001600160801b03851692906123f09084906148aa565b9091555061240090508484610d74565b61240a908761477f565b955060010161228c565b50858711801561243c5750620186a061242f61c35088614730565b6124399190614747565b85105b15612473576040517ff67d9a2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600092508c9150829050620186a061248e6127108261477f565b6124989086614730565b6124a29190614747565b90506124ae81866148aa565b9250600060026000815481106124c6576124c6614769565b6000918252602090912001546001600160a01b031690506124e9813330876131d4565b6001600160a01b03811660009081526006602090815260408083208151808301909252805482526001015491810191909152612526908683612de3565b6001600160a01b038316600090815260066020526040812060010180549293506001600160801b0384169290919061255f90849061477f565b90915550506001600160a01b038216600090815260066020526040812080546001600160801b038816929061259590849061477f565b90915550506001600160a01b038085166000908152600760209081526040808320938616835292905290812080548392906125d190849061477f565b92505081905550505050506125e88b338c8c6137f9565b604080513381526001600160a01b038d811660208301528c1681830152606081018b90526080810184905260a0810183905290517f7cd35ff79d73d5af7cb402eaac9792d8b3d32b685b221cd81c3d5611c8327fd09181900360c00190a15050505050505050505050565b6001600160a01b038116600090815260046020526040812054600160a81b900460ff1661268257506000919050565b6001600160a01b0380831660009081526004602052604090205416610ae8816138e2565b600254600090815b81811015610e71576000600282815481106126cb576126cb614769565b60009182526020808320909101546001600160a01b038881168452600783526040808520919092168085529083528184205460068452828520835180850190945280548452600101549383019390935293506127279183613186565b90508015612746576127398282610d74565b612743908661477f565b94505b50506001016126ae565b612758612e4a565b6001600160a01b0381166127d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611051565b6127dd81613750565b50565b6001600160a01b0380841660009081526005602090815260408083209386168352929052908120610ae590836139e5565b60008115612856576001600160a01b03841660009081526006602090815260408083208151808301909252805482526001015491810191909152610a9e918590613186565b6001600160a01b03841660009081526006602090815260408083208151808301909252600281015482526003015491810191909152610ae5918590613186565b60008060006128a4846126a6565b92506128af84610df5565b91506128ba84611b0c565b929491935050565b6001600160a01b0381166000908152600660208181526040808420815160a0808201845282546060808401918252600185015460808086019190915291845285518087018752600286015481526003860154818901528488015285516101408101875260048601548152600586015467ffffffffffffffff80821699830199909952680100000000000000008082048a16838a0152600160801b8083048b1694840194909452600160c01b918290048a16948301949094529886015480891694820194909452918304871660c08301528204861660e0820152959004909316610100850152600701546101208401528101919091528051518291829182919082036129db57600080600080945094509450945050610a52565b604081015160808101514267ffffffffffffffff90911603612a0457606001519150610a529050565b60208083015101511580612a1c5750612a1c876121cb565b15612a455767ffffffffffffffff4281166080830152431660a082015260408201819052612cad565b60008160a0015167ffffffffffffffff1643612a6191906148aa565b835151602085015151919250600091612a8390670de0b6b3a764000090614730565b612a8d9190614747565b90506000612a9b84836139fd565b67ffffffffffffffff8781166060870152428116608087015243811660a08701526040805186815291831660208301529192507fcff294bc3695620876ce22ec38b97aaa07675b271c26a784ebeba510e59b1f65910160405180910390a1612b0e62201480670de0b6b3a7640000614730565b846060015167ffffffffffffffff1686602001516000015185612b319190614730565b612b3b9190614730565b612b459190614747565b9850886001600160801b03168560200151600001818151612b66919061477f565b905250845180516001600160801b038b169190612b8490839061477f565b90525060408501849052602084015167ffffffffffffffff1615612c5257620186a0846020015167ffffffffffffffff168a612bc09190614730565b612bca9190614747565b855151909850612bdb9089906148aa565b855160200151612beb908a614730565b612bf59190614747565b9650866001600160801b03168560000151602001818151612c16919061477f565b9052503060009081526007602090815260408083206001600160a01b038e16845290915281208054899290612c4c90849061477f565b90915550505b6060808501516040805167ffffffffffffffff9092168252602082018c905281018a90529081018890527ff4fc4a63006144011c7214b4099772de96603a49b426f18267c33b3c1ec35bed9060800160405180910390a15050505b506001600160a01b039590951660009081526006602081815260409283902088518051825582015160018201558882015180516002830155820151600382015597830151805160048a015590810151600589018054948301516060840151608085015167ffffffffffffffff9485166fffffffffffffffffffffffffffffffff1998891617680100000000000000009386168402176001600160801b03908116600160801b938716840277ffffffffffffffffffffffffffffffffffffffffffffffff90811691909117600160c01b93881684021790955560a0870151978e01805460c089015160e08a01516101008b01519b8a1692909c169190911790881690950294909417169785169091029092169590951793909116029190911790915561012001516007909501949094559193909290565b82516000908103612df5575081610ae8565b83516020850151612e069085614730565b612e109190614747565b9050818015612e3a575060208401518451849190612e2e9084614730565b612e389190614747565b105b15610ae857610ae581600161477f565b6000546001600160a01b031633146114ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611051565b8015612eba57612eb5858585613ada565b612ec3565b612ec385613d1a565b6000836001811115612ed757612ed76148bd565b03610b0457620186a0826000015167ffffffffffffffff161115612f365781516040517f5f7918ed00000000000000000000000000000000000000000000000000000000815267ffffffffffffffff9091166004820152602401611051565b611388826020015167ffffffffffffffff161115612f795760208201516040516336e6824b60e21b815267ffffffffffffffff9091166004820152602401611051565b611388826040015167ffffffffffffffff161115612fbc5760408083015190516336e6824b60e21b815267ffffffffffffffff9091166004820152602401611051565b6001600160a01b038516600090815260066020818152604092839020855167ffffffffffffffff9081166004830190815592870151600583018054898801518416680100000000000000009081026fffffffffffffffffffffffffffffffff19909216938516939093171790556060880151948301805460808a015160a08b01518516600160c01b0277ffffffffffffffffffffffffffffffffffffffffffffffff918616600160801b027fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff99909616909402979097167fffffffffffffffff00000000000000000000000000000000ffffffffffffffff9091161792909217949094169390931790925560c085015160079092019190915590517f7e914af3d8d31ac64e6df6e8087ac12953b11a1bceebf2a80692aa35e6b0e6ff9061317690889086906000610100820190506001600160a01b038416825267ffffffffffffffff8084511660208401528060208501511660408401528060408501511660608401528060608501511660808401528060808501511660a08401528060a08501511660c08401525060c083015160e08301529392505050565b60405180910390a1505050505050565b6000836020015160000361319b575081610ae8565b602084015184516131ac9085614730565b6131b69190614747565b9050818015612e3a575083516020850151849190612e2e9084614730565b6000306001600160a01b03851603613279576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905286169063a9059cbb906044016020604051808303816000875af115801561324e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613272919061488d565b9050613310565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490528616906323b872dd906064016020604051808303816000875af11580156132e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061330d919061488d565b90505b80610b04576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613387573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fab91906148d3565b6133b4846128c2565b50503360009081526007602090815260408083206001600160a01b038a16845290915281205492509050821561345057506001600160a01b03851660009081526006602090815260408083208151808301909252805482526001015491810191909152859161342591908390613186565b94508385101561344b576040516328ac9b3f60e11b815260048101869052602401611051565b6134b3565b6001600160a01b0386166000908152600660209081526040808320815180830190925280548252600101549181019190915261348d918790612de3565b9050838111156134b3576040516328ac9b3f60e11b815260048101829052602401611051565b8082108061352857506040516370a0823160e01b815230600482015285906001600160a01b038816906370a0823190602401602060405180830381865afa158015613502573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061352691906148f6565b105b1561354657604051631e9acf1760e31b815260040160405180910390fd5b6001600160a01b03861660008181526006602090815260408083206001810180546001600160801b038089169091039091558154908b16900390553380845260078352818420858552909252909120805484900390556135a991903090886131d4565b670de0b6b3a76400006135bb33611457565b10156135da576040516374fa216b60e01b815260040160405180910390fd5b604080513381526001600160a01b0388166020820152908101869052606081018290527ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb56790608001613176565b60606000610ae883613d84565b61363d816121cb565b156127dd576040517fb187bd2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166000908152600660205260408120600481015490548291620186a0916136a49190614730565b6136ae9190614747565b6001600160a01b0385166000908152600660205260409020549091501580159061374857506136dd838261477f565b6040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015613721573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061374591906148f6565b10155b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116600090815260046020526040902054600160a81b900460ff166127dd576040517f3dd1b30500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6138048483836127e0565b6138215760405163079f151f60e11b815260040160405180910390fd5b6001600160a01b0380851660009081526005602090815260408083209386168352929052206138509082613de0565b506040517f42842e0e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906342842e0e90606401600060405180830381600087803b1580156138ba57600080fd5b505af11580156138ce573d6000803e3d6000fd5b5050505050505050565b6000610fab825490565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061394c9190614929565b945094505093509350600083131580613963575081155b8061398557508369ffffffffffffffffffff168169ffffffffffffffffffff16105b8061399a5750611c2061399883426148aa565b115b156139d0576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6139db600a8061496d565b610dd99084614730565b60008181526001830160205260408120541515610fa8565b61012082015160c083015160e08401516101008501516000939267ffffffffffffffff9081169281169116838611613a5a57600084613a3c8489614730565b613a469190614747565b9050613a52818561477f565b955050613ad0565b6000613a6685886148aa565b90506000613a7c86670de0b6b3a76400006148aa565b613a8e670de0b6b3a764000084614730565b613a989190614747565b9050670de0b6b3a7640000613aad8483614730565b613ab79190614747565b613ac1858761477f565b613acb919061477f565b965050505b5050505092915050565b6001600160a01b038316600090815260046020526040902054600160a81b900460ff1615613b34576040517f3706ba4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001816001811115613b4857613b486148bd565b1115613b8257806040517f4e00ade0000000000000000000000000000000000000000000000000000000008152600401611051919061499b565b6001600160a01b03808416600090815260046020526040902080549184166001600160a01b031983168117825583927fffffffffffffffffffffff0000000000000000000000000000000000000000001617600160a01b836001811115613beb57613beb6148bd565b02179055506001600160a01b038316600090815260046020526040902080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556001816001811115613c4857613c486148bd565b03613c9d57600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038516179055613ce9565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385161790555b7f20ba3738d0f69ad18e0a9923005003b1434ffc62c40ad3332d30d2d42c49ef428382604051610a2d9291906149a9565b600054600160a01b900460ff16158015613d4d57506001600160a01b03811660009081526001602052604090205460ff16155b156127dd576040517f7acf489200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606081600001805480602002602001604051908101604052809291908181526020018280548015613dd457602002820191906000526020600020905b815481526020019060010190808311613dc0575b50505050509050919050565b6000610fa8838360008181526001830160205260408120548015613ed0576000613e0b6001836148aa565b8554909150600090613e1f906001906148aa565b9050808214613e84576000866000018281548110613e3f57613e3f614769565b9060005260206000200154905080876000018481548110613e6257613e62614769565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080613e9557613e956149c6565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610fab565b6000915050610fab565b6040805160a08101909152600060608201818152608083019190915281908152602001613f1a604051806040016040528060008152602001600081525090565b8152604080516101408101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082015291015290565b80356001600160a01b0381168114613f8857600080fd5b919050565b600080600060608486031215613fa257600080fd5b613fab84613f71565b9250613fb960208501613f71565b9150604084013590509250925092565b600060208284031215613fdb57600080fd5b610fa882613f71565b80151581146127dd57600080fd5b8035613f8881613fe4565b60008060006060848603121561401257600080fd5b61401b84613f71565b925060208401359150604084013561403281613fe4565b809150509250925092565b60008083601f84011261404f57600080fd5b50813567ffffffffffffffff81111561406757600080fd5b60208301915083602082850101111561407f57600080fd5b9250929050565b60008060008060006080868803121561409e57600080fd5b6140a786613f71565b94506140b560208701613f71565b935060408601359250606086013567ffffffffffffffff8111156140d857600080fd5b6140e48882890161403d565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b803567ffffffffffffffff81168114613f8857600080fd5b600080600080600085870361016081121561413d57600080fd5b61414687613f71565b955061415460208801613f71565b945060408701356002811061416857600080fd5b935060e0605f198201121561417c57600080fd5b5060405160e0810181811067ffffffffffffffff821117156141ae57634e487b7160e01b600052604160045260246000fd5b6040526141bd6060880161410b565b81526141cb6080880161410b565b60208201526141dc60a0880161410b565b60408201526141ed60c0880161410b565b60608201526141fe60e0880161410b565b6080820152614210610100880161410b565b60a082015261012087013560c0820152915061422f6101408701613ff2565b90509295509295909350565b6000806040838503121561424e57600080fd5b61425783613f71565b9150602083013561426781613fe4565b809150509250929050565b6000806040838503121561428557600080fd5b61428e83613f71565b946020939093013593505050565b6000806000606084860312156142b157600080fd5b6142ba84613f71565b95602085013595506040909401359392505050565b815180518252602090810151908201526101c081016020838101518051604085015290810151606084015250604083015180516080840152602081015167ffffffffffffffff811660a085015250604081015167ffffffffffffffff811660c085015250606081015167ffffffffffffffff811660e08501525060808101516101006143668186018367ffffffffffffffff169052565b60a083015191506101206143858187018467ffffffffffffffff169052565b60c084015167ffffffffffffffff90811661014088015260e0850151811661016088015291840151909116610180860152909101516101a09093019290925292915050565b600080604083850312156143dd57600080fd5b6143e683613f71565b91506143f460208401613f71565b90509250929050565b600081518084526020808501945080840160005b8381101561442d57815187529582019590820190600101614411565b509495945050505050565b602081526000610fa860208301846143fd565b60008083601f84011261445d57600080fd5b50813567ffffffffffffffff81111561447557600080fd5b6020830191508360208260051b850101111561407f57600080fd5b60008060008060008060006080888a0312156144ab57600080fd5b6144b488613f71565b9650602088013567ffffffffffffffff808211156144d157600080fd5b6144dd8b838c0161444b565b909850965060408a01359150808211156144f657600080fd5b6145028b838c0161444b565b909650945060608a013591508082111561451b57600080fd5b506145288a828b0161403d565b989b979a50959850939692959293505050565b6000806000806080858703121561455157600080fd5b61455a85613f71565b935061456860208601613f71565b925061457660408601613f71565b9396929550929360600135925050565b600080600080600080600060a0888a0312156145a157600080fd5b6145aa88613f71565b96506145b860208901613f71565b955060408801359450606088013567ffffffffffffffff808211156145dc57600080fd5b6145e88b838c0161444b565b909650945060808a013591508082111561460157600080fd5b506145288a828b0161444b565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610fab57610fab61460e565b600181815b8085111561467857816000190482111561465e5761465e61460e565b8085161561466b57918102915b93841c9390800290614642565b509250929050565b60008261468f57506001610fab565b8161469c57506000610fab565b81600181146146b257600281146146bc576146d8565b6001915050610fab565b60ff8411156146cd576146cd61460e565b50506001821b610fab565b5060208310610133831016604e8410600b84101617156146fb575081810a610fab565b614705838361463d565b80600019048211156147195761471961460e565b029392505050565b6000610fa860ff841683614680565b8082028115828204841417610fab57610fab61460e565b60008261476457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b80820180821115610fab57610fab61460e565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03898116825260a060208084018290529083018990526000918a9160c08501845b8c81101561480857836147f586613f71565b16825293820193908201906001016147e3565b5085810360408701528981527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a111561484157600080fd5b8960051b9350838b838301379092018481038301606086015291614867818401896143fd565b92505050828103608084015261487e818587614792565b9b9a5050505050505050505050565b60006020828403121561489f57600080fd5b8151610ae881613fe4565b81810381811115610fab57610fab61460e565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156148e557600080fd5b815160ff81168114610ae857600080fd5b60006020828403121561490857600080fd5b5051919050565b805169ffffffffffffffffffff81168114613f8857600080fd5b600080600080600060a0868803121561494157600080fd5b61494a8661490f565b945060208601519350604086015192506060860151915061422f6080870161490f565b6000610fa88383614680565b6002811061499757634e487b7160e01b600052602160045260246000fd5b9052565b60208101610fab8284614979565b6001600160a01b038316815260408101610ae86020830184614979565b634e487b7160e01b600052603160045260246000fdfea26469706673582212206e15512fd904e89d9fc5c3f4f5b1ef0b971d07904bd64ca056609e3f7a8cbd7464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x516B CODESIZE SUB DUP1 PUSH3 0x516B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x47 SWAP2 PUSH3 0x5D1 JUMP JUMPDEST PUSH3 0x52 CALLER PUSH3 0x6C JUMP JUMPDEST PUSH3 0x63 DUP4 DUP4 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH3 0xBC JUMP JUMPDEST POP POP POP PUSH3 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH3 0xD6 JUMPI PUSH3 0xD0 DUP6 DUP6 DUP6 PUSH3 0x34D JUMP JUMPDEST PUSH3 0xE1 JUMP JUMPDEST PUSH3 0xE1 DUP6 PUSH3 0x546 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xF8 JUMPI PUSH3 0xF8 PUSH3 0x6D4 JUMP JUMPDEST SUB PUSH3 0x346 JUMPI PUSH3 0x186A0 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH3 0x143 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5F7918ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1388 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH3 0x186 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x36E6824B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x13A JUMP JUMPDEST PUSH2 0x1388 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH3 0x1C9 JUMPI PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 MLOAD PUSH4 0x36E6824B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0x13A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD SWAP1 DUP2 SSTORE SWAP3 DUP8 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD DUP10 DUP9 ADD MLOAD DUP5 AND PUSH9 0x10000000000000000 SWAP1 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP3 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SSTORE PUSH1 0x60 DUP9 ADD MLOAD SWAP5 DUP4 ADD DUP1 SLOAD PUSH1 0x80 DUP11 ADD MLOAD PUSH1 0xA0 DUP12 ADD MLOAD DUP6 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB SWAP2 DUP7 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP10 SWAP1 SWAP7 AND SWAP1 SWAP5 MUL SWAP8 SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP3 SWAP1 SWAP3 OR SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x7 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0x7E914AF3D8D31AC64E6DF6E8087AC12953B11A1BCEEBF2A80692AA35E6B0E6FF SWAP1 PUSH3 0x33C SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP1 DUP5 MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP6 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP6 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x38F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3706BA49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x3A6 JUMPI PUSH3 0x3A6 PUSH3 0x6D4 JUMP JUMPDEST GT ISZERO PUSH3 0x3CA JUMPI DUP1 PUSH1 0x40 MLOAD PUSH4 0x270056F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13A SWAP2 SWAP1 PUSH3 0x70D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x41E JUMPI PUSH3 0x41E PUSH3 0x6D4 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x463 JUMPI PUSH3 0x463 PUSH3 0x6D4 JUMP JUMPDEST SUB PUSH3 0x4BA JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH3 0x506 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH32 0x20BA3738D0F69AD18E0A9923005003B1434FFC62C40AD3332D30D2D42C49EF42 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH3 0x539 SWAP3 SWAP2 SWAP1 PUSH3 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x57A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH3 0x599 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3D67A449 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 SUB PUSH2 0x120 DUP2 SLT ISZERO PUSH3 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x5F4 DUP6 PUSH3 0x59C JUMP JUMPDEST SWAP4 POP PUSH3 0x604 PUSH1 0x20 DUP7 ADD PUSH3 0x59C JUMP JUMPDEST SWAP3 POP PUSH1 0xE0 PUSH1 0x3F NOT DUP3 ADD SLT ISZERO PUSH3 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x64B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP PUSH3 0x65E PUSH1 0x40 DUP7 ADD PUSH3 0x5B9 JUMP JUMPDEST DUP2 MSTORE PUSH3 0x66E PUSH1 0x60 DUP7 ADD PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x681 PUSH1 0x80 DUP7 ADD PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x694 PUSH1 0xA0 DUP7 ADD PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x6A7 PUSH1 0xC0 DUP7 ADD PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0x6BA PUSH1 0xE0 DUP7 ADD PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x100 SWAP5 SWAP1 SWAP5 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE POP SWAP1 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x709 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH3 0x71D DUP3 DUP5 PUSH3 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH3 0x742 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4A12 DUP1 PUSH3 0x759 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DBCA353 GT PUSH2 0x179 JUMPI DUP1 PUSH4 0xB6812C99 GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xDBE7CC17 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xFDDA8295 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xFDDA8295 EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0xFF9B8BB8 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0xFFC9896B EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDBE7CC17 EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xF6AA13F2 EQ PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC223A9BE GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xC223A9BE EQ PUSH2 0x7A4 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x7C4 JUMPI DUP1 PUSH4 0xD37DB1D2 EQ PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB6812C99 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xBF370299 EQ PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2D20CF2 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x112 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xB4240C99 EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0xB5C5F672 EQ PUSH2 0x744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2D20CF2 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xAAB3F868 EQ PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89A1E803 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x89A1E803 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x93F2D72E EQ PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7DBCA353 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x82A5B1AA EQ PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C895AFF GT PUSH2 0x227 JUMPI DUP1 PUSH4 0x4CD5491C GT PUSH2 0x1DB JUMPI DUP1 PUSH4 0x6AD9F9DF GT PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x6AD9F9DF EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0x78767D70 EQ PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4CD5491C EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x351B14A0 GT PUSH2 0x20C JUMPI DUP1 PUSH4 0x351B14A0 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x429E2C1A EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x4B8A3529 EQ PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C895AFF EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x30941E62 EQ PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D81944F GT PUSH2 0x27E JUMPI DUP1 PUSH4 0x249D39E9 GT PUSH2 0x263 JUMPI DUP1 PUSH4 0x249D39E9 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x25D07A95 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x2B83CCCD EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D81944F EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x22867D78 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF342EE9 GT PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF342EE9 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x1880B981 EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD30320E EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD8459FE EQ PUSH2 0x2ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FFD JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x4086 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x4123 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x423B JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH3 0x186A0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0xD74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x429C JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x42CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x43CA JUMP JUMPDEST PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x4438 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x53F CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x12FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x585 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x14DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4490 JUMP JUMPDEST PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x18F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x1A7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x680 CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0x1BBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D3 PUSH2 0x6A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x43CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x453B JUMP JUMPDEST PUSH2 0x1C07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x73F CALLDATASIZE PUSH1 0x4 PUSH2 0x43CA JUMP JUMPDEST PUSH2 0x218E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x75F CALLDATASIZE PUSH1 0x4 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x21BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x585 PUSH2 0x77F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x21CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x79F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x21FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x7BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4586 JUMP JUMPDEST PUSH2 0x221D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x7DF CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x2653 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH3 0x201480 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x26A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x836 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x2750 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x585 PUSH2 0x856 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x27E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x876 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FFD JUMP JUMPDEST PUSH2 0x2811 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x905 PUSH2 0x896 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 DUP3 MSTORE DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD SWAP3 DUP4 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x953 PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x333 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x980 DUP5 PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x77C7BECFAD752FE6EE0143187438B002E564C671AABFD4B3B3C4343A2E79524 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xA49 DUP6 PUSH2 0x28C2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA9E SWAP2 DUP6 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xAE5 SWAP2 DUP6 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x2E4A JUMP JUMPDEST PUSH2 0xB04 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2EA4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x2E4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x59617E84CD4A4D47C34C76F190DA73D3A6A0236E0770DCBA41851DB53F336F57 SWAP1 PUSH2 0xB89 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xF0158690F9B0F41FC31E96038D36F6B6517557EBE2D3202408966EF3C616F5B6 SWAP2 ADD PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xBFA DUP3 PUSH2 0x28C2 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 MSTORE PUSH1 0x3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP5 POP SWAP2 SWAP3 POP PUSH2 0xC58 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP4 EQ DUP1 PUSH2 0xC69 JUMPI POP DUP2 DUP2 GT JUMPDEST ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 DUP3 ADD MSTORE DUP2 SWAP1 PUSH2 0xCB0 SWAP1 DUP3 PUSH1 0x1 PUSH2 0x3186 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0xCC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP7 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 DUP2 AND SWAP1 SWAP2 SUB SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 DUP10 AND SWAP1 SWAP2 SUB SWAP1 SSTORE CALLER DUP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 DUP8 SUB PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xE4A1AE657F49CB1FB1C7D3A94AE6093565C4C8C0E03DE488F79C377C3C3A24E0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD80 DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD96 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDA5 DUP3 PUSH1 0x12 PUSH2 0x4624 JUMP JUMPDEST PUSH2 0xDB0 SWAP1 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0xDBA SWAP1 DUP7 PUSH2 0x4730 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xDCF DUP5 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDF0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x33AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE1A JUMPI PUSH2 0xE1A PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xE3A DUP7 DUP4 PUSH2 0x218E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 PUSH2 0xE4D DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH2 0xE59 DUP2 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0xE63 SWAP1 DUP8 PUSH2 0x477F JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xDFD JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE80 PUSH2 0x3EDA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP5 MSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE PUSH1 0x2 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP2 DUP9 ADD MSTORE DUP5 DUP8 ADD MSTORE DUP8 MLOAD PUSH2 0x140 DUP2 ADD DUP10 MSTORE PUSH1 0x4 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP9 DUP4 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH9 0x10000000000000000 DUP1 DUP3 DIV DUP10 AND DUP4 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP11 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP3 SWAP1 DIV DUP10 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP8 DUP7 ADD SLOAD DUP1 DUP9 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP4 DIV DUP7 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP3 DIV DUP6 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP3 AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0xFA8 SWAP1 PUSH2 0x3627 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFBC DUP4 DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79F151F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFE4 DUP5 PUSH2 0x26A6 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xFF8 DUP6 PUSH2 0x1457 JUMP JUMPDEST LT ISZERO DUP1 PUSH2 0x1004 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6560982D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE PUSH2 0x10A4 PUSH3 0x15180 TIMESTAMP PUSH2 0x477F JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x2D2541220F1C874DAE8D6FA2DC8987E584CA7EFEDE079594DE6066330745DAA5 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1141 DUP3 PUSH2 0x3634 JUMP JUMPDEST PUSH2 0x114B DUP3 DUP3 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1171 DUP3 PUSH2 0x28C2 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x11B5 SWAP1 DUP4 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x11EE SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x1227 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1262 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x127D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS CALLER DUP6 PUSH2 0x31D4 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x128F CALLER PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xC1561B330E73FAA7D5D1AC03C968D8F359B0191CCDB9CC002CF7D8EB6AE038CB SWAP1 PUSH1 0x80 ADD PUSH2 0xA2D JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x130D DUP5 PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x132C JUMPI PUSH1 0x40 MLOAD PUSH4 0x30AF2D67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x49C49B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x606F9EA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x1401 SWAP1 PUSH2 0x12C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x477F JUMP JUMPDEST TIMESTAMP GT ISZERO DUP1 ISZERO PUSH2 0x141A JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH32 0x728E956900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1466 DUP6 PUSH2 0x2896 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x1479 DUP4 DUP6 PUSH2 0x477F JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 SUB PUSH2 0x1496 JUMPI PUSH2 0xDD9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH2 0x4730 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x14A9 PUSH3 0x13880 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x14C8 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14E5 PUSH2 0x2E4A JUMP JUMPDEST PUSH2 0x14EF PUSH1 0x0 PUSH2 0x3750 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 SWAP1 SUB PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x521299A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP4 EQ PUSH2 0x1533 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB7C1140D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x154F JUMPI PUSH2 0x154F PUSH2 0x40F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1578 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x15B0 DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x159B JUMPI PUSH2 0x159B PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x79F SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x0 SUB PUSH2 0x161C JUMPI DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0x15C9 JUMPI PUSH2 0x15C9 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7C154F8900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1664 DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x1631 JUMPI PUSH2 0x1631 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x1658 JUMPI PUSH2 0x1658 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1BBC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x16D8 ADDRESS DUP12 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1699 JUMPI PUSH2 0x1699 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x16B2 JUMPI PUSH2 0x16B2 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16C7 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x157E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x64573D0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x64573D02 SWAP1 PUSH2 0x1734 SWAP1 CALLER SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP10 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1753 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1777 SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST PUSH2 0x17AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xFD5EAD8000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x17CB JUMPI PUSH2 0x17CB PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x17E5 JUMPI PUSH2 0x17E5 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP PUSH2 0x1810 DUP12 ADDRESS DUP5 DUP14 DUP14 DUP7 DUP2 DUP2 LT PUSH2 0x16B2 JUMPI PUSH2 0x16B2 PUSH2 0x4769 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1822 JUMPI PUSH2 0x1822 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x6 PUSH1 0x0 DUP13 DUP13 DUP6 DUP2 DUP2 LT PUSH2 0x1849 JUMPI PUSH2 0x1849 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x185E SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x17B1 JUMP JUMPDEST POP PUSH32 0x76F226D30806B7B34CF90AE0330C53DF665A4127510985A1A3958387039B9D75 CALLER DUP11 DUP11 DUP11 DUP11 DUP8 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x18DE SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18FB DUP4 PUSH2 0x3634 JUMP JUMPDEST PUSH2 0x1904 DUP4 PUSH2 0x37A0 JUMP JUMPDEST PUSH2 0x190D DUP4 PUSH2 0x28C2 JUMP JUMPDEST POP PUSH2 0x1927 SWAP3 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1964 SWAP1 DUP5 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x198A JUMPI PUSH1 0x40 MLOAD PUSH4 0x28AC9B3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 PUSH2 0x19BE SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND SWAP3 SWAP1 PUSH2 0x19F4 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1A2C SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 SWAP1 PUSH1 0x80 ADD PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x1A8A CALLER DUP5 DUP5 DUP5 PUSH2 0x37F9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A9C CALLER PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x1ABB JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xA766742A23FE9ECBD32C553CD9AD3115B2D15C6B72CD5E95858F5A911D55CB45 SWAP1 PUSH1 0x80 ADD PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B31 JUMPI PUSH2 0x1B31 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 MSTORE PUSH1 0x3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 POP PUSH2 0x1B93 SWAP2 DUP4 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BB2 JUMPI PUSH2 0x1BA5 DUP3 DUP3 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x1BAF SWAP1 DUP7 PUSH2 0x477F JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH3 0x186A0 SWAP1 PUSH2 0x1BFD SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER SUB PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44511AF100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C54 DUP6 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x1C7E JUMPI PUSH1 0x40 MLOAD PUSH4 0x30AF2D67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 ISZERO DUP1 PUSH2 0x1CBC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1CC9 JUMPI POP POP POP PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1D0A SWAP1 DUP4 PUSH1 0x1 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xC7D713B49DA0000 DUP6 LT ISZERO PUSH2 0x1D24 JUMPI DUP2 PUSH2 0x1D3E JUMP JUMPDEST PUSH3 0x186A0 PUSH2 0x1D34 PUSH2 0xC350 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1D3E SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 GT PUSH2 0x1D4D JUMPI DUP6 PUSH2 0x1D4F JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP8 POP SWAP3 POP DUP3 SWAP2 POP DUP10 SWAP1 DUP9 SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP6 SWAP1 PUSH2 0x1D9E SWAP1 DUP11 DUP4 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DAB DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DB8 DUP7 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DCE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DE4 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF1 DUP2 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x1DFB SWAP1 DUP6 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E06 DUP4 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x1E10 DUP6 DUP10 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E1A SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E24 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP11 POP PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x1E38 PUSH2 0x1388 DUP15 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E42 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP6 DUP13 GT ISZERO PUSH2 0x1E9A JUMPI DUP6 SWAP12 POP DUP3 PUSH1 0xA PUSH2 0x1E5C SWAP2 SWAP1 PUSH2 0x4721 JUMP JUMPDEST DUP5 PUSH2 0x1E68 DUP5 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x1E72 DUP9 DUP11 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH2 0x1E90 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST SWAP11 POP DUP7 SWAP16 POP PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA6 DUP14 DUP9 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x1EB5 JUMPI DUP2 PUSH2 0x1EB7 JUMP JUMPDEST DUP1 JUMPDEST SWAP12 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1EFB SWAP1 DUP10 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1F34 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND SWAP3 SWAP1 PUSH2 0x1F6D SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1FBE DUP14 DUP16 PUSH2 0x1F85 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1FF7 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2007 SWAP1 POP DUP14 DUP16 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x203C SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP16 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x2084 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP15 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 PUSH2 0x20C9 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x20FF ADDRESS CALLER DUP4 DUP6 PUSH2 0x20ED SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP3 SWAP2 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH2 0x2120 ADDRESS CALLER PUSH2 0x210E DUP5 DUP7 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP3 SWAP2 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH32 0xFCBC974BF3A532BAF2BB229DB3C37FD58299B62D2D1DB6A855DAC5B693BB6FF3 DUP10 CALLER DUP9 PUSH2 0x214E DUP6 DUP8 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0xFA8 SWAP1 PUSH2 0x38D8 JUMP JUMPDEST PUSH2 0xDF0 DUP4 DUP4 DUP4 PUSH1 0x0 PUSH2 0x33AB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xFAB JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2209 DUP3 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x2215 JUMPI PUSH1 0x0 NOT PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x223F JUMPI PUSH1 0x40 MLOAD PUSH4 0x521299A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 EQ PUSH2 0x225F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB7C1140D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x226A DUP8 DUP8 DUP8 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2275 DUP9 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2282 DUP9 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP2 DUP1 DUP1 DUP1 JUMPDEST DUP11 DUP2 LT ISZERO PUSH2 0x2414 JUMPI DUP12 DUP12 DUP3 DUP2 DUP2 LT PUSH2 0x22A6 JUMPI PUSH2 0x22A6 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22BB SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST SWAP4 POP DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0x22CF JUMPI PUSH2 0x22CF PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP3 POP PUSH2 0x22E1 DUP5 PUSH2 0x28C2 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x2324 SWAP2 POP DUP5 PUSH1 0x1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x233B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP7 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x236F SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND SWAP3 SWAP1 PUSH2 0x23A8 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x23F0 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2400 SWAP1 POP DUP5 DUP5 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x240A SWAP1 DUP8 PUSH2 0x477F JUMP JUMPDEST SWAP6 POP PUSH1 0x1 ADD PUSH2 0x228C JUMP JUMPDEST POP DUP6 DUP8 GT DUP1 ISZERO PUSH2 0x243C JUMPI POP PUSH3 0x186A0 PUSH2 0x242F PUSH2 0xC350 DUP9 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2439 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x2473 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF67D9A2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP3 POP DUP13 SWAP2 POP DUP3 SWAP1 POP PUSH3 0x186A0 PUSH2 0x248E PUSH2 0x2710 DUP3 PUSH2 0x477F JUMP JUMPDEST PUSH2 0x2498 SWAP1 DUP7 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x24A2 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH2 0x24AE DUP2 DUP7 PUSH2 0x48AA JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x24C6 JUMPI PUSH2 0x24C6 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x24E9 DUP2 CALLER ADDRESS DUP8 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2526 SWAP1 DUP7 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x255F SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND SWAP3 SWAP1 PUSH2 0x2595 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x25D1 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x25E8 DUP12 CALLER DUP13 DUP13 PUSH2 0x37F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x7CD35FF79D73D5AF7CB402EAAC9792D8B3D32B685B221CD81C3D5611C8327FD0 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2682 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xAE8 DUP2 PUSH2 0x38E2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x26CB JUMPI PUSH2 0x26CB PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 POP PUSH2 0x2727 SWAP2 DUP4 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2746 JUMPI PUSH2 0x2739 DUP3 DUP3 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x2743 SWAP1 DUP7 PUSH2 0x477F JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x2758 PUSH2 0x2E4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x27D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x27DD DUP2 PUSH2 0x3750 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0xAE5 SWAP1 DUP4 PUSH2 0x39E5 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2856 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA9E SWAP2 DUP6 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xAE5 SWAP2 DUP6 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x28A4 DUP5 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x28AF DUP5 PUSH2 0xDF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BA DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 SWAP5 SWAP2 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP5 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH1 0x2 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP2 DUP10 ADD MSTORE DUP5 DUP9 ADD MSTORE DUP6 MLOAD PUSH2 0x140 DUP2 ADD DUP8 MSTORE PUSH1 0x4 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP10 DUP4 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH9 0x10000000000000000 DUP1 DUP3 DIV DUP11 AND DUP4 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP12 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP3 SWAP1 DIV DUP11 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP9 DUP7 ADD SLOAD DUP1 DUP10 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP4 DIV DUP8 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP3 DIV DUP7 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP6 SWAP1 DIV SWAP1 SWAP4 AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD MLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP3 SUB PUSH2 0x29DB JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP2 ADD MLOAD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SUB PUSH2 0x2A04 JUMPI PUSH1 0x60 ADD MLOAD SWAP2 POP PUSH2 0xA52 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD MLOAD ADD MLOAD ISZERO DUP1 PUSH2 0x2A1C JUMPI POP PUSH2 0x2A1C DUP8 PUSH2 0x21CB JUMP JUMPDEST ISZERO PUSH2 0x2A45 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE NUMBER AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND NUMBER PUSH2 0x2A61 SWAP2 SWAP1 PUSH2 0x48AA JUMP JUMPDEST DUP4 MLOAD MLOAD PUSH1 0x20 DUP6 ADD MLOAD MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x2A83 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2A8D SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A9B DUP5 DUP4 PUSH2 0x39FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x60 DUP8 ADD MSTORE TIMESTAMP DUP2 AND PUSH1 0x80 DUP8 ADD MSTORE NUMBER DUP2 AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0xCFF294BC3695620876CE22EC38B97AAA07675B271C26A784EBEBA510E59B1F65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2B0E PUSH3 0x201480 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4730 JUMP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 PUSH2 0x2B31 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2B3B SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2B45 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP9 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x2B66 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 MSTORE POP DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND SWAP2 SWAP1 PUSH2 0x2B84 SWAP1 DUP4 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x2C52 JUMPI PUSH3 0x186A0 DUP5 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x2BC0 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2BCA SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST DUP6 MLOAD MLOAD SWAP1 SWAP9 POP PUSH2 0x2BDB SWAP1 DUP10 SWAP1 PUSH2 0x48AA JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2BEB SWAP1 DUP11 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2BF5 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP7 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x2C16 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 MSTORE POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP10 SWAP3 SWAP1 PUSH2 0x2C4C SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x60 DUP1 DUP6 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP13 SWAP1 MSTORE DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH32 0xF4FC4A63006144011C7214B4099772DE96603A49B426F18267C33B3C1EC35BED SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP9 MLOAD DUP1 MLOAD DUP3 SSTORE DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP9 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x2 DUP4 ADD SSTORE DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP8 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x4 DUP11 ADD SSTORE SWAP1 DUP2 ADD MLOAD PUSH1 0x5 DUP10 ADD DUP1 SLOAD SWAP5 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP6 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP9 DUP10 AND OR PUSH9 0x10000000000000000 SWAP4 DUP7 AND DUP5 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP4 DUP8 AND DUP5 MUL PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP9 AND DUP5 MUL OR SWAP1 SWAP6 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD SWAP8 DUP15 ADD DUP1 SLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH2 0x100 DUP12 ADD MLOAD SWAP12 DUP11 AND SWAP3 SWAP1 SWAP13 AND SWAP2 SWAP1 SWAP2 OR SWAP1 DUP9 AND SWAP1 SWAP6 MUL SWAP5 SWAP1 SWAP5 OR AND SWAP8 DUP6 AND SWAP1 SWAP2 MUL SWAP1 SWAP3 AND SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP2 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x120 ADD MLOAD PUSH1 0x7 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0x2DF5 JUMPI POP DUP2 PUSH2 0xAE8 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2E06 SWAP1 DUP6 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2E10 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x2E3A JUMPI POP PUSH1 0x20 DUP5 ADD MLOAD DUP5 MLOAD DUP5 SWAP2 SWAP1 PUSH2 0x2E2E SWAP1 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2E38 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE5 DUP2 PUSH1 0x1 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1051 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EBA JUMPI PUSH2 0x2EB5 DUP6 DUP6 DUP6 PUSH2 0x3ADA JUMP JUMPDEST PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x2EC3 DUP6 PUSH2 0x3D1A JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2ED7 JUMPI PUSH2 0x2ED7 PUSH2 0x48BD JUMP JUMPDEST SUB PUSH2 0xB04 JUMPI PUSH3 0x186A0 DUP3 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2F36 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5F7918ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1388 DUP3 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2F79 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x36E6824B PUSH1 0xE2 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1388 DUP3 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2FBC JUMPI PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 MLOAD PUSH4 0x36E6824B PUSH1 0xE2 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD SWAP1 DUP2 SSTORE SWAP3 DUP8 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD DUP10 DUP9 ADD MLOAD DUP5 AND PUSH9 0x10000000000000000 SWAP1 DUP2 MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SSTORE PUSH1 0x60 DUP9 ADD MLOAD SWAP5 DUP4 ADD DUP1 SLOAD PUSH1 0x80 DUP11 ADD MLOAD PUSH1 0xA0 DUP12 ADD MLOAD DUP6 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP7 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 SWAP1 SWAP7 AND SWAP1 SWAP5 MUL SWAP8 SWAP1 SWAP8 AND PUSH32 0xFFFFFFFFFFFFFFFF00000000000000000000000000000000FFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP3 SWAP1 SWAP3 OR SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x7 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0x7E914AF3D8D31AC64E6DF6E8087AC12953B11A1BCEEBF2A80692AA35E6B0E6FF SWAP1 PUSH2 0x3176 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP6 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP6 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 SUB PUSH2 0x319B JUMPI POP DUP2 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x31AC SWAP1 DUP6 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x31B6 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x2E3A JUMPI POP DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD DUP5 SWAP2 SWAP1 PUSH2 0x2E2E SWAP1 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SUB PUSH2 0x3279 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x324E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3272 SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST SWAP1 POP PUSH2 0x3310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x330D SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3387 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x48D3 JUMP JUMPDEST PUSH2 0x33B4 DUP5 PUSH2 0x28C2 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP3 POP SWAP1 POP DUP3 ISZERO PUSH2 0x3450 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 SWAP2 PUSH2 0x3425 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x3186 JUMP JUMPDEST SWAP5 POP DUP4 DUP6 LT ISZERO PUSH2 0x344B JUMPI PUSH1 0x40 MLOAD PUSH4 0x28AC9B3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x34B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x348D SWAP2 DUP8 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x34B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x28AC9B3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST DUP1 DUP3 LT DUP1 PUSH2 0x3528 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3502 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3526 SWAP2 SWAP1 PUSH2 0x48F6 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3546 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP10 AND SWAP1 SWAP2 SUB SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP12 AND SWAP1 SUB SWAP1 SSTORE CALLER DUP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE PUSH2 0x35A9 SWAP2 SWAP1 ADDRESS SWAP1 DUP9 PUSH2 0x31D4 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x35BB CALLER PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x35DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 SWAP1 PUSH1 0x80 ADD PUSH2 0x3176 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAE8 DUP4 PUSH2 0x3D84 JUMP JUMPDEST PUSH2 0x363D DUP2 PUSH2 0x21CB JUMP JUMPDEST ISZERO PUSH2 0x27DD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB187BD2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SLOAD DUP3 SWAP2 PUSH3 0x186A0 SWAP2 PUSH2 0x36A4 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x36AE SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3748 JUMPI POP PUSH2 0x36DD DUP4 DUP3 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3745 SWAP2 SWAP1 PUSH2 0x48F6 JUMP JUMPDEST LT ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3804 DUP5 DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH2 0x3821 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79F151F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH2 0x3850 SWAP1 DUP3 PUSH2 0x3DE0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x394C SWAP2 SWAP1 PUSH2 0x4929 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SGT ISZERO DUP1 PUSH2 0x3963 JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x3985 JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST DUP1 PUSH2 0x399A JUMPI POP PUSH2 0x1C20 PUSH2 0x3998 DUP4 TIMESTAMP PUSH2 0x48AA JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x39D0 JUMPI PUSH1 0x40 MLOAD PUSH31 0xBFC92100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39DB PUSH1 0xA DUP1 PUSH2 0x496D JUMP JUMPDEST PUSH2 0xDD9 SWAP1 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP3 DUP2 AND SWAP2 AND DUP4 DUP7 GT PUSH2 0x3A5A JUMPI PUSH1 0x0 DUP5 PUSH2 0x3A3C DUP5 DUP10 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x3A46 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A52 DUP2 DUP6 PUSH2 0x477F JUMP JUMPDEST SWAP6 POP POP PUSH2 0x3AD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A66 DUP6 DUP9 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3A7C DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x3A8E PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x3A98 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x3AAD DUP5 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x3AB7 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH2 0x3AC1 DUP6 DUP8 PUSH2 0x477F JUMP JUMPDEST PUSH2 0x3ACB SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP7 POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3706BA4900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B48 JUMPI PUSH2 0x3B48 PUSH2 0x48BD JUMP JUMPDEST GT ISZERO PUSH2 0x3B82 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4E00ADE000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x499B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE DUP4 SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BEB JUMPI PUSH2 0x3BEB PUSH2 0x48BD JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C48 JUMPI PUSH2 0x3C48 PUSH2 0x48BD JUMP JUMPDEST SUB PUSH2 0x3C9D JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH2 0x3CE9 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH32 0x20BA3738D0F69AD18E0A9923005003B1434FFC62C40AD3332D30D2D42C49EF42 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x49A9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3D4D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x27DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x7ACF489200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3DD4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3DC0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA8 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x3ED0 JUMPI PUSH1 0x0 PUSH2 0x3E0B PUSH1 0x1 DUP4 PUSH2 0x48AA JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3E1F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x3E84 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3E3F JUMPI PUSH2 0x3E3F PUSH2 0x4769 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3E62 JUMPI PUSH2 0x3E62 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x3E95 JUMPI PUSH2 0x3E95 PUSH2 0x49C6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F1A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD MSTORE SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FAB DUP5 PUSH2 0x3F71 JUMP JUMPDEST SWAP3 POP PUSH2 0x3FB9 PUSH1 0x20 DUP6 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA8 DUP3 PUSH2 0x3F71 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x27DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3F88 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x401B DUP5 PUSH2 0x3F71 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x4032 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x404F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x407F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x409E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40A7 DUP7 PUSH2 0x3F71 JUMP JUMPDEST SWAP5 POP PUSH2 0x40B5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40E4 DUP9 DUP3 DUP10 ADD PUSH2 0x403D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x160 DUP2 SLT ISZERO PUSH2 0x413D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4146 DUP8 PUSH2 0x3F71 JUMP JUMPDEST SWAP6 POP PUSH2 0x4154 PUSH1 0x20 DUP9 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x4168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0xE0 PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH2 0x417C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x41AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x41BD PUSH1 0x60 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x41CB PUSH1 0x80 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x41DC PUSH1 0xA0 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x41ED PUSH1 0xC0 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x41FE PUSH1 0xE0 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x4210 PUSH2 0x100 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x120 DUP8 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP2 POP PUSH2 0x422F PUSH2 0x140 DUP8 ADD PUSH2 0x3FF2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x424E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4257 DUP4 PUSH2 0x3F71 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4267 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x428E DUP4 PUSH2 0x3F71 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x42B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42BA DUP5 PUSH2 0x3F71 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD PUSH1 0x20 DUP4 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE SWAP1 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE POP PUSH1 0x40 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x100 PUSH2 0x4366 DUP2 DUP7 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD SWAP2 POP PUSH2 0x120 PUSH2 0x4385 DUP2 DUP8 ADD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD DUP2 AND PUSH2 0x160 DUP9 ADD MSTORE SWAP2 DUP5 ADD MLOAD SWAP1 SWAP2 AND PUSH2 0x180 DUP7 ADD MSTORE SWAP1 SWAP2 ADD MLOAD PUSH2 0x1A0 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43E6 DUP4 PUSH2 0x3F71 JUMP JUMPDEST SWAP2 POP PUSH2 0x43F4 PUSH1 0x20 DUP5 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x442D JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4411 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x445D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x407F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x44AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44B4 DUP9 PUSH2 0x3F71 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x44D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44DD DUP12 DUP4 DUP13 ADD PUSH2 0x444B JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x44F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4502 DUP12 DUP4 DUP13 ADD PUSH2 0x444B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x451B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4528 DUP11 DUP3 DUP12 ADD PUSH2 0x403D JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x455A DUP6 PUSH2 0x3F71 JUMP JUMPDEST SWAP4 POP PUSH2 0x4568 PUSH1 0x20 DUP7 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP3 POP PUSH2 0x4576 PUSH1 0x40 DUP7 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x45A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45AA DUP9 PUSH2 0x3F71 JUMP JUMPDEST SWAP7 POP PUSH2 0x45B8 PUSH1 0x20 DUP10 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x45DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45E8 DUP12 DUP4 DUP13 ADD PUSH2 0x444B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4528 DUP11 DUP3 DUP12 ADD PUSH2 0x444B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4678 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x465E JUMPI PUSH2 0x465E PUSH2 0x460E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x466B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4642 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x468F JUMPI POP PUSH1 0x1 PUSH2 0xFAB JUMP JUMPDEST DUP2 PUSH2 0x469C JUMPI POP PUSH1 0x0 PUSH2 0xFAB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x46B2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x46BC JUMPI PUSH2 0x46D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xFAB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x46CD JUMPI PUSH2 0x46CD PUSH2 0x460E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xFAB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x46FB JUMPI POP DUP2 DUP2 EXP PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x4705 DUP4 DUP4 PUSH2 0x463D JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4719 JUMPI PUSH2 0x4719 PUSH2 0x460E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4680 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4764 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP11 SWAP2 PUSH1 0xC0 DUP6 ADD DUP5 JUMPDEST DUP13 DUP2 LT ISZERO PUSH2 0x4808 JUMPI DUP4 PUSH2 0x47F5 DUP7 PUSH2 0x3F71 JUMP JUMPDEST AND DUP3 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x47E3 JUMP JUMPDEST POP DUP6 DUP2 SUB PUSH1 0x40 DUP8 ADD MSTORE DUP10 DUP2 MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 GT ISZERO PUSH2 0x4841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x5 SHL SWAP4 POP DUP4 DUP12 DUP4 DUP4 ADD CALLDATACOPY SWAP1 SWAP3 ADD DUP5 DUP2 SUB DUP4 ADD PUSH1 0x60 DUP7 ADD MSTORE SWAP2 PUSH2 0x4867 DUP2 DUP5 ADD DUP10 PUSH2 0x43FD JUMP JUMPDEST SWAP3 POP POP POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x487E DUP2 DUP6 DUP8 PUSH2 0x4792 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x489F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAE8 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x494A DUP7 PUSH2 0x490F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x422F PUSH1 0x80 DUP8 ADD PUSH2 0x490F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA8 DUP4 DUP4 PUSH2 0x4680 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4997 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xFAB DUP3 DUP5 PUSH2 0x4979 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0xAE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4979 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x15512FD904E89D9FC5C3F4F5B1EF0B SWAP8 SAR SMOD SWAP1 0x4B 0xD6 0x4C LOG0 JUMP PUSH1 0x9E EXTCODEHASH PUSH27 0x8CBD7464736F6C6343000814003300000000000000000000000000 ","sourceMap":"552:29389:16:-:0;;;147:31:26;;;-1:-1:-1;;;;147:31:26;-1:-1:-1;;;147:31:26;;;3394:308:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;735:10:9;936:18:1;:32::i;:::-;3541:154:16;3566:10;3590:12;3616:23;3653:14;3681:4;3541:11;:154::i;:::-;3394:308;;;552:29389;;2426:187:1;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;28595:1339:16:-;28808:8;28804:186;;;28832:46;28850:5;28857:9;28868;28832:17;:46::i;:::-;28804:186;;;28962:17;28973:5;28962:10;:17::i;:::-;29016:23;29003:9;:36;;;;;;;;:::i;:::-;;28999:929;;122:3:25;29059:6:16;:19;;;-1:-1:-1;;;;;29059:25:16;;29055:94;;;29129:19;;29109:40;;-1:-1:-1;;;29109:40:16;;-1:-1:-1;;;;;1980:31:27;;;29109:40:16;;;1962:50:27;1935:18;;29109:40:16;;;;;;;;29055:94;926:5:25;29167:6:16;:24;;;-1:-1:-1;;;;;29167:43:16;;29163:112;;;29250:24;;;;29235:40;;-1:-1:-1;;;29235:40:16;;-1:-1:-1;;;;;1980:31:27;;;29235:40:16;;;1962:50:27;1935:18;;29235:40:16;1817:201:27;29163:112:16;926:5:25;29292:6:16;:19;;;-1:-1:-1;;;;;29292:38:16;;29289:101;;;29370:19;;;;;29355:35;;-1:-1:-1;;;29355:35:16;;-1:-1:-1;;;;;1980:31:27;;;29355:35:16;;;1962:50:27;1935:18;;29355:35:16;1817:201:27;29289:101:16;-1:-1:-1;;;;;29443:13:16;;29404:36;29443:13;;;:6;:13;;;;;;;;;29506:19;;-1:-1:-1;;;;;29480:45:16;;;29443:23;;;29480:45;;;29570:24;;;;29539:28;;;:55;;29634:19;;;;29608:45;;;;;;-1:-1:-1;;;;;;29608:45:16;;;29539:55;;;29608:45;;;;;;;29689:15;;;;29667:19;;;:37;;29738:13;;;;29785;;;;29765:33;;-1:-1:-1;;;29765:33:16;-1:-1:-1;;;;;29718:33:16;;;-1:-1:-1;;;29718:33:16;-1:-1:-1;;;;;;;;29667:37:16;;;;;;;29718:33;;;;-1:-1:-1;;;;;;;;29718:33:16;;;;;;;;29765;;;;;;;;;;;29844:25;;;;29812:29;;;;:57;;;;29889:28;;;;;;29450:5;;29506:6;;2221:4:27;2263:3;2252:9;2248:19;2240:27;;2323:1;2319;2314:3;2310:11;2306:19;2298:6;2294:32;2283:9;2276:51;2362:1;2358;2354:2;2350:10;2346:18;2419:2;2410:6;2404:13;2400:22;2395:2;2384:9;2380:18;2373:50;2487:2;2481;2473:6;2469:15;2463:22;2459:31;2454:2;2443:9;2439:18;2432:59;2555:2;2549;2541:6;2537:15;2531:22;2527:31;2522:2;2511:9;2507:18;2500:59;2624:2;2618;2610:6;2606:15;2600:22;2596:31;2590:3;2579:9;2575:19;2568:60;2694:2;2687:3;2679:6;2675:16;2669:23;2665:32;2659:3;2648:9;2644:19;2637:61;2764:2;2757:3;2749:6;2745:16;2739:23;2735:32;2729:3;2718:9;2714:19;2707:61;;2823:3;2815:6;2811:16;2805:23;2799:3;2788:9;2784:19;2777:52;2023:812;;;;;;29889:28:16;;;;;;;;29041:887;28999:929;28595:1339;;;;;:::o;687:647:18:-;-1:-1:-1;;;;;830:21:18;;;;;;:14;:21;;;;;:31;-1:-1:-1;;;830:31:18;;;;826:62;;;870:18;;-1:-1:-1;;;870:18:18;;;;;;;;;;;826:62;920:1;907:9;902:15;;;;;;;;:::i;:::-;:19;898:59;;;947:9;930:27;;-1:-1:-1;;;930:27:18;;;;;;;;:::i;898:59::-;-1:-1:-1;;;;;968:21:18;;;;;;;:14;:21;;;;;:46;;;;;-1:-1:-1;;;;;;968:46:18;;;;;;1058:9;;-1:-1:-1;;;;;;1024:43:18;;-1:-1:-1;;;1058:9:18;968:46;1024:43;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1077:21:18;;;;;;:14;:21;;;;;:38;;-1:-1:-1;;;;1077:38:18;-1:-1:-1;;;1077:38:18;;;1111:4;1130:9;:37;;;;;;;;:::i;:::-;;1126:151;;1183:13;:25;;;;;;;-1:-1:-1;1183:25:18;;;;;;;;-1:-1:-1;;;;;;1183:25:18;-1:-1:-1;;;;;1183:25:18;;;;;1126:151;;;1239:15;:27;;;;;;;-1:-1:-1;1239:27:18;;;;;;;;-1:-1:-1;;;;;;1239:27:18;-1:-1:-1;;;;;1239:27:18;;;;;1126:151;1292:35;1310:5;1317:9;1292:35;;;;;;;:::i;:::-;;;;;;;;687:647;;;:::o;381:128:26:-;445:12;;-1:-1:-1;;;445:12:26;;;;444:13;:36;;;;-1:-1:-1;;;;;;462:18:26;;;;;;:11;:18;;;;;;;;461:19;444:36;440:62;;;489:13;;-1:-1:-1;;;489:13:26;;;;;;;;;;;440:62;381:128;:::o;14:177:27:-;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:175::-;274:13;;-1:-1:-1;;;;;316:30:27;;306:41;;296:69;;361:1;358;351:12;376:1304;503:6;511;519;563:9;554:7;550:23;593:3;589:2;585:12;582:32;;;610:1;607;600:12;582:32;633:40;663:9;633:40;:::i;:::-;623:50;;692:49;737:2;726:9;722:18;692:49;:::i;:::-;682:59;-1:-1:-1;775:4:27;-1:-1:-1;;757:16:27;;753:27;750:47;;;793:1;790;783:12;750:47;-1:-1:-1;826:2:27;820:9;868:4;856:17;;-1:-1:-1;;;;;888:34:27;;924:22;;;885:62;882:185;;;989:10;984:3;980:20;977:1;970:31;1024:4;1021:1;1014:15;1052:4;1049:1;1042:15;882:185;1087:10;1083:2;1076:22;;1122:48;1166:2;1155:9;1151:18;1122:48;:::i;:::-;1114:6;1107:64;1204:48;1248:2;1237:9;1233:18;1204:48;:::i;:::-;1199:2;1191:6;1187:15;1180:73;1286:49;1330:3;1319:9;1315:19;1286:49;:::i;:::-;1281:2;1273:6;1269:15;1262:74;1369:49;1413:3;1402:9;1398:19;1369:49;:::i;:::-;1364:2;1356:6;1352:15;1345:74;1453:49;1497:3;1486:9;1482:19;1453:49;:::i;:::-;1447:3;1439:6;1435:16;1428:75;1537:50;1581:4;1570:9;1566:20;1537:50;:::i;:::-;1531:3;1519:16;;1512:76;1643:3;1628:19;;;;1622:26;1616:3;1604:16;;1597:52;-1:-1:-1;376:1304:27;;;;-1:-1:-1;376:1304:27:o;1685:127::-;1746:10;1741:3;1737:20;1734:1;1727:31;1777:4;1774:1;1767:15;1801:4;1798:1;1791:15;2840:237;2921:1;2914:5;2911:12;2901:143;;2966:10;2961:3;2957:20;2954:1;2947:31;3001:4;2998:1;2991:15;3029:4;3026:1;3019:15;2901:143;3053:18;;2840:237::o;3082:208::-;3228:2;3213:18;;3240:44;3217:9;3266:6;3240:44;:::i;:::-;3082:208;;;;:::o;3295:305::-;-1:-1:-1;;;;;3499:32:27;;3481:51;;3469:2;3454:18;;3541:53;3590:2;3575:18;;3567:6;3541:53;:::i;:::-;3295:305;;;;;:::o;:::-;552:29389:16;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BLOCKS_PER_YEAR_7304":{"entryPoint":null,"id":7304,"parameterSlots":0,"returnSlots":0},"@BPS_7268":{"entryPoint":null,"id":7268,"parameterSlots":0,"returnSlots":0},"@PRECISION_7271":{"entryPoint":null,"id":7271,"parameterSlots":0,"returnSlots":0},"@WhenNotPaused_7361":{"entryPoint":13876,"id":7361,"parameterSlots":1,"returnSlots":0},"@WhenPaused_7348":{"entryPoint":15642,"id":7348,"parameterSlots":1,"returnSlots":0},"@_accuredInterest_6324":{"entryPoint":10434,"id":6324,"parameterSlots":1,"returnSlots":4},"@_checkOwner_100":{"entryPoint":11850,"id":100,"parameterSlots":0,"returnSlots":0},"@_contains_3207":{"entryPoint":null,"id":3207,"parameterSlots":2,"returnSlots":1},"@_length_3221":{"entryPoint":null,"id":3221,"parameterSlots":1,"returnSlots":1},"@_msgSender_1583":{"entryPoint":null,"id":1583,"parameterSlots":0,"returnSlots":1},"@_remove_3188":{"entryPoint":null,"id":3188,"parameterSlots":2,"returnSlots":1},"@_setupVault_6455":{"entryPoint":11940,"id":6455,"parameterSlots":5,"returnSlots":0},"@_transferOwnership_157":{"entryPoint":14160,"id":157,"parameterSlots":1,"returnSlots":0},"@_values_3252":{"entryPoint":15748,"id":3252,"parameterSlots":1,"returnSlots":1},"@_withdrawNft_6559":{"entryPoint":14329,"id":6559,"parameterSlots":4,"returnSlots":0},"@_withdraw_6045":{"entryPoint":13227,"id":6045,"parameterSlots":4,"returnSlots":0},"@accureInterest_4818":{"entryPoint":2618,"id":4818,"parameterSlots":1,"returnSlots":4},"@addSupportedToken_6752":{"entryPoint":15066,"id":6752,"parameterSlots":3,"returnSlots":0},"@allowedToken_6799":{"entryPoint":14240,"id":6799,"parameterSlots":1,"returnSlots":0},"@amountToShares_5725":{"entryPoint":2649,"id":5725,"parameterSlots":3,"returnSlots":1},"@borrow_4116":{"entryPoint":4408,"id":4116,"parameterSlots":2,"returnSlots":0},"@canLiquidateNFT_5320":{"entryPoint":4859,"id":5320,"parameterSlots":3,"returnSlots":0},"@contains_3597":{"entryPoint":14821,"id":3597,"parameterSlots":2,"returnSlots":1},"@depositNft_4854":{"entryPoint":6782,"id":4854,"parameterSlots":3,"returnSlots":0},"@executeNFTLiquidation_5251":{"entryPoint":8733,"id":5251,"parameterSlots":7,"returnSlots":0},"@flashloanFee_5811":{"entryPoint":7100,"id":5811,"parameterSlots":2,"returnSlots":1},"@flashloan_4800":{"entryPoint":5361,"id":4800,"parameterSlots":7,"returnSlots":0},"@getAmountInUSD_5645":{"entryPoint":3444,"id":5645,"parameterSlots":2,"returnSlots":1},"@getDepositedNFTCount_6617":{"entryPoint":8590,"id":6617,"parameterSlots":2,"returnSlots":1},"@getDepositedNFT_6599":{"entryPoint":3959,"id":6599,"parameterSlots":2,"returnSlots":1},"@getInterestRate_7148":{"entryPoint":14845,"id":7148,"parameterSlots":2,"returnSlots":1},"@getNFTLiquidationWarning_5681":{"entryPoint":null,"id":5681,"parameterSlots":3,"returnSlots":1},"@getPrice_6963":{"entryPoint":14562,"id":6963,"parameterSlots":1,"returnSlots":1},"@getTokenPrice_6784":{"entryPoint":9811,"id":6784,"parameterSlots":1,"returnSlots":1},"@getTokenVault_5660":{"entryPoint":3704,"id":5660,"parameterSlots":1,"returnSlots":1},"@getUserData_5350":{"entryPoint":10390,"id":5350,"parameterSlots":1,"returnSlots":3},"@getUserNFTCollateral_5464":{"entryPoint":3573,"id":5464,"parameterSlots":1,"returnSlots":1},"@getUserTokenCollateralAndBorrow_5553":{"entryPoint":null,"id":5553,"parameterSlots":2,"returnSlots":2},"@getUserTotalBorrow_5523":{"entryPoint":6924,"id":5523,"parameterSlots":1,"returnSlots":1},"@getUserTotalTokenCollateral_5409":{"entryPoint":9894,"id":5409,"parameterSlots":1,"returnSlots":1},"@globalPaused_7313":{"entryPoint":null,"id":7313,"parameterSlots":0,"returnSlots":0},"@hasDepositedNFT_6580":{"entryPoint":10208,"id":6580,"parameterSlots":3,"returnSlots":1},"@healthFactor_5603":{"entryPoint":5207,"id":5603,"parameterSlots":1,"returnSlots":1},"@length_3612":{"entryPoint":14552,"id":3612,"parameterSlots":1,"returnSlots":1},"@liquidate_4620":{"entryPoint":7175,"id":4620,"parameterSlots":4,"returnSlots":0},"@maxFlashloan_5790":{"entryPoint":8702,"id":5790,"parameterSlots":1,"returnSlots":1},"@onERC721Received_6636":{"entryPoint":null,"id":6636,"parameterSlots":5,"returnSlots":1},"@owner_86":{"entryPoint":null,"id":86,"parameterSlots":0,"returnSlots":1},"@pausedStatus_7375":{"entryPoint":8651,"id":7375,"parameterSlots":1,"returnSlots":1},"@redeem_4266":{"entryPoint":3555,"id":4266,"parameterSlots":3,"returnSlots":0},"@remove_3576":{"entryPoint":15840,"id":3576,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":5341,"id":114,"parameterSlots":0,"returnSlots":0},"@repay_4232":{"entryPoint":3057,"id":4232,"parameterSlots":2,"returnSlots":0},"@setPausedStatus_7413":{"entryPoint":2827,"id":7413,"parameterSlots":2,"returnSlots":0},"@setupVault_5837":{"entryPoint":2799,"id":5837,"parameterSlots":5,"returnSlots":0},"@sharesToAmount_5769":{"entryPoint":10257,"id":5769,"parameterSlots":3,"returnSlots":1},"@stopNFTLiquidation_4970":{"entryPoint":2414,"id":4970,"parameterSlots":3,"returnSlots":0},"@supply_4018":{"entryPoint":6386,"id":4018,"parameterSlots":3,"returnSlots":0},"@toAmount_7262":{"entryPoint":12678,"id":7262,"parameterSlots":3,"returnSlots":1},"@toShares_7207":{"entryPoint":11747,"id":7207,"parameterSlots":3,"returnSlots":1},"@tokenDecimals_6998":{"entryPoint":13127,"id":6998,"parameterSlots":1,"returnSlots":1},"@transferERC20_7049":{"entryPoint":12756,"id":7049,"parameterSlots":4,"returnSlots":0},"@transferOwnership_137":{"entryPoint":10064,"id":137,"parameterSlots":1,"returnSlots":0},"@triggerNFTiquidation_4936":{"entryPoint":4017,"id":4936,"parameterSlots":3,"returnSlots":0},"@values_3663":{"entryPoint":13863,"id":3663,"parameterSlots":1,"returnSlots":1},"@vaultAboveReserveRatio_5888":{"entryPoint":13940,"id":5888,"parameterSlots":2,"returnSlots":1},"@withdraw_4249":{"entryPoint":8638,"id":4249,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":16241,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":17483,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool":{"entryPoint":16370,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":16445,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":16329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":17354,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_addresst_uint256":{"entryPoint":17723,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_enum$_TokenType_$6827t_struct$_VaultSetupParamemters_$6896_memory_ptrt_bool":{"entryPoint":16675,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":16269,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":17798,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":16518,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":17552,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_bool":{"entryPoint":16955,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":17010,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bool":{"entryPoint":16381,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":17052,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":18573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":18678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":18729,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":18643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint64":{"entryPoint":16651,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint80_fromMemory":{"entryPoint":18703,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":17405,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":18322,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_TokenType":{"entryPoint":18809,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_Vault":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_calldata_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":18363,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_enum$_TokenType_$6827__to_t_address_t_uint8__fromStack_reversed":{"entryPoint":18857,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__to_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_TokenType_$6827__to_t_uint8__fromStack_reversed":{"entryPoint":18843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_LiquidatedWarning_$6881_memory_ptr__to_t_struct$_LiquidatedWarning_$6881_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_TokenVault_$6855_memory_ptr__to_t_struct$_TokenVault_$6855_memory_ptr__fromStack_reversed":{"entryPoint":17103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint64__to_t_uint256_t_uint256_t_uint256_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint64__to_t_uint256_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint256_t_uint256_t_uint256__to_t_uint64_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_uint64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_t_uint256":{"entryPoint":18303,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":18247,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":17981,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":18797,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_t_uint256_t_uint8":{"entryPoint":18209,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":18048,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":18224,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18602,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":17956,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":17934,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":18621,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":18886,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18281,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":16629,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":16356,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25990:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:27","statements":[{"nodeType":"YulAssignment","src":"73:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:27"},"nodeType":"YulFunctionCall","src":"82:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:27"}]},{"body":{"nodeType":"YulBlock","src":"188:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:27"},"nodeType":"YulFunctionCall","src":"190:12:27"},"nodeType":"YulExpressionStatement","src":"190:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:27"},"nodeType":"YulFunctionCall","src":"131:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:27"},"nodeType":"YulFunctionCall","src":"121:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:27"},"nodeType":"YulFunctionCall","src":"114:73:27"},"nodeType":"YulIf","src":"111:93:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:27","type":""}],"src":"14:196:27"},{"body":{"nodeType":"YulBlock","src":"319:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"365:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"374:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"377:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"367:6:27"},"nodeType":"YulFunctionCall","src":"367:12:27"},"nodeType":"YulExpressionStatement","src":"367:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"340:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"336:3:27"},"nodeType":"YulFunctionCall","src":"336:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"361:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"332:3:27"},"nodeType":"YulFunctionCall","src":"332:32:27"},"nodeType":"YulIf","src":"329:52:27"},{"nodeType":"YulAssignment","src":"390:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"419:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"400:18:27"},"nodeType":"YulFunctionCall","src":"400:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"390:6:27"}]},{"nodeType":"YulAssignment","src":"438:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"471:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"482:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"467:3:27"},"nodeType":"YulFunctionCall","src":"467:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"448:18:27"},"nodeType":"YulFunctionCall","src":"448:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"438:6:27"}]},{"nodeType":"YulAssignment","src":"495:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"522:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"533:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"518:3:27"},"nodeType":"YulFunctionCall","src":"518:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"505:12:27"},"nodeType":"YulFunctionCall","src":"505:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"495:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"269:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"280:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"292:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"300:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"308:6:27","type":""}],"src":"215:328:27"},{"body":{"nodeType":"YulBlock","src":"618:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"664:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"673:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"676:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"666:6:27"},"nodeType":"YulFunctionCall","src":"666:12:27"},"nodeType":"YulExpressionStatement","src":"666:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"639:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"648:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"635:3:27"},"nodeType":"YulFunctionCall","src":"635:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"660:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"631:3:27"},"nodeType":"YulFunctionCall","src":"631:32:27"},"nodeType":"YulIf","src":"628:52:27"},{"nodeType":"YulAssignment","src":"689:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"699:18:27"},"nodeType":"YulFunctionCall","src":"699:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"689:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"584:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"595:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"607:6:27","type":""}],"src":"548:186:27"},{"body":{"nodeType":"YulBlock","src":"782:59:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"799:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"808:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"815:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"804:3:27"},"nodeType":"YulFunctionCall","src":"804:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"792:6:27"},"nodeType":"YulFunctionCall","src":"792:43:27"},"nodeType":"YulExpressionStatement","src":"792:43:27"}]},"name":"abi_encode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"766:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"773:3:27","type":""}],"src":"739:102:27"},{"body":{"nodeType":"YulBlock","src":"1029:231:27","statements":[{"nodeType":"YulAssignment","src":"1039:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1051:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1062:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:27"},"nodeType":"YulFunctionCall","src":"1047:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1039:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1093:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1075:6:27"},"nodeType":"YulFunctionCall","src":"1075:25:27"},"nodeType":"YulExpressionStatement","src":"1075:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1120:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1131:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1116:3:27"},"nodeType":"YulFunctionCall","src":"1116:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"1136:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1109:6:27"},"nodeType":"YulFunctionCall","src":"1109:34:27"},"nodeType":"YulExpressionStatement","src":"1109:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:27"},"nodeType":"YulFunctionCall","src":"1159:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"1179:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1152:6:27"},"nodeType":"YulFunctionCall","src":"1152:34:27"},"nodeType":"YulExpressionStatement","src":"1152:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1206:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1217:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1202:3:27"},"nodeType":"YulFunctionCall","src":"1202:18:27"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1226:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1234:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1222:3:27"},"nodeType":"YulFunctionCall","src":"1222:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1195:6:27"},"nodeType":"YulFunctionCall","src":"1195:59:27"},"nodeType":"YulExpressionStatement","src":"1195:59:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint64__to_t_uint256_t_uint256_t_uint256_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"974:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"985:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"993:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1001:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1009:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1020:4:27","type":""}],"src":"846:414:27"},{"body":{"nodeType":"YulBlock","src":"1307:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"1361:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1373:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1363:6:27"},"nodeType":"YulFunctionCall","src":"1363:12:27"},"nodeType":"YulExpressionStatement","src":"1363:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1330:5:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1351:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:27"},"nodeType":"YulFunctionCall","src":"1344:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1337:6:27"},"nodeType":"YulFunctionCall","src":"1337:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1327:2:27"},"nodeType":"YulFunctionCall","src":"1327:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1320:6:27"},"nodeType":"YulFunctionCall","src":"1320:40:27"},"nodeType":"YulIf","src":"1317:60:27"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1296:5:27","type":""}],"src":"1265:118:27"},{"body":{"nodeType":"YulBlock","src":"1434:82:27","statements":[{"nodeType":"YulAssignment","src":"1444:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1466:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1453:12:27"},"nodeType":"YulFunctionCall","src":"1453:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1444:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1504:5:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1482:21:27"},"nodeType":"YulFunctionCall","src":"1482:28:27"},"nodeType":"YulExpressionStatement","src":"1482:28:27"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1413:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1424:5:27","type":""}],"src":"1388:128:27"},{"body":{"nodeType":"YulBlock","src":"1622:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"1668:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1677:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1680:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1670:6:27"},"nodeType":"YulFunctionCall","src":"1670:12:27"},"nodeType":"YulExpressionStatement","src":"1670:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1643:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1652:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1639:3:27"},"nodeType":"YulFunctionCall","src":"1639:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1664:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1635:3:27"},"nodeType":"YulFunctionCall","src":"1635:32:27"},"nodeType":"YulIf","src":"1632:52:27"},{"nodeType":"YulAssignment","src":"1693:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1722:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1703:18:27"},"nodeType":"YulFunctionCall","src":"1703:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1693:6:27"}]},{"nodeType":"YulAssignment","src":"1741:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1768:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1779:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1764:3:27"},"nodeType":"YulFunctionCall","src":"1764:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1751:12:27"},"nodeType":"YulFunctionCall","src":"1751:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1741:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1792:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1822:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1833:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:27"},"nodeType":"YulFunctionCall","src":"1818:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1805:12:27"},"nodeType":"YulFunctionCall","src":"1805:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1796:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1868:5:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1846:21:27"},"nodeType":"YulFunctionCall","src":"1846:28:27"},"nodeType":"YulExpressionStatement","src":"1846:28:27"},{"nodeType":"YulAssignment","src":"1883:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"1893:5:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1883:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1572:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1583:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1595:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1603:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1611:6:27","type":""}],"src":"1521:383:27"},{"body":{"nodeType":"YulBlock","src":"2010:76:27","statements":[{"nodeType":"YulAssignment","src":"2020:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2032:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2043:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2028:3:27"},"nodeType":"YulFunctionCall","src":"2028:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2020:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2062:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"2073:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2055:6:27"},"nodeType":"YulFunctionCall","src":"2055:25:27"},"nodeType":"YulExpressionStatement","src":"2055:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1979:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1990:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2001:4:27","type":""}],"src":"1909:177:27"},{"body":{"nodeType":"YulBlock","src":"2163:275:27","statements":[{"body":{"nodeType":"YulBlock","src":"2212:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2221:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2224:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2214:6:27"},"nodeType":"YulFunctionCall","src":"2214:12:27"},"nodeType":"YulExpressionStatement","src":"2214:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2191:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2199:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2187:3:27"},"nodeType":"YulFunctionCall","src":"2187:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2206:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2183:3:27"},"nodeType":"YulFunctionCall","src":"2183:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2176:6:27"},"nodeType":"YulFunctionCall","src":"2176:35:27"},"nodeType":"YulIf","src":"2173:55:27"},{"nodeType":"YulAssignment","src":"2237:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2260:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2247:12:27"},"nodeType":"YulFunctionCall","src":"2247:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:27"}]},{"body":{"nodeType":"YulBlock","src":"2310:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2319:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2322:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2312:6:27"},"nodeType":"YulFunctionCall","src":"2312:12:27"},"nodeType":"YulExpressionStatement","src":"2312:12:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2282:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2290:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2279:2:27"},"nodeType":"YulFunctionCall","src":"2279:30:27"},"nodeType":"YulIf","src":"2276:50:27"},{"nodeType":"YulAssignment","src":"2335:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2351:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2359:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:27"},"nodeType":"YulFunctionCall","src":"2347:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2335:8:27"}]},{"body":{"nodeType":"YulBlock","src":"2416:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2425:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2428:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2418:6:27"},"nodeType":"YulFunctionCall","src":"2418:12:27"},"nodeType":"YulExpressionStatement","src":"2418:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2387:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"2395:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2383:3:27"},"nodeType":"YulFunctionCall","src":"2383:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"2404:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2379:3:27"},"nodeType":"YulFunctionCall","src":"2379:30:27"},{"name":"end","nodeType":"YulIdentifier","src":"2411:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2376:2:27"},"nodeType":"YulFunctionCall","src":"2376:39:27"},"nodeType":"YulIf","src":"2373:59:27"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2126:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2134:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2142:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"2152:6:27","type":""}],"src":"2091:347:27"},{"body":{"nodeType":"YulBlock","src":"2583:486:27","statements":[{"body":{"nodeType":"YulBlock","src":"2630:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2639:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2642:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2632:6:27"},"nodeType":"YulFunctionCall","src":"2632:12:27"},"nodeType":"YulExpressionStatement","src":"2632:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2604:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2613:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2600:3:27"},"nodeType":"YulFunctionCall","src":"2600:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2625:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2596:3:27"},"nodeType":"YulFunctionCall","src":"2596:33:27"},"nodeType":"YulIf","src":"2593:53:27"},{"nodeType":"YulAssignment","src":"2655:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2665:18:27"},"nodeType":"YulFunctionCall","src":"2665:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2655:6:27"}]},{"nodeType":"YulAssignment","src":"2703:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2736:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2747:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2732:3:27"},"nodeType":"YulFunctionCall","src":"2732:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2713:18:27"},"nodeType":"YulFunctionCall","src":"2713:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2703:6:27"}]},{"nodeType":"YulAssignment","src":"2760:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2787:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2798:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:27"},"nodeType":"YulFunctionCall","src":"2783:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2770:12:27"},"nodeType":"YulFunctionCall","src":"2770:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2760:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2811:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2842:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2853:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2838:3:27"},"nodeType":"YulFunctionCall","src":"2838:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2825:12:27"},"nodeType":"YulFunctionCall","src":"2825:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2815:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2900:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2909:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2912:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2902:6:27"},"nodeType":"YulFunctionCall","src":"2902:12:27"},"nodeType":"YulExpressionStatement","src":"2902:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2872:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2880:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2869:2:27"},"nodeType":"YulFunctionCall","src":"2869:30:27"},"nodeType":"YulIf","src":"2866:50:27"},{"nodeType":"YulVariableDeclaration","src":"2925:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2981:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2992:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2977:3:27"},"nodeType":"YulFunctionCall","src":"2977:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3001:7:27"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"2951:25:27"},"nodeType":"YulFunctionCall","src":"2951:58:27"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"2929:8:27","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"2939:8:27","type":""}]},{"nodeType":"YulAssignment","src":"3018:18:27","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"3028:8:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3018:6:27"}]},{"nodeType":"YulAssignment","src":"3045:18:27","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"3055:8:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3045:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2517:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2528:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2540:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2548:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2556:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2564:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2572:6:27","type":""}],"src":"2443:626:27"},{"body":{"nodeType":"YulBlock","src":"3173:149:27","statements":[{"nodeType":"YulAssignment","src":"3183:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3195:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3206:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3191:3:27"},"nodeType":"YulFunctionCall","src":"3191:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3183:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3225:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3240:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3248:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3236:3:27"},"nodeType":"YulFunctionCall","src":"3236:79:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3218:6:27"},"nodeType":"YulFunctionCall","src":"3218:98:27"},"nodeType":"YulExpressionStatement","src":"3218:98:27"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3142:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3153:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3164:4:27","type":""}],"src":"3074:248:27"},{"body":{"nodeType":"YulBlock","src":"3359:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3376:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3379:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3369:6:27"},"nodeType":"YulFunctionCall","src":"3369:88:27"},"nodeType":"YulExpressionStatement","src":"3369:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3473:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3476:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3466:6:27"},"nodeType":"YulFunctionCall","src":"3466:15:27"},"nodeType":"YulExpressionStatement","src":"3466:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3497:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3500:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3490:6:27"},"nodeType":"YulFunctionCall","src":"3490:15:27"},"nodeType":"YulExpressionStatement","src":"3490:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3327:184:27"},{"body":{"nodeType":"YulBlock","src":"3564:123:27","statements":[{"nodeType":"YulAssignment","src":"3574:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3596:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3583:12:27"},"nodeType":"YulFunctionCall","src":"3583:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3574:5:27"}]},{"body":{"nodeType":"YulBlock","src":"3665:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3674:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3677:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3667:6:27"},"nodeType":"YulFunctionCall","src":"3667:12:27"},"nodeType":"YulExpressionStatement","src":"3667:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3625:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3636:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3643:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3632:3:27"},"nodeType":"YulFunctionCall","src":"3632:30:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3622:2:27"},"nodeType":"YulFunctionCall","src":"3622:41:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3615:6:27"},"nodeType":"YulFunctionCall","src":"3615:49:27"},"nodeType":"YulIf","src":"3612:69:27"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3543:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3554:5:27","type":""}],"src":"3516:171:27"},{"body":{"nodeType":"YulBlock","src":"3880:1309:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3890:33:27","value":{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3904:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3913:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3900:3:27"},"nodeType":"YulFunctionCall","src":"3900:23:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3894:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3948:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3957:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3960:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3950:6:27"},"nodeType":"YulFunctionCall","src":"3950:12:27"},"nodeType":"YulExpressionStatement","src":"3950:12:27"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3939:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"3943:3:27","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3935:3:27"},"nodeType":"YulFunctionCall","src":"3935:12:27"},"nodeType":"YulIf","src":"3932:32:27"},{"nodeType":"YulAssignment","src":"3973:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4002:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3983:18:27"},"nodeType":"YulFunctionCall","src":"3983:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3973:6:27"}]},{"nodeType":"YulAssignment","src":"4021:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4054:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4065:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4050:3:27"},"nodeType":"YulFunctionCall","src":"4050:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4031:18:27"},"nodeType":"YulFunctionCall","src":"4031:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4021:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"4078:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4108:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4119:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4104:3:27"},"nodeType":"YulFunctionCall","src":"4104:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4091:12:27"},"nodeType":"YulFunctionCall","src":"4091:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4082:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4156:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4165:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4168:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4158:6:27"},"nodeType":"YulFunctionCall","src":"4158:12:27"},"nodeType":"YulExpressionStatement","src":"4158:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4145:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4152:1:27","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4142:2:27"},"nodeType":"YulFunctionCall","src":"4142:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4135:6:27"},"nodeType":"YulFunctionCall","src":"4135:20:27"},"nodeType":"YulIf","src":"4132:40:27"},{"nodeType":"YulAssignment","src":"4181:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4191:5:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4181:6:27"}]},{"body":{"nodeType":"YulBlock","src":"4236:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4248:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4238:6:27"},"nodeType":"YulFunctionCall","src":"4238:12:27"},"nodeType":"YulExpressionStatement","src":"4238:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4216:2:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4224:2:27","type":"","value":"95"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4220:3:27"},"nodeType":"YulFunctionCall","src":"4220:7:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4212:3:27"},"nodeType":"YulFunctionCall","src":"4212:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"4230:4:27","type":"","value":"0xe0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4208:3:27"},"nodeType":"YulFunctionCall","src":"4208:27:27"},"nodeType":"YulIf","src":"4205:47:27"},{"nodeType":"YulVariableDeclaration","src":"4261:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4281:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4275:5:27"},"nodeType":"YulFunctionCall","src":"4275:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4265:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4293:35:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4315:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4323:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4311:3:27"},"nodeType":"YulFunctionCall","src":"4311:17:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4297:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4411:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4432:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4435:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4425:6:27"},"nodeType":"YulFunctionCall","src":"4425:88:27"},"nodeType":"YulExpressionStatement","src":"4425:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4533:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4536:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4526:6:27"},"nodeType":"YulFunctionCall","src":"4526:15:27"},"nodeType":"YulExpressionStatement","src":"4526:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4561:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4564:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4554:6:27"},"nodeType":"YulFunctionCall","src":"4554:15:27"},"nodeType":"YulExpressionStatement","src":"4554:15:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4346:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"4358:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4343:2:27"},"nodeType":"YulFunctionCall","src":"4343:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4382:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4394:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4379:2:27"},"nodeType":"YulFunctionCall","src":"4379:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4340:2:27"},"nodeType":"YulFunctionCall","src":"4340:62:27"},"nodeType":"YulIf","src":"4337:242:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4595:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4599:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4588:6:27"},"nodeType":"YulFunctionCall","src":"4588:22:27"},"nodeType":"YulExpressionStatement","src":"4588:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4626:6:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4656:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4667:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4652:3:27"},"nodeType":"YulFunctionCall","src":"4652:18:27"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4634:17:27"},"nodeType":"YulFunctionCall","src":"4634:37:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4619:6:27"},"nodeType":"YulFunctionCall","src":"4619:53:27"},"nodeType":"YulExpressionStatement","src":"4619:53:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4692:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4700:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4688:3:27"},"nodeType":"YulFunctionCall","src":"4688:15:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4727:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4738:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4723:3:27"},"nodeType":"YulFunctionCall","src":"4723:19:27"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4705:17:27"},"nodeType":"YulFunctionCall","src":"4705:38:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4681:6:27"},"nodeType":"YulFunctionCall","src":"4681:63:27"},"nodeType":"YulExpressionStatement","src":"4681:63:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4764:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4772:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4760:3:27"},"nodeType":"YulFunctionCall","src":"4760:15:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4799:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4810:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4795:3:27"},"nodeType":"YulFunctionCall","src":"4795:19:27"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4777:17:27"},"nodeType":"YulFunctionCall","src":"4777:38:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4753:6:27"},"nodeType":"YulFunctionCall","src":"4753:63:27"},"nodeType":"YulExpressionStatement","src":"4753:63:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4836:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4844:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4832:3:27"},"nodeType":"YulFunctionCall","src":"4832:15:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4871:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4882:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4867:3:27"},"nodeType":"YulFunctionCall","src":"4867:19:27"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4849:17:27"},"nodeType":"YulFunctionCall","src":"4849:38:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4825:6:27"},"nodeType":"YulFunctionCall","src":"4825:63:27"},"nodeType":"YulExpressionStatement","src":"4825:63:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4908:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4916:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4904:3:27"},"nodeType":"YulFunctionCall","src":"4904:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4944:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4955:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4940:3:27"},"nodeType":"YulFunctionCall","src":"4940:20:27"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4922:17:27"},"nodeType":"YulFunctionCall","src":"4922:39:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4897:6:27"},"nodeType":"YulFunctionCall","src":"4897:65:27"},"nodeType":"YulExpressionStatement","src":"4897:65:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4982:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4990:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4978:3:27"},"nodeType":"YulFunctionCall","src":"4978:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5018:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5029:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5014:3:27"},"nodeType":"YulFunctionCall","src":"5014:19:27"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4996:17:27"},"nodeType":"YulFunctionCall","src":"4996:38:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4971:6:27"},"nodeType":"YulFunctionCall","src":"4971:64:27"},"nodeType":"YulExpressionStatement","src":"4971:64:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5055:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5063:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5051:3:27"},"nodeType":"YulFunctionCall","src":"5051:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5086:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5097:3:27","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5082:3:27"},"nodeType":"YulFunctionCall","src":"5082:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5069:12:27"},"nodeType":"YulFunctionCall","src":"5069:33:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5044:6:27"},"nodeType":"YulFunctionCall","src":"5044:59:27"},"nodeType":"YulExpressionStatement","src":"5044:59:27"},{"nodeType":"YulAssignment","src":"5112:16:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5122:6:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5112:6:27"}]},{"nodeType":"YulAssignment","src":"5137:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5167:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5178:3:27","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5163:3:27"},"nodeType":"YulFunctionCall","src":"5163:19:27"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"5147:15:27"},"nodeType":"YulFunctionCall","src":"5147:36:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5137:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_enum$_TokenType_$6827t_struct$_VaultSetupParamemters_$6896_memory_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3814:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3825:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3837:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3845:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3853:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3861:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3869:6:27","type":""}],"src":"3692:1497:27"},{"body":{"nodeType":"YulBlock","src":"5278:231:27","statements":[{"body":{"nodeType":"YulBlock","src":"5324:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5333:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5336:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5326:6:27"},"nodeType":"YulFunctionCall","src":"5326:12:27"},"nodeType":"YulExpressionStatement","src":"5326:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5299:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5308:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5295:3:27"},"nodeType":"YulFunctionCall","src":"5295:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5320:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5291:3:27"},"nodeType":"YulFunctionCall","src":"5291:32:27"},"nodeType":"YulIf","src":"5288:52:27"},{"nodeType":"YulAssignment","src":"5349:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5378:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5359:18:27"},"nodeType":"YulFunctionCall","src":"5359:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5349:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5397:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5427:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5438:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5423:3:27"},"nodeType":"YulFunctionCall","src":"5423:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5410:12:27"},"nodeType":"YulFunctionCall","src":"5410:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5401:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5473:5:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"5451:21:27"},"nodeType":"YulFunctionCall","src":"5451:28:27"},"nodeType":"YulExpressionStatement","src":"5451:28:27"},{"nodeType":"YulAssignment","src":"5488:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5498:5:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5488:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5236:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5247:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5259:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5267:6:27","type":""}],"src":"5194:315:27"},{"body":{"nodeType":"YulBlock","src":"5601:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"5647:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5656:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5659:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5649:6:27"},"nodeType":"YulFunctionCall","src":"5649:12:27"},"nodeType":"YulExpressionStatement","src":"5649:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5622:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5631:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5618:3:27"},"nodeType":"YulFunctionCall","src":"5618:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5643:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5614:3:27"},"nodeType":"YulFunctionCall","src":"5614:32:27"},"nodeType":"YulIf","src":"5611:52:27"},{"nodeType":"YulAssignment","src":"5672:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5701:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5682:18:27"},"nodeType":"YulFunctionCall","src":"5682:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5672:6:27"}]},{"nodeType":"YulAssignment","src":"5720:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5747:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5758:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5743:3:27"},"nodeType":"YulFunctionCall","src":"5743:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5730:12:27"},"nodeType":"YulFunctionCall","src":"5730:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5720:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5559:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5570:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5582:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5590:6:27","type":""}],"src":"5514:254:27"},{"body":{"nodeType":"YulBlock","src":"5877:218:27","statements":[{"body":{"nodeType":"YulBlock","src":"5923:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5932:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5925:6:27"},"nodeType":"YulFunctionCall","src":"5925:12:27"},"nodeType":"YulExpressionStatement","src":"5925:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5898:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5907:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5894:3:27"},"nodeType":"YulFunctionCall","src":"5894:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5919:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5890:3:27"},"nodeType":"YulFunctionCall","src":"5890:32:27"},"nodeType":"YulIf","src":"5887:52:27"},{"nodeType":"YulAssignment","src":"5948:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5958:18:27"},"nodeType":"YulFunctionCall","src":"5958:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5948:6:27"}]},{"nodeType":"YulAssignment","src":"5996:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6023:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6034:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6019:3:27"},"nodeType":"YulFunctionCall","src":"6019:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6006:12:27"},"nodeType":"YulFunctionCall","src":"6006:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5996:6:27"}]},{"nodeType":"YulAssignment","src":"6047:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6074:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6085:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6070:3:27"},"nodeType":"YulFunctionCall","src":"6070:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6057:12:27"},"nodeType":"YulFunctionCall","src":"6057:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6047:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5827:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5838:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5850:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5858:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5866:6:27","type":""}],"src":"5773:322:27"},{"body":{"nodeType":"YulBlock","src":"6149:97:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6166:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6177:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6171:5:27"},"nodeType":"YulFunctionCall","src":"6171:12:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6159:6:27"},"nodeType":"YulFunctionCall","src":"6159:25:27"},"nodeType":"YulExpressionStatement","src":"6159:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6204:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6209:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6200:3:27"},"nodeType":"YulFunctionCall","src":"6200:14:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6226:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6233:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6222:3:27"},"nodeType":"YulFunctionCall","src":"6222:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6216:5:27"},"nodeType":"YulFunctionCall","src":"6216:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6193:6:27"},"nodeType":"YulFunctionCall","src":"6193:47:27"},"nodeType":"YulExpressionStatement","src":"6193:47:27"}]},"name":"abi_encode_struct_Vault","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6133:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6140:3:27","type":""}],"src":"6100:146:27"},{"body":{"nodeType":"YulBlock","src":"6408:1450:27","statements":[{"nodeType":"YulAssignment","src":"6418:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6430:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6441:3:27","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6426:3:27"},"nodeType":"YulFunctionCall","src":"6426:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6418:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6484:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6478:5:27"},"nodeType":"YulFunctionCall","src":"6478:13:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6493:9:27"}],"functionName":{"name":"abi_encode_struct_Vault","nodeType":"YulIdentifier","src":"6454:23:27"},"nodeType":"YulFunctionCall","src":"6454:49:27"},"nodeType":"YulExpressionStatement","src":"6454:49:27"},{"nodeType":"YulVariableDeclaration","src":"6512:44:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6542:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6550:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6538:3:27"},"nodeType":"YulFunctionCall","src":"6538:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6532:5:27"},"nodeType":"YulFunctionCall","src":"6532:24:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6516:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6589:12:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6607:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6618:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6603:3:27"},"nodeType":"YulFunctionCall","src":"6603:20:27"}],"functionName":{"name":"abi_encode_struct_Vault","nodeType":"YulIdentifier","src":"6565:23:27"},"nodeType":"YulFunctionCall","src":"6565:59:27"},"nodeType":"YulExpressionStatement","src":"6565:59:27"},{"nodeType":"YulVariableDeclaration","src":"6633:46:27","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6665:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6673:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6661:3:27"},"nodeType":"YulFunctionCall","src":"6661:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6655:5:27"},"nodeType":"YulFunctionCall","src":"6655:24:27"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"6637:14:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6699:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6710:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6695:3:27"},"nodeType":"YulFunctionCall","src":"6695:20:27"},{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"6723:14:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6717:5:27"},"nodeType":"YulFunctionCall","src":"6717:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:27"},"nodeType":"YulFunctionCall","src":"6688:51:27"},"nodeType":"YulExpressionStatement","src":"6688:51:27"},{"nodeType":"YulVariableDeclaration","src":"6748:54:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"6780:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"6796:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6776:3:27"},"nodeType":"YulFunctionCall","src":"6776:25:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6770:5:27"},"nodeType":"YulFunctionCall","src":"6770:32:27"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"6752:14:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"6829:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6849:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6860:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6845:3:27"},"nodeType":"YulFunctionCall","src":"6845:19:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"6811:17:27"},"nodeType":"YulFunctionCall","src":"6811:54:27"},"nodeType":"YulExpressionStatement","src":"6811:54:27"},{"nodeType":"YulVariableDeclaration","src":"6874:54:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"6906:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"6922:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6902:3:27"},"nodeType":"YulFunctionCall","src":"6902:25:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6896:5:27"},"nodeType":"YulFunctionCall","src":"6896:32:27"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"6878:14:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"6955:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6975:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6986:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6971:3:27"},"nodeType":"YulFunctionCall","src":"6971:19:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"6937:17:27"},"nodeType":"YulFunctionCall","src":"6937:54:27"},"nodeType":"YulExpressionStatement","src":"6937:54:27"},{"nodeType":"YulVariableDeclaration","src":"7000:54:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7032:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"7048:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7028:3:27"},"nodeType":"YulFunctionCall","src":"7028:25:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7022:5:27"},"nodeType":"YulFunctionCall","src":"7022:32:27"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"7004:14:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"7081:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7101:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7112:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7097:3:27"},"nodeType":"YulFunctionCall","src":"7097:19:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"7063:17:27"},"nodeType":"YulFunctionCall","src":"7063:54:27"},"nodeType":"YulExpressionStatement","src":"7063:54:27"},{"nodeType":"YulVariableDeclaration","src":"7126:54:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7158:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"7174:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7154:3:27"},"nodeType":"YulFunctionCall","src":"7154:25:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7148:5:27"},"nodeType":"YulFunctionCall","src":"7148:32:27"},"variables":[{"name":"memberValue0_5","nodeType":"YulTypedName","src":"7130:14:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7189:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7199:3:27","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7193:2:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_5","nodeType":"YulIdentifier","src":"7229:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7249:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"7260:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7245:3:27"},"nodeType":"YulFunctionCall","src":"7245:18:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"7211:17:27"},"nodeType":"YulFunctionCall","src":"7211:53:27"},"nodeType":"YulExpressionStatement","src":"7211:53:27"},{"nodeType":"YulVariableDeclaration","src":"7273:53:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7305:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"7321:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7301:3:27"},"nodeType":"YulFunctionCall","src":"7301:24:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7295:5:27"},"nodeType":"YulFunctionCall","src":"7295:31:27"},"variables":[{"name":"memberValue0_6","nodeType":"YulTypedName","src":"7277:14:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7335:13:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7345:3:27","type":"","value":"288"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7339:2:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_6","nodeType":"YulIdentifier","src":"7375:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7395:9:27"},{"name":"_2","nodeType":"YulIdentifier","src":"7406:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7391:3:27"},"nodeType":"YulFunctionCall","src":"7391:18:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"7357:17:27"},"nodeType":"YulFunctionCall","src":"7357:53:27"},"nodeType":"YulExpressionStatement","src":"7357:53:27"},{"nodeType":"YulVariableDeclaration","src":"7419:53:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7451:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"7467:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:27"},"nodeType":"YulFunctionCall","src":"7447:24:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7441:5:27"},"nodeType":"YulFunctionCall","src":"7441:31:27"},"variables":[{"name":"memberValue0_7","nodeType":"YulTypedName","src":"7423:14:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_7","nodeType":"YulIdentifier","src":"7499:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7519:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7530:3:27","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7515:3:27"},"nodeType":"YulFunctionCall","src":"7515:19:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"7481:17:27"},"nodeType":"YulFunctionCall","src":"7481:54:27"},"nodeType":"YulExpressionStatement","src":"7481:54:27"},{"nodeType":"YulVariableDeclaration","src":"7544:53:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7576:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"7592:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7572:3:27"},"nodeType":"YulFunctionCall","src":"7572:24:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7566:5:27"},"nodeType":"YulFunctionCall","src":"7566:31:27"},"variables":[{"name":"memberValue0_8","nodeType":"YulTypedName","src":"7548:14:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_8","nodeType":"YulIdentifier","src":"7624:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7655:3:27","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:27"},"nodeType":"YulFunctionCall","src":"7640:19:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"7606:17:27"},"nodeType":"YulFunctionCall","src":"7606:54:27"},"nodeType":"YulExpressionStatement","src":"7606:54:27"},{"nodeType":"YulVariableDeclaration","src":"7669:52:27","value":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7701:14:27"},{"name":"_1","nodeType":"YulIdentifier","src":"7717:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7697:3:27"},"nodeType":"YulFunctionCall","src":"7697:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7691:5:27"},"nodeType":"YulFunctionCall","src":"7691:30:27"},"variables":[{"name":"memberValue0_9","nodeType":"YulTypedName","src":"7673:14:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_9","nodeType":"YulIdentifier","src":"7748:14:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7768:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7779:3:27","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7764:3:27"},"nodeType":"YulFunctionCall","src":"7764:19:27"}],"functionName":{"name":"abi_encode_uint64","nodeType":"YulIdentifier","src":"7730:17:27"},"nodeType":"YulFunctionCall","src":"7730:54:27"},"nodeType":"YulExpressionStatement","src":"7730:54:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7804:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7815:3:27","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7800:3:27"},"nodeType":"YulFunctionCall","src":"7800:19:27"},{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7831:14:27"},{"name":"_2","nodeType":"YulIdentifier","src":"7847:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7827:3:27"},"nodeType":"YulFunctionCall","src":"7827:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7821:5:27"},"nodeType":"YulFunctionCall","src":"7821:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7793:6:27"},"nodeType":"YulFunctionCall","src":"7793:59:27"},"nodeType":"YulExpressionStatement","src":"7793:59:27"}]},"name":"abi_encode_tuple_t_struct$_TokenVault_$6855_memory_ptr__to_t_struct$_TokenVault_$6855_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6377:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6388:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6399:4:27","type":""}],"src":"6251:1607:27"},{"body":{"nodeType":"YulBlock","src":"7950:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"7996:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8005:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8008:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7998:6:27"},"nodeType":"YulFunctionCall","src":"7998:12:27"},"nodeType":"YulExpressionStatement","src":"7998:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7971:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7980:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7967:3:27"},"nodeType":"YulFunctionCall","src":"7967:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7992:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7963:3:27"},"nodeType":"YulFunctionCall","src":"7963:32:27"},"nodeType":"YulIf","src":"7960:52:27"},{"nodeType":"YulAssignment","src":"8021:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8050:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8031:18:27"},"nodeType":"YulFunctionCall","src":"8031:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8021:6:27"}]},{"nodeType":"YulAssignment","src":"8069:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8102:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8113:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:27"},"nodeType":"YulFunctionCall","src":"8098:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8079:18:27"},"nodeType":"YulFunctionCall","src":"8079:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8069:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7908:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7919:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7931:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7939:6:27","type":""}],"src":"7863:260:27"},{"body":{"nodeType":"YulBlock","src":"8189:374:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8199:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8219:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8213:5:27"},"nodeType":"YulFunctionCall","src":"8213:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8203:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8241:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8246:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8234:6:27"},"nodeType":"YulFunctionCall","src":"8234:19:27"},"nodeType":"YulExpressionStatement","src":"8234:19:27"},{"nodeType":"YulVariableDeclaration","src":"8262:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8272:4:27","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8266:2:27","type":""}]},{"nodeType":"YulAssignment","src":"8285:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8296:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"8301:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8292:3:27"},"nodeType":"YulFunctionCall","src":"8292:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8285:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"8313:28:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8331:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"8338:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8327:3:27"},"nodeType":"YulFunctionCall","src":"8327:14:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8317:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8350:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8359:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8354:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8418:120:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8439:3:27"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8450:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8444:5:27"},"nodeType":"YulFunctionCall","src":"8444:13:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:27"},"nodeType":"YulFunctionCall","src":"8432:26:27"},"nodeType":"YulExpressionStatement","src":"8432:26:27"},{"nodeType":"YulAssignment","src":"8471:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8482:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"8487:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8478:3:27"},"nodeType":"YulFunctionCall","src":"8478:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8471:3:27"}]},{"nodeType":"YulAssignment","src":"8503:25:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8517:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"8525:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8513:3:27"},"nodeType":"YulFunctionCall","src":"8513:15:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8503:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8380:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"8383:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8377:2:27"},"nodeType":"YulFunctionCall","src":"8377:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8391:18:27","statements":[{"nodeType":"YulAssignment","src":"8393:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8402:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"8405:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8398:3:27"},"nodeType":"YulFunctionCall","src":"8398:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8393:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"8373:3:27","statements":[]},"src":"8369:169:27"},{"nodeType":"YulAssignment","src":"8547:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"8554:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8547:3:27"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8166:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8173:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8181:3:27","type":""}],"src":"8128:435:27"},{"body":{"nodeType":"YulBlock","src":"8719:110:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8736:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8747:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8729:6:27"},"nodeType":"YulFunctionCall","src":"8729:21:27"},"nodeType":"YulExpressionStatement","src":"8729:21:27"},{"nodeType":"YulAssignment","src":"8759:64:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8796:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8808:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8819:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8804:3:27"},"nodeType":"YulFunctionCall","src":"8804:18:27"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8767:28:27"},"nodeType":"YulFunctionCall","src":"8767:56:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8759:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8688:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8699:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8710:4:27","type":""}],"src":"8568:261:27"},{"body":{"nodeType":"YulBlock","src":"8929:92:27","statements":[{"nodeType":"YulAssignment","src":"8939:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8951:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8962:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8947:3:27"},"nodeType":"YulFunctionCall","src":"8947:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8939:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8981:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9006:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8999:6:27"},"nodeType":"YulFunctionCall","src":"8999:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8992:6:27"},"nodeType":"YulFunctionCall","src":"8992:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8974:6:27"},"nodeType":"YulFunctionCall","src":"8974:41:27"},"nodeType":"YulExpressionStatement","src":"8974:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8898:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8909:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8920:4:27","type":""}],"src":"8834:187:27"},{"body":{"nodeType":"YulBlock","src":"9110:283:27","statements":[{"body":{"nodeType":"YulBlock","src":"9159:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9168:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9171:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9161:6:27"},"nodeType":"YulFunctionCall","src":"9161:12:27"},"nodeType":"YulExpressionStatement","src":"9161:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9138:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9146:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9134:3:27"},"nodeType":"YulFunctionCall","src":"9134:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"9153:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9130:3:27"},"nodeType":"YulFunctionCall","src":"9130:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9123:6:27"},"nodeType":"YulFunctionCall","src":"9123:35:27"},"nodeType":"YulIf","src":"9120:55:27"},{"nodeType":"YulAssignment","src":"9184:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9207:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9194:12:27"},"nodeType":"YulFunctionCall","src":"9194:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9184:6:27"}]},{"body":{"nodeType":"YulBlock","src":"9257:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9266:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9269:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9259:6:27"},"nodeType":"YulFunctionCall","src":"9259:12:27"},"nodeType":"YulExpressionStatement","src":"9259:12:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9229:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9237:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9226:2:27"},"nodeType":"YulFunctionCall","src":"9226:30:27"},"nodeType":"YulIf","src":"9223:50:27"},{"nodeType":"YulAssignment","src":"9282:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9298:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9306:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9294:3:27"},"nodeType":"YulFunctionCall","src":"9294:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9282:8:27"}]},{"body":{"nodeType":"YulBlock","src":"9371:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9380:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9383:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9373:6:27"},"nodeType":"YulFunctionCall","src":"9373:12:27"},"nodeType":"YulExpressionStatement","src":"9373:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9334:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9346:1:27","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"9349:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9342:3:27"},"nodeType":"YulFunctionCall","src":"9342:14:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9330:3:27"},"nodeType":"YulFunctionCall","src":"9330:27:27"},{"kind":"number","nodeType":"YulLiteral","src":"9359:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9326:3:27"},"nodeType":"YulFunctionCall","src":"9326:38:27"},{"name":"end","nodeType":"YulIdentifier","src":"9366:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9323:2:27"},"nodeType":"YulFunctionCall","src":"9323:47:27"},"nodeType":"YulIf","src":"9320:67:27"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9073:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"9081:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"9089:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"9099:6:27","type":""}],"src":"9026:367:27"},{"body":{"nodeType":"YulBlock","src":"9608:925:27","statements":[{"body":{"nodeType":"YulBlock","src":"9655:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9664:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9667:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9657:6:27"},"nodeType":"YulFunctionCall","src":"9657:12:27"},"nodeType":"YulExpressionStatement","src":"9657:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9629:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9638:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9625:3:27"},"nodeType":"YulFunctionCall","src":"9625:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"9650:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9621:3:27"},"nodeType":"YulFunctionCall","src":"9621:33:27"},"nodeType":"YulIf","src":"9618:53:27"},{"nodeType":"YulAssignment","src":"9680:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9709:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9690:18:27"},"nodeType":"YulFunctionCall","src":"9690:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9680:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"9728:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9759:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9770:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9755:3:27"},"nodeType":"YulFunctionCall","src":"9755:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9742:12:27"},"nodeType":"YulFunctionCall","src":"9742:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9732:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9783:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9793:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9787:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9838:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9847:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9850:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9840:6:27"},"nodeType":"YulFunctionCall","src":"9840:12:27"},"nodeType":"YulExpressionStatement","src":"9840:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9826:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"9834:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9823:2:27"},"nodeType":"YulFunctionCall","src":"9823:14:27"},"nodeType":"YulIf","src":"9820:34:27"},{"nodeType":"YulVariableDeclaration","src":"9863:96:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9931:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9942:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9927:3:27"},"nodeType":"YulFunctionCall","src":"9927:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9951:7:27"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"9889:37:27"},"nodeType":"YulFunctionCall","src":"9889:70:27"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"9867:8:27","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"9877:8:27","type":""}]},{"nodeType":"YulAssignment","src":"9968:18:27","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"9978:8:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9968:6:27"}]},{"nodeType":"YulAssignment","src":"9995:18:27","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"10005:8:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9995:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"10022:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10055:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10066:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10051:3:27"},"nodeType":"YulFunctionCall","src":"10051:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10038:12:27"},"nodeType":"YulFunctionCall","src":"10038:32:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"10026:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10099:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10108:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10111:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10101:6:27"},"nodeType":"YulFunctionCall","src":"10101:12:27"},"nodeType":"YulExpressionStatement","src":"10101:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10085:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"10095:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10082:2:27"},"nodeType":"YulFunctionCall","src":"10082:16:27"},"nodeType":"YulIf","src":"10079:36:27"},{"nodeType":"YulVariableDeclaration","src":"10124:98:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10192:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10203:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10188:3:27"},"nodeType":"YulFunctionCall","src":"10188:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10214:7:27"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"10150:37:27"},"nodeType":"YulFunctionCall","src":"10150:72:27"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"10128:8:27","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"10138:8:27","type":""}]},{"nodeType":"YulAssignment","src":"10231:18:27","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"10241:8:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10231:6:27"}]},{"nodeType":"YulAssignment","src":"10258:18:27","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"10268:8:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10258:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"10285:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10318:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10329:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10314:3:27"},"nodeType":"YulFunctionCall","src":"10314:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10301:12:27"},"nodeType":"YulFunctionCall","src":"10301:32:27"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"10289:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10362:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10371:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10374:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10364:6:27"},"nodeType":"YulFunctionCall","src":"10364:12:27"},"nodeType":"YulExpressionStatement","src":"10364:12:27"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"10348:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"10358:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10345:2:27"},"nodeType":"YulFunctionCall","src":"10345:16:27"},"nodeType":"YulIf","src":"10342:36:27"},{"nodeType":"YulVariableDeclaration","src":"10387:86:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10443:9:27"},{"name":"offset_2","nodeType":"YulIdentifier","src":"10454:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10439:3:27"},"nodeType":"YulFunctionCall","src":"10439:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10465:7:27"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"10413:25:27"},"nodeType":"YulFunctionCall","src":"10413:60:27"},"variables":[{"name":"value5_1","nodeType":"YulTypedName","src":"10391:8:27","type":""},{"name":"value6_1","nodeType":"YulTypedName","src":"10401:8:27","type":""}]},{"nodeType":"YulAssignment","src":"10482:18:27","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"10492:8:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10482:6:27"}]},{"nodeType":"YulAssignment","src":"10509:18:27","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"10519:8:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"10509:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9526:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9537:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9549:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9557:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9565:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9573:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9581:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9589:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9597:6:27","type":""}],"src":"9398:1135:27"},{"body":{"nodeType":"YulBlock","src":"10639:125:27","statements":[{"nodeType":"YulAssignment","src":"10649:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10661:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10672:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10657:3:27"},"nodeType":"YulFunctionCall","src":"10657:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10649:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10691:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10706:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10714:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10702:3:27"},"nodeType":"YulFunctionCall","src":"10702:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10684:6:27"},"nodeType":"YulFunctionCall","src":"10684:74:27"},"nodeType":"YulExpressionStatement","src":"10684:74:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10608:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10619:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10630:4:27","type":""}],"src":"10538:226:27"},{"body":{"nodeType":"YulBlock","src":"10898:119:27","statements":[{"nodeType":"YulAssignment","src":"10908:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10920:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10931:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10916:3:27"},"nodeType":"YulFunctionCall","src":"10916:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10908:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10950:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"10961:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10943:6:27"},"nodeType":"YulFunctionCall","src":"10943:25:27"},"nodeType":"YulExpressionStatement","src":"10943:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10988:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10999:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10984:3:27"},"nodeType":"YulFunctionCall","src":"10984:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"11004:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10977:6:27"},"nodeType":"YulFunctionCall","src":"10977:34:27"},"nodeType":"YulExpressionStatement","src":"10977:34:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10859:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10870:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10878:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10889:4:27","type":""}],"src":"10769:248:27"},{"body":{"nodeType":"YulBlock","src":"11143:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"11190:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11199:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11202:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11192:6:27"},"nodeType":"YulFunctionCall","src":"11192:12:27"},"nodeType":"YulExpressionStatement","src":"11192:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11164:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11173:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11160:3:27"},"nodeType":"YulFunctionCall","src":"11160:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"11185:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11156:3:27"},"nodeType":"YulFunctionCall","src":"11156:33:27"},"nodeType":"YulIf","src":"11153:53:27"},{"nodeType":"YulAssignment","src":"11215:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11244:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11225:18:27"},"nodeType":"YulFunctionCall","src":"11225:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11215:6:27"}]},{"nodeType":"YulAssignment","src":"11263:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11296:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11307:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11292:3:27"},"nodeType":"YulFunctionCall","src":"11292:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11273:18:27"},"nodeType":"YulFunctionCall","src":"11273:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11263:6:27"}]},{"nodeType":"YulAssignment","src":"11320:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11353:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11364:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11349:3:27"},"nodeType":"YulFunctionCall","src":"11349:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11330:18:27"},"nodeType":"YulFunctionCall","src":"11330:38:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11320:6:27"}]},{"nodeType":"YulAssignment","src":"11377:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11404:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11415:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11400:3:27"},"nodeType":"YulFunctionCall","src":"11400:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11387:12:27"},"nodeType":"YulFunctionCall","src":"11387:32:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11377:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11085:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11096:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11108:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11116:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11124:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11132:6:27","type":""}],"src":"11022:403:27"},{"body":{"nodeType":"YulBlock","src":"11638:783:27","statements":[{"body":{"nodeType":"YulBlock","src":"11685:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11694:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11697:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11687:6:27"},"nodeType":"YulFunctionCall","src":"11687:12:27"},"nodeType":"YulExpressionStatement","src":"11687:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11659:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11668:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11655:3:27"},"nodeType":"YulFunctionCall","src":"11655:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"11680:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11651:3:27"},"nodeType":"YulFunctionCall","src":"11651:33:27"},"nodeType":"YulIf","src":"11648:53:27"},{"nodeType":"YulAssignment","src":"11710:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11739:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11720:18:27"},"nodeType":"YulFunctionCall","src":"11720:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11710:6:27"}]},{"nodeType":"YulAssignment","src":"11758:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11791:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11802:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11787:3:27"},"nodeType":"YulFunctionCall","src":"11787:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11768:18:27"},"nodeType":"YulFunctionCall","src":"11768:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11758:6:27"}]},{"nodeType":"YulAssignment","src":"11815:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11842:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11838:3:27"},"nodeType":"YulFunctionCall","src":"11838:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11825:12:27"},"nodeType":"YulFunctionCall","src":"11825:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11815:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"11866:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11897:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11908:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11893:3:27"},"nodeType":"YulFunctionCall","src":"11893:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11880:12:27"},"nodeType":"YulFunctionCall","src":"11880:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11870:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11921:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11931:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11925:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11976:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11985:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11988:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11978:6:27"},"nodeType":"YulFunctionCall","src":"11978:12:27"},"nodeType":"YulExpressionStatement","src":"11978:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11964:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"11972:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11961:2:27"},"nodeType":"YulFunctionCall","src":"11961:14:27"},"nodeType":"YulIf","src":"11958:34:27"},{"nodeType":"YulVariableDeclaration","src":"12001:96:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12069:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12080:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12065:3:27"},"nodeType":"YulFunctionCall","src":"12065:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12089:7:27"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"12027:37:27"},"nodeType":"YulFunctionCall","src":"12027:70:27"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"12005:8:27","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"12015:8:27","type":""}]},{"nodeType":"YulAssignment","src":"12106:18:27","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"12116:8:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12106:6:27"}]},{"nodeType":"YulAssignment","src":"12133:18:27","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"12143:8:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12133:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"12160:49:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12204:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12189:3:27"},"nodeType":"YulFunctionCall","src":"12189:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12176:12:27"},"nodeType":"YulFunctionCall","src":"12176:33:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"12164:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"12238:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12247:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12250:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12240:6:27"},"nodeType":"YulFunctionCall","src":"12240:12:27"},"nodeType":"YulExpressionStatement","src":"12240:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"12224:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"12234:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12221:2:27"},"nodeType":"YulFunctionCall","src":"12221:16:27"},"nodeType":"YulIf","src":"12218:36:27"},{"nodeType":"YulVariableDeclaration","src":"12263:98:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12331:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"12342:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12327:3:27"},"nodeType":"YulFunctionCall","src":"12327:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12353:7:27"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"12289:37:27"},"nodeType":"YulFunctionCall","src":"12289:72:27"},"variables":[{"name":"value5_1","nodeType":"YulTypedName","src":"12267:8:27","type":""},{"name":"value6_1","nodeType":"YulTypedName","src":"12277:8:27","type":""}]},{"nodeType":"YulAssignment","src":"12370:18:27","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"12380:8:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12370:6:27"}]},{"nodeType":"YulAssignment","src":"12397:18:27","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"12407:8:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12397:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11556:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11567:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11579:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11587:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11595:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11603:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11611:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11619:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11627:6:27","type":""}],"src":"11430:991:27"},{"body":{"nodeType":"YulBlock","src":"12597:220:27","statements":[{"nodeType":"YulAssignment","src":"12607:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12619:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12630:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12615:3:27"},"nodeType":"YulFunctionCall","src":"12615:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12607:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12649:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12670:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12664:5:27"},"nodeType":"YulFunctionCall","src":"12664:13:27"},{"kind":"number","nodeType":"YulLiteral","src":"12679:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12660:3:27"},"nodeType":"YulFunctionCall","src":"12660:62:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12642:6:27"},"nodeType":"YulFunctionCall","src":"12642:81:27"},"nodeType":"YulExpressionStatement","src":"12642:81:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12743:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12754:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12739:3:27"},"nodeType":"YulFunctionCall","src":"12739:20:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12775:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12783:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12771:3:27"},"nodeType":"YulFunctionCall","src":"12771:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12765:5:27"},"nodeType":"YulFunctionCall","src":"12765:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"12791:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12761:3:27"},"nodeType":"YulFunctionCall","src":"12761:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12732:6:27"},"nodeType":"YulFunctionCall","src":"12732:79:27"},"nodeType":"YulExpressionStatement","src":"12732:79:27"}]},"name":"abi_encode_tuple_t_struct$_LiquidatedWarning_$6881_memory_ptr__to_t_struct$_LiquidatedWarning_$6881_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12566:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12577:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12588:4:27","type":""}],"src":"12426:391:27"},{"body":{"nodeType":"YulBlock","src":"12979:162:27","statements":[{"nodeType":"YulAssignment","src":"12989:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13001:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13012:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12997:3:27"},"nodeType":"YulFunctionCall","src":"12997:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12989:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13031:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"13042:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13024:6:27"},"nodeType":"YulFunctionCall","src":"13024:25:27"},"nodeType":"YulExpressionStatement","src":"13024:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13069:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13080:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13065:3:27"},"nodeType":"YulFunctionCall","src":"13065:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"13085:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13058:6:27"},"nodeType":"YulFunctionCall","src":"13058:34:27"},"nodeType":"YulExpressionStatement","src":"13058:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13112:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13123:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13108:3:27"},"nodeType":"YulFunctionCall","src":"13108:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"13128:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13101:6:27"},"nodeType":"YulFunctionCall","src":"13101:34:27"},"nodeType":"YulExpressionStatement","src":"13101:34:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12932:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12943:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12951:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12959:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12970:4:27","type":""}],"src":"12822:319:27"},{"body":{"nodeType":"YulBlock","src":"13303:241:27","statements":[{"nodeType":"YulAssignment","src":"13313:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13325:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13336:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13321:3:27"},"nodeType":"YulFunctionCall","src":"13321:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13313:4:27"}]},{"nodeType":"YulVariableDeclaration","src":"13348:52:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13358:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13352:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13416:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13431:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"13439:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13427:3:27"},"nodeType":"YulFunctionCall","src":"13427:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13409:6:27"},"nodeType":"YulFunctionCall","src":"13409:34:27"},"nodeType":"YulExpressionStatement","src":"13409:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13463:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13474:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13459:3:27"},"nodeType":"YulFunctionCall","src":"13459:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13483:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"13491:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13479:3:27"},"nodeType":"YulFunctionCall","src":"13479:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13452:6:27"},"nodeType":"YulFunctionCall","src":"13452:43:27"},"nodeType":"YulExpressionStatement","src":"13452:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13515:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13526:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13511:3:27"},"nodeType":"YulFunctionCall","src":"13511:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"13531:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13504:6:27"},"nodeType":"YulFunctionCall","src":"13504:34:27"},"nodeType":"YulExpressionStatement","src":"13504:34:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13256:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13267:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13275:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13283:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13294:4:27","type":""}],"src":"13146:398:27"},{"body":{"nodeType":"YulBlock","src":"13672:184:27","statements":[{"nodeType":"YulAssignment","src":"13682:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13694:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13705:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13690:3:27"},"nodeType":"YulFunctionCall","src":"13690:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13682:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13724:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13739:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13747:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13735:3:27"},"nodeType":"YulFunctionCall","src":"13735:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13717:6:27"},"nodeType":"YulFunctionCall","src":"13717:74:27"},"nodeType":"YulExpressionStatement","src":"13717:74:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13811:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13822:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13807:3:27"},"nodeType":"YulFunctionCall","src":"13807:18:27"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13841:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13834:6:27"},"nodeType":"YulFunctionCall","src":"13834:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13827:6:27"},"nodeType":"YulFunctionCall","src":"13827:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13800:6:27"},"nodeType":"YulFunctionCall","src":"13800:50:27"},"nodeType":"YulExpressionStatement","src":"13800:50:27"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13633:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13644:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13652:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13663:4:27","type":""}],"src":"13549:307:27"},{"body":{"nodeType":"YulBlock","src":"14046:285:27","statements":[{"nodeType":"YulAssignment","src":"14056:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14068:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14079:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14064:3:27"},"nodeType":"YulFunctionCall","src":"14064:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14056:4:27"}]},{"nodeType":"YulVariableDeclaration","src":"14092:52:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14102:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14096:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14160:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14175:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"14183:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14171:3:27"},"nodeType":"YulFunctionCall","src":"14171:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14153:6:27"},"nodeType":"YulFunctionCall","src":"14153:34:27"},"nodeType":"YulExpressionStatement","src":"14153:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14207:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14218:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14203:3:27"},"nodeType":"YulFunctionCall","src":"14203:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14227:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"14235:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14223:3:27"},"nodeType":"YulFunctionCall","src":"14223:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14196:6:27"},"nodeType":"YulFunctionCall","src":"14196:43:27"},"nodeType":"YulExpressionStatement","src":"14196:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14259:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14270:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14255:3:27"},"nodeType":"YulFunctionCall","src":"14255:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"14275:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14248:6:27"},"nodeType":"YulFunctionCall","src":"14248:34:27"},"nodeType":"YulExpressionStatement","src":"14248:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14302:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14313:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14298:3:27"},"nodeType":"YulFunctionCall","src":"14298:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"14318:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14291:6:27"},"nodeType":"YulFunctionCall","src":"14291:34:27"},"nodeType":"YulExpressionStatement","src":"14291:34:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13991:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14002:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14010:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14018:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14026:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14037:4:27","type":""}],"src":"13861:470:27"},{"body":{"nodeType":"YulBlock","src":"14368:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14385:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14388:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14378:6:27"},"nodeType":"YulFunctionCall","src":"14378:88:27"},"nodeType":"YulExpressionStatement","src":"14378:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14482:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14485:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14475:6:27"},"nodeType":"YulFunctionCall","src":"14475:15:27"},"nodeType":"YulExpressionStatement","src":"14475:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14506:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14509:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14499:6:27"},"nodeType":"YulFunctionCall","src":"14499:15:27"},"nodeType":"YulExpressionStatement","src":"14499:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14336:184:27"},{"body":{"nodeType":"YulBlock","src":"14572:104:27","statements":[{"nodeType":"YulAssignment","src":"14582:39:27","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14598:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"14601:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14594:3:27"},"nodeType":"YulFunctionCall","src":"14594:12:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14612:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"14615:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14608:3:27"},"nodeType":"YulFunctionCall","src":"14608:12:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14590:3:27"},"nodeType":"YulFunctionCall","src":"14590:31:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14582:4:27"}]},{"body":{"nodeType":"YulBlock","src":"14648:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14650:16:27"},"nodeType":"YulFunctionCall","src":"14650:18:27"},"nodeType":"YulExpressionStatement","src":"14650:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14636:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"14642:4:27","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14633:2:27"},"nodeType":"YulFunctionCall","src":"14633:14:27"},"nodeType":"YulIf","src":"14630:40:27"}]},"name":"checked_sub_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14554:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"14557:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14563:4:27","type":""}],"src":"14525:151:27"},{"body":{"nodeType":"YulBlock","src":"14745:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14755:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14770:1:27","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"14759:7:27","type":""}]},{"nodeType":"YulAssignment","src":"14780:16:27","value":{"name":"power_1","nodeType":"YulIdentifier","src":"14789:7:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"14780:5:27"}]},{"nodeType":"YulAssignment","src":"14805:13:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"14813:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"14805:4:27"}]},{"body":{"nodeType":"YulBlock","src":"14869:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"14914:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14916:16:27"},"nodeType":"YulFunctionCall","src":"14916:18:27"},"nodeType":"YulExpressionStatement","src":"14916:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"14889:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14903:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14899:3:27"},"nodeType":"YulFunctionCall","src":"14899:6:27"},{"name":"base","nodeType":"YulIdentifier","src":"14907:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14895:3:27"},"nodeType":"YulFunctionCall","src":"14895:17:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14886:2:27"},"nodeType":"YulFunctionCall","src":"14886:27:27"},"nodeType":"YulIf","src":"14883:53:27"},{"body":{"nodeType":"YulBlock","src":"14975:29:27","statements":[{"nodeType":"YulAssignment","src":"14977:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"14990:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"14997:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14986:3:27"},"nodeType":"YulFunctionCall","src":"14986:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"14977:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14956:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"14966:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14952:3:27"},"nodeType":"YulFunctionCall","src":"14952:22:27"},"nodeType":"YulIf","src":"14949:55:27"},{"nodeType":"YulAssignment","src":"15017:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15029:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"15035:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15025:3:27"},"nodeType":"YulFunctionCall","src":"15025:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15017:4:27"}]},{"nodeType":"YulAssignment","src":"15053:34:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"15069:7:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"15078:8:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15065:3:27"},"nodeType":"YulFunctionCall","src":"15065:22:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15053:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14838:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"14848:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14835:2:27"},"nodeType":"YulFunctionCall","src":"14835:21:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14857:3:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"14831:3:27","statements":[]},"src":"14827:270:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"14709:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"14716:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"14729:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"14736:4:27","type":""}],"src":"14681:422:27"},{"body":{"nodeType":"YulBlock","src":"15167:747:27","statements":[{"body":{"nodeType":"YulBlock","src":"15205:52:27","statements":[{"nodeType":"YulAssignment","src":"15219:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15228:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15219:5:27"}]},{"nodeType":"YulLeave","src":"15242:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15187:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15180:6:27"},"nodeType":"YulFunctionCall","src":"15180:16:27"},"nodeType":"YulIf","src":"15177:80:27"},{"body":{"nodeType":"YulBlock","src":"15290:52:27","statements":[{"nodeType":"YulAssignment","src":"15304:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15313:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15304:5:27"}]},{"nodeType":"YulLeave","src":"15327:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15276:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15269:6:27"},"nodeType":"YulFunctionCall","src":"15269:12:27"},"nodeType":"YulIf","src":"15266:76:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"15378:52:27","statements":[{"nodeType":"YulAssignment","src":"15392:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15401:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15392:5:27"}]},{"nodeType":"YulLeave","src":"15415:5:27"}]},"nodeType":"YulCase","src":"15371:59:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15376:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15446:123:27","statements":[{"body":{"nodeType":"YulBlock","src":"15481:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15483:16:27"},"nodeType":"YulFunctionCall","src":"15483:18:27"},"nodeType":"YulExpressionStatement","src":"15483:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15466:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"15476:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15463:2:27"},"nodeType":"YulFunctionCall","src":"15463:17:27"},"nodeType":"YulIf","src":"15460:43:27"},{"nodeType":"YulAssignment","src":"15516:25:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15529:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"15539:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15525:3:27"},"nodeType":"YulFunctionCall","src":"15525:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15516:5:27"}]},{"nodeType":"YulLeave","src":"15554:5:27"}]},"nodeType":"YulCase","src":"15439:130:27","value":{"kind":"number","nodeType":"YulLiteral","src":"15444:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"15358:4:27"},"nodeType":"YulSwitch","src":"15351:218:27"},{"body":{"nodeType":"YulBlock","src":"15667:70:27","statements":[{"nodeType":"YulAssignment","src":"15681:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15694:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"15700:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"15690:3:27"},"nodeType":"YulFunctionCall","src":"15690:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15681:5:27"}]},{"nodeType":"YulLeave","src":"15722:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15591:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"15597:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15588:2:27"},"nodeType":"YulFunctionCall","src":"15588:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15605:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"15615:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15602:2:27"},"nodeType":"YulFunctionCall","src":"15602:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15584:3:27"},"nodeType":"YulFunctionCall","src":"15584:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15628:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"15634:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15625:2:27"},"nodeType":"YulFunctionCall","src":"15625:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15643:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"15653:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15640:2:27"},"nodeType":"YulFunctionCall","src":"15640:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15621:3:27"},"nodeType":"YulFunctionCall","src":"15621:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15581:2:27"},"nodeType":"YulFunctionCall","src":"15581:77:27"},"nodeType":"YulIf","src":"15578:159:27"},{"nodeType":"YulVariableDeclaration","src":"15746:57:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15788:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"15794:8:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"15769:18:27"},"nodeType":"YulFunctionCall","src":"15769:34:27"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"15750:7:27","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"15759:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"15848:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15850:16:27"},"nodeType":"YulFunctionCall","src":"15850:18:27"},"nodeType":"YulExpressionStatement","src":"15850:18:27"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"15818:7:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15835:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15831:3:27"},"nodeType":"YulFunctionCall","src":"15831:6:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"15839:6:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15827:3:27"},"nodeType":"YulFunctionCall","src":"15827:19:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15815:2:27"},"nodeType":"YulFunctionCall","src":"15815:32:27"},"nodeType":"YulIf","src":"15812:58:27"},{"nodeType":"YulAssignment","src":"15879:29:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"15892:7:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"15901:6:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15888:3:27"},"nodeType":"YulFunctionCall","src":"15888:20:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15879:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15138:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15144:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15157:5:27","type":""}],"src":"15108:806:27"},{"body":{"nodeType":"YulBlock","src":"15987:72:27","statements":[{"nodeType":"YulAssignment","src":"15997:56:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16027:4:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16037:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"16047:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16033:3:27"},"nodeType":"YulFunctionCall","src":"16033:19:27"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"16006:20:27"},"nodeType":"YulFunctionCall","src":"16006:47:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15997:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15958:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15964:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15977:5:27","type":""}],"src":"15919:140:27"},{"body":{"nodeType":"YulBlock","src":"16116:116:27","statements":[{"nodeType":"YulAssignment","src":"16126:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16141:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"16144:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16137:3:27"},"nodeType":"YulFunctionCall","src":"16137:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16126:7:27"}]},{"body":{"nodeType":"YulBlock","src":"16204:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16206:16:27"},"nodeType":"YulFunctionCall","src":"16206:18:27"},"nodeType":"YulExpressionStatement","src":"16206:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16175:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16168:6:27"},"nodeType":"YulFunctionCall","src":"16168:9:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16182:1:27"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"16189:7:27"},{"name":"x","nodeType":"YulIdentifier","src":"16198:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16185:3:27"},"nodeType":"YulFunctionCall","src":"16185:15:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16179:2:27"},"nodeType":"YulFunctionCall","src":"16179:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16165:2:27"},"nodeType":"YulFunctionCall","src":"16165:37:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16158:6:27"},"nodeType":"YulFunctionCall","src":"16158:45:27"},"nodeType":"YulIf","src":"16155:71:27"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16095:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"16098:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"16104:7:27","type":""}],"src":"16064:168:27"},{"body":{"nodeType":"YulBlock","src":"16283:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"16314:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16335:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16338:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16328:6:27"},"nodeType":"YulFunctionCall","src":"16328:88:27"},"nodeType":"YulExpressionStatement","src":"16328:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16436:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16439:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16429:6:27"},"nodeType":"YulFunctionCall","src":"16429:15:27"},"nodeType":"YulExpressionStatement","src":"16429:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16464:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16467:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16457:6:27"},"nodeType":"YulFunctionCall","src":"16457:15:27"},"nodeType":"YulExpressionStatement","src":"16457:15:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16303:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16296:6:27"},"nodeType":"YulFunctionCall","src":"16296:9:27"},"nodeType":"YulIf","src":"16293:189:27"},{"nodeType":"YulAssignment","src":"16491:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16500:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"16503:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16496:3:27"},"nodeType":"YulFunctionCall","src":"16496:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"16491:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16268:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"16271:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"16277:1:27","type":""}],"src":"16237:274:27"},{"body":{"nodeType":"YulBlock","src":"16548:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16565:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16568:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16558:6:27"},"nodeType":"YulFunctionCall","src":"16558:88:27"},"nodeType":"YulExpressionStatement","src":"16558:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16662:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16665:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16655:6:27"},"nodeType":"YulFunctionCall","src":"16655:15:27"},"nodeType":"YulExpressionStatement","src":"16655:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16686:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16689:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16679:6:27"},"nodeType":"YulFunctionCall","src":"16679:15:27"},"nodeType":"YulExpressionStatement","src":"16679:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16516:184:27"},{"body":{"nodeType":"YulBlock","src":"16753:77:27","statements":[{"nodeType":"YulAssignment","src":"16763:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16774:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"16777:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16770:3:27"},"nodeType":"YulFunctionCall","src":"16770:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16763:3:27"}]},{"body":{"nodeType":"YulBlock","src":"16802:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16804:16:27"},"nodeType":"YulFunctionCall","src":"16804:18:27"},"nodeType":"YulExpressionStatement","src":"16804:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16794:1:27"},{"name":"sum","nodeType":"YulIdentifier","src":"16797:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16791:2:27"},"nodeType":"YulFunctionCall","src":"16791:10:27"},"nodeType":"YulIf","src":"16788:36:27"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16736:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"16739:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16745:3:27","type":""}],"src":"16705:125:27"},{"body":{"nodeType":"YulBlock","src":"17020:294:27","statements":[{"nodeType":"YulAssignment","src":"17030:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17042:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17053:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17038:3:27"},"nodeType":"YulFunctionCall","src":"17038:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17030:4:27"}]},{"nodeType":"YulVariableDeclaration","src":"17066:52:27","value":{"kind":"number","nodeType":"YulLiteral","src":"17076:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17070:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17134:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17149:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"17157:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17145:3:27"},"nodeType":"YulFunctionCall","src":"17145:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17127:6:27"},"nodeType":"YulFunctionCall","src":"17127:34:27"},"nodeType":"YulExpressionStatement","src":"17127:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17181:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17192:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17177:3:27"},"nodeType":"YulFunctionCall","src":"17177:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17201:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"17209:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17197:3:27"},"nodeType":"YulFunctionCall","src":"17197:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17170:6:27"},"nodeType":"YulFunctionCall","src":"17170:43:27"},"nodeType":"YulExpressionStatement","src":"17170:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17233:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17244:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17229:3:27"},"nodeType":"YulFunctionCall","src":"17229:18:27"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17253:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"17261:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17249:3:27"},"nodeType":"YulFunctionCall","src":"17249:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17222:6:27"},"nodeType":"YulFunctionCall","src":"17222:43:27"},"nodeType":"YulExpressionStatement","src":"17222:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17285:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17296:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17281:3:27"},"nodeType":"YulFunctionCall","src":"17281:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"17301:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17274:6:27"},"nodeType":"YulFunctionCall","src":"17274:34:27"},"nodeType":"YulExpressionStatement","src":"17274:34:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16965:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16976:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16984:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16992:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17000:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17011:4:27","type":""}],"src":"16835:479:27"},{"body":{"nodeType":"YulBlock","src":"17385:200:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17402:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"17407:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17395:6:27"},"nodeType":"YulFunctionCall","src":"17395:19:27"},"nodeType":"YulExpressionStatement","src":"17395:19:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17440:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17445:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17436:3:27"},"nodeType":"YulFunctionCall","src":"17436:14:27"},{"name":"start","nodeType":"YulIdentifier","src":"17452:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"17459:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17423:12:27"},"nodeType":"YulFunctionCall","src":"17423:43:27"},"nodeType":"YulExpressionStatement","src":"17423:43:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17490:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"17495:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17486:3:27"},"nodeType":"YulFunctionCall","src":"17486:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"17504:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17482:3:27"},"nodeType":"YulFunctionCall","src":"17482:27:27"},{"kind":"number","nodeType":"YulLiteral","src":"17511:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17475:6:27"},"nodeType":"YulFunctionCall","src":"17475:38:27"},"nodeType":"YulExpressionStatement","src":"17475:38:27"},{"nodeType":"YulAssignment","src":"17522:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17537:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17550:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17558:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17546:3:27"},"nodeType":"YulFunctionCall","src":"17546:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17567:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17563:3:27"},"nodeType":"YulFunctionCall","src":"17563:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17542:3:27"},"nodeType":"YulFunctionCall","src":"17542:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17533:3:27"},"nodeType":"YulFunctionCall","src":"17533:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"17574:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17529:3:27"},"nodeType":"YulFunctionCall","src":"17529:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17522:3:27"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17354:5:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"17361:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17369:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17377:3:27","type":""}],"src":"17319:266:27"},{"body":{"nodeType":"YulBlock","src":"18001:1130:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18011:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18029:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18040:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18025:3:27"},"nodeType":"YulFunctionCall","src":"18025:19:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"18015:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18053:52:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18063:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18057:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18121:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18136:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"18144:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18132:3:27"},"nodeType":"YulFunctionCall","src":"18132:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18114:6:27"},"nodeType":"YulFunctionCall","src":"18114:34:27"},"nodeType":"YulExpressionStatement","src":"18114:34:27"},{"nodeType":"YulVariableDeclaration","src":"18157:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18167:2:27","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"18161:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18189:9:27"},{"name":"_2","nodeType":"YulIdentifier","src":"18200:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18185:3:27"},"nodeType":"YulFunctionCall","src":"18185:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"18205:3:27","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18178:6:27"},"nodeType":"YulFunctionCall","src":"18178:31:27"},"nodeType":"YulExpressionStatement","src":"18178:31:27"},{"nodeType":"YulVariableDeclaration","src":"18218:17:27","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"18229:6:27"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"18222:3:27","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"18251:6:27"},{"name":"value2","nodeType":"YulIdentifier","src":"18259:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18244:6:27"},"nodeType":"YulFunctionCall","src":"18244:22:27"},"nodeType":"YulExpressionStatement","src":"18244:22:27"},{"nodeType":"YulAssignment","src":"18275:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18286:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18297:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18282:3:27"},"nodeType":"YulFunctionCall","src":"18282:19:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18275:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"18310:20:27","value":{"name":"value1","nodeType":"YulIdentifier","src":"18324:6:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"18314:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18339:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18348:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18343:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"18407:142:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18428:3:27"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18456:6:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"18437:18:27"},"nodeType":"YulFunctionCall","src":"18437:26:27"},{"name":"_1","nodeType":"YulIdentifier","src":"18465:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18433:3:27"},"nodeType":"YulFunctionCall","src":"18433:35:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18421:6:27"},"nodeType":"YulFunctionCall","src":"18421:48:27"},"nodeType":"YulExpressionStatement","src":"18421:48:27"},{"nodeType":"YulAssignment","src":"18482:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18493:3:27"},{"name":"_2","nodeType":"YulIdentifier","src":"18498:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18489:3:27"},"nodeType":"YulFunctionCall","src":"18489:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18482:3:27"}]},{"nodeType":"YulAssignment","src":"18514:25:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18528:6:27"},{"name":"_2","nodeType":"YulIdentifier","src":"18536:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18524:3:27"},"nodeType":"YulFunctionCall","src":"18524:15:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18514:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18369:1:27"},{"name":"value2","nodeType":"YulIdentifier","src":"18372:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18366:2:27"},"nodeType":"YulFunctionCall","src":"18366:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18380:18:27","statements":[{"nodeType":"YulAssignment","src":"18382:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18391:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"18394:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18387:3:27"},"nodeType":"YulFunctionCall","src":"18387:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18382:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"18362:3:27","statements":[]},"src":"18358:191:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18569:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18580:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18565:3:27"},"nodeType":"YulFunctionCall","src":"18565:18:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18589:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18594:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18585:3:27"},"nodeType":"YulFunctionCall","src":"18585:19:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18558:6:27"},"nodeType":"YulFunctionCall","src":"18558:47:27"},"nodeType":"YulExpressionStatement","src":"18558:47:27"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18621:3:27"},{"name":"value4","nodeType":"YulIdentifier","src":"18626:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18614:6:27"},"nodeType":"YulFunctionCall","src":"18614:19:27"},"nodeType":"YulExpressionStatement","src":"18614:19:27"},{"body":{"nodeType":"YulBlock","src":"18724:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18733:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18736:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18726:6:27"},"nodeType":"YulFunctionCall","src":"18726:12:27"},"nodeType":"YulExpressionStatement","src":"18726:12:27"}]},"condition":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18648:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18656:66:27","type":"","value":"0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18645:2:27"},"nodeType":"YulFunctionCall","src":"18645:78:27"},"nodeType":"YulIf","src":"18642:98:27"},{"nodeType":"YulVariableDeclaration","src":"18749:28:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18767:1:27","type":"","value":"5"},{"name":"value4","nodeType":"YulIdentifier","src":"18770:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18763:3:27"},"nodeType":"YulFunctionCall","src":"18763:14:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18753:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18803:3:27"},{"name":"_2","nodeType":"YulIdentifier","src":"18808:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18799:3:27"},"nodeType":"YulFunctionCall","src":"18799:12:27"},{"name":"value3","nodeType":"YulIdentifier","src":"18813:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"18821:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18786:12:27"},"nodeType":"YulFunctionCall","src":"18786:42:27"},"nodeType":"YulExpressionStatement","src":"18786:42:27"},{"nodeType":"YulVariableDeclaration","src":"18837:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18851:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18856:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18847:3:27"},"nodeType":"YulFunctionCall","src":"18847:16:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"18841:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18883:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18894:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18879:3:27"},"nodeType":"YulFunctionCall","src":"18879:18:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"18907:2:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18911:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18903:3:27"},"nodeType":"YulFunctionCall","src":"18903:18:27"},{"name":"_2","nodeType":"YulIdentifier","src":"18923:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18899:3:27"},"nodeType":"YulFunctionCall","src":"18899:27:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18872:6:27"},"nodeType":"YulFunctionCall","src":"18872:55:27"},"nodeType":"YulExpressionStatement","src":"18872:55:27"},{"nodeType":"YulVariableDeclaration","src":"18936:63:27","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18979:6:27"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"18991:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"18995:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18987:3:27"},"nodeType":"YulFunctionCall","src":"18987:11:27"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"18950:28:27"},"nodeType":"YulFunctionCall","src":"18950:49:27"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"18940:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19019:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19030:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19015:3:27"},"nodeType":"YulFunctionCall","src":"19015:19:27"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"19040:6:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19048:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19036:3:27"},"nodeType":"YulFunctionCall","src":"19036:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19008:6:27"},"nodeType":"YulFunctionCall","src":"19008:51:27"},"nodeType":"YulExpressionStatement","src":"19008:51:27"},{"nodeType":"YulAssignment","src":"19068:57:27","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"19102:6:27"},{"name":"value7","nodeType":"YulIdentifier","src":"19110:6:27"},{"name":"tail_2","nodeType":"YulIdentifier","src":"19118:6:27"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"19076:25:27"},"nodeType":"YulFunctionCall","src":"19076:49:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19068:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_calldata_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17914:9:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"17925:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"17933:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17941:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17949:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17957:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17965:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17973:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17981:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17992:4:27","type":""}],"src":"17590:1541:27"},{"body":{"nodeType":"YulBlock","src":"19214:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"19260:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19269:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19272:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19262:6:27"},"nodeType":"YulFunctionCall","src":"19262:12:27"},"nodeType":"YulExpressionStatement","src":"19262:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19235:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19244:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19231:3:27"},"nodeType":"YulFunctionCall","src":"19231:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"19256:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19227:3:27"},"nodeType":"YulFunctionCall","src":"19227:32:27"},"nodeType":"YulIf","src":"19224:52:27"},{"nodeType":"YulVariableDeclaration","src":"19285:29:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19304:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19298:5:27"},"nodeType":"YulFunctionCall","src":"19298:16:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19289:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19345:5:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"19323:21:27"},"nodeType":"YulFunctionCall","src":"19323:28:27"},"nodeType":"YulExpressionStatement","src":"19323:28:27"},{"nodeType":"YulAssignment","src":"19360:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"19370:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19360:6:27"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19180:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19191:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19203:6:27","type":""}],"src":"19136:245:27"},{"body":{"nodeType":"YulBlock","src":"19435:79:27","statements":[{"nodeType":"YulAssignment","src":"19445:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19457:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"19460:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19453:3:27"},"nodeType":"YulFunctionCall","src":"19453:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19445:4:27"}]},{"body":{"nodeType":"YulBlock","src":"19486:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19488:16:27"},"nodeType":"YulFunctionCall","src":"19488:18:27"},"nodeType":"YulExpressionStatement","src":"19488:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"19477:4:27"},{"name":"x","nodeType":"YulIdentifier","src":"19483:1:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19474:2:27"},"nodeType":"YulFunctionCall","src":"19474:11:27"},"nodeType":"YulIf","src":"19471:37:27"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19417:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"19420:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19426:4:27","type":""}],"src":"19386:128:27"},{"body":{"nodeType":"YulBlock","src":"19732:329:27","statements":[{"nodeType":"YulAssignment","src":"19742:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19754:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19765:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19750:3:27"},"nodeType":"YulFunctionCall","src":"19750:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19742:4:27"}]},{"nodeType":"YulVariableDeclaration","src":"19778:52:27","value":{"kind":"number","nodeType":"YulLiteral","src":"19788:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19782:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19846:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19861:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"19869:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19857:3:27"},"nodeType":"YulFunctionCall","src":"19857:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19839:6:27"},"nodeType":"YulFunctionCall","src":"19839:34:27"},"nodeType":"YulExpressionStatement","src":"19839:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19893:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19904:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19889:3:27"},"nodeType":"YulFunctionCall","src":"19889:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19913:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"19921:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19909:3:27"},"nodeType":"YulFunctionCall","src":"19909:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19882:6:27"},"nodeType":"YulFunctionCall","src":"19882:43:27"},"nodeType":"YulExpressionStatement","src":"19882:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19945:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19956:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19941:3:27"},"nodeType":"YulFunctionCall","src":"19941:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"19961:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19934:6:27"},"nodeType":"YulFunctionCall","src":"19934:34:27"},"nodeType":"YulExpressionStatement","src":"19934:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19988:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19999:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19984:3:27"},"nodeType":"YulFunctionCall","src":"19984:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"20004:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19977:6:27"},"nodeType":"YulFunctionCall","src":"19977:34:27"},"nodeType":"YulExpressionStatement","src":"19977:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20031:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20042:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20027:3:27"},"nodeType":"YulFunctionCall","src":"20027:19:27"},{"name":"value4","nodeType":"YulIdentifier","src":"20048:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20020:6:27"},"nodeType":"YulFunctionCall","src":"20020:35:27"},"nodeType":"YulExpressionStatement","src":"20020:35:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19669:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19680:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19688:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19696:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19704:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19712:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19723:4:27","type":""}],"src":"19519:542:27"},{"body":{"nodeType":"YulBlock","src":"20307:382:27","statements":[{"nodeType":"YulAssignment","src":"20317:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20329:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20340:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20325:3:27"},"nodeType":"YulFunctionCall","src":"20325:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20317:4:27"}]},{"nodeType":"YulVariableDeclaration","src":"20353:52:27","value":{"kind":"number","nodeType":"YulLiteral","src":"20363:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20357:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20421:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20436:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"20444:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20432:3:27"},"nodeType":"YulFunctionCall","src":"20432:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20414:6:27"},"nodeType":"YulFunctionCall","src":"20414:34:27"},"nodeType":"YulExpressionStatement","src":"20414:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20468:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20479:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20464:3:27"},"nodeType":"YulFunctionCall","src":"20464:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20488:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"20496:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20484:3:27"},"nodeType":"YulFunctionCall","src":"20484:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20457:6:27"},"nodeType":"YulFunctionCall","src":"20457:43:27"},"nodeType":"YulExpressionStatement","src":"20457:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20520:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20531:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20516:3:27"},"nodeType":"YulFunctionCall","src":"20516:18:27"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20540:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"20548:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20536:3:27"},"nodeType":"YulFunctionCall","src":"20536:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20509:6:27"},"nodeType":"YulFunctionCall","src":"20509:43:27"},"nodeType":"YulExpressionStatement","src":"20509:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20572:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20583:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20568:3:27"},"nodeType":"YulFunctionCall","src":"20568:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"20588:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20561:6:27"},"nodeType":"YulFunctionCall","src":"20561:34:27"},"nodeType":"YulExpressionStatement","src":"20561:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20615:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20626:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20611:3:27"},"nodeType":"YulFunctionCall","src":"20611:19:27"},{"name":"value4","nodeType":"YulIdentifier","src":"20632:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20604:6:27"},"nodeType":"YulFunctionCall","src":"20604:35:27"},"nodeType":"YulExpressionStatement","src":"20604:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20659:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20670:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20655:3:27"},"nodeType":"YulFunctionCall","src":"20655:19:27"},{"name":"value5","nodeType":"YulIdentifier","src":"20676:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20648:6:27"},"nodeType":"YulFunctionCall","src":"20648:35:27"},"nodeType":"YulExpressionStatement","src":"20648:35:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20236:9:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20247:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20255:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20263:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20271:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20279:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20287:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20298:4:27","type":""}],"src":"20066:623:27"},{"body":{"nodeType":"YulBlock","src":"20868:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20885:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20896:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20878:6:27"},"nodeType":"YulFunctionCall","src":"20878:21:27"},"nodeType":"YulExpressionStatement","src":"20878:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20919:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20930:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20915:3:27"},"nodeType":"YulFunctionCall","src":"20915:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"20935:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20908:6:27"},"nodeType":"YulFunctionCall","src":"20908:30:27"},"nodeType":"YulExpressionStatement","src":"20908:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20958:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20969:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20954:3:27"},"nodeType":"YulFunctionCall","src":"20954:18:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"20974:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20947:6:27"},"nodeType":"YulFunctionCall","src":"20947:62:27"},"nodeType":"YulExpressionStatement","src":"20947:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21029:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21040:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21025:3:27"},"nodeType":"YulFunctionCall","src":"21025:18:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"21045:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21018:6:27"},"nodeType":"YulFunctionCall","src":"21018:36:27"},"nodeType":"YulExpressionStatement","src":"21018:36:27"},{"nodeType":"YulAssignment","src":"21063:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21075:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21086:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21071:3:27"},"nodeType":"YulFunctionCall","src":"21071:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21063:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20845:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20859:4:27","type":""}],"src":"20694:402:27"},{"body":{"nodeType":"YulBlock","src":"21228:144:27","statements":[{"nodeType":"YulAssignment","src":"21238:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21250:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21261:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21246:3:27"},"nodeType":"YulFunctionCall","src":"21246:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21238:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21280:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"21291:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21273:6:27"},"nodeType":"YulFunctionCall","src":"21273:25:27"},"nodeType":"YulExpressionStatement","src":"21273:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21318:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21329:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21314:3:27"},"nodeType":"YulFunctionCall","src":"21314:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21338:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21346:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21334:3:27"},"nodeType":"YulFunctionCall","src":"21334:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21307:6:27"},"nodeType":"YulFunctionCall","src":"21307:59:27"},"nodeType":"YulExpressionStatement","src":"21307:59:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint64__to_t_uint256_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21189:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21200:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21208:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21219:4:27","type":""}],"src":"21101:271:27"},{"body":{"nodeType":"YulBlock","src":"21560:231:27","statements":[{"nodeType":"YulAssignment","src":"21570:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21582:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21593:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21578:3:27"},"nodeType":"YulFunctionCall","src":"21578:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21570:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21613:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21628:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21636:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21624:3:27"},"nodeType":"YulFunctionCall","src":"21624:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21606:6:27"},"nodeType":"YulFunctionCall","src":"21606:50:27"},"nodeType":"YulExpressionStatement","src":"21606:50:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21676:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21687:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21672:3:27"},"nodeType":"YulFunctionCall","src":"21672:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"21692:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21665:6:27"},"nodeType":"YulFunctionCall","src":"21665:34:27"},"nodeType":"YulExpressionStatement","src":"21665:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21719:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21730:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21715:3:27"},"nodeType":"YulFunctionCall","src":"21715:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"21735:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21708:6:27"},"nodeType":"YulFunctionCall","src":"21708:34:27"},"nodeType":"YulExpressionStatement","src":"21708:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21773:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21758:3:27"},"nodeType":"YulFunctionCall","src":"21758:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"21778:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21751:6:27"},"nodeType":"YulFunctionCall","src":"21751:34:27"},"nodeType":"YulExpressionStatement","src":"21751:34:27"}]},"name":"abi_encode_tuple_t_uint64_t_uint256_t_uint256_t_uint256__to_t_uint64_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21505:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21516:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21524:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21532:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21540:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21551:4:27","type":""}],"src":"21377:414:27"},{"body":{"nodeType":"YulBlock","src":"21970:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21987:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21998:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21980:6:27"},"nodeType":"YulFunctionCall","src":"21980:21:27"},"nodeType":"YulExpressionStatement","src":"21980:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22021:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22032:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22017:3:27"},"nodeType":"YulFunctionCall","src":"22017:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"22037:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22010:6:27"},"nodeType":"YulFunctionCall","src":"22010:30:27"},"nodeType":"YulExpressionStatement","src":"22010:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22060:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22071:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22056:3:27"},"nodeType":"YulFunctionCall","src":"22056:18:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22076:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22049:6:27"},"nodeType":"YulFunctionCall","src":"22049:62:27"},"nodeType":"YulExpressionStatement","src":"22049:62:27"},{"nodeType":"YulAssignment","src":"22120:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22132:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22143:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22128:3:27"},"nodeType":"YulFunctionCall","src":"22128:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22120:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21947:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21961:4:27","type":""}],"src":"21796:356:27"},{"body":{"nodeType":"YulBlock","src":"22189:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22206:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22209:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22199:6:27"},"nodeType":"YulFunctionCall","src":"22199:88:27"},"nodeType":"YulExpressionStatement","src":"22199:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22303:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22306:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22296:6:27"},"nodeType":"YulFunctionCall","src":"22296:15:27"},"nodeType":"YulExpressionStatement","src":"22296:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22327:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22330:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22320:6:27"},"nodeType":"YulFunctionCall","src":"22320:15:27"},"nodeType":"YulExpressionStatement","src":"22320:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"22157:184:27"},{"body":{"nodeType":"YulBlock","src":"22446:101:27","statements":[{"nodeType":"YulAssignment","src":"22456:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22468:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22479:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22464:3:27"},"nodeType":"YulFunctionCall","src":"22464:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22456:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22498:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22513:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22521:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22509:3:27"},"nodeType":"YulFunctionCall","src":"22509:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22491:6:27"},"nodeType":"YulFunctionCall","src":"22491:50:27"},"nodeType":"YulExpressionStatement","src":"22491:50:27"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22415:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22426:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22437:4:27","type":""}],"src":"22346:201:27"},{"body":{"nodeType":"YulBlock","src":"22759:628:27","statements":[{"nodeType":"YulAssignment","src":"22769:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22781:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22792:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22777:3:27"},"nodeType":"YulFunctionCall","src":"22777:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22769:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22812:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22827:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22835:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22823:3:27"},"nodeType":"YulFunctionCall","src":"22823:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22805:6:27"},"nodeType":"YulFunctionCall","src":"22805:74:27"},"nodeType":"YulExpressionStatement","src":"22805:74:27"},{"nodeType":"YulVariableDeclaration","src":"22888:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22898:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22892:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22936:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22947:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22932:3:27"},"nodeType":"YulFunctionCall","src":"22932:18:27"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22962:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22956:5:27"},"nodeType":"YulFunctionCall","src":"22956:13:27"},{"name":"_1","nodeType":"YulIdentifier","src":"22971:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22952:3:27"},"nodeType":"YulFunctionCall","src":"22952:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22925:6:27"},"nodeType":"YulFunctionCall","src":"22925:50:27"},"nodeType":"YulExpressionStatement","src":"22925:50:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22995:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23006:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22991:3:27"},"nodeType":"YulFunctionCall","src":"22991:18:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23025:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23033:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23021:3:27"},"nodeType":"YulFunctionCall","src":"23021:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23015:5:27"},"nodeType":"YulFunctionCall","src":"23015:22:27"},{"name":"_1","nodeType":"YulIdentifier","src":"23039:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23011:3:27"},"nodeType":"YulFunctionCall","src":"23011:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22984:6:27"},"nodeType":"YulFunctionCall","src":"22984:59:27"},"nodeType":"YulExpressionStatement","src":"22984:59:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23063:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23074:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23059:3:27"},"nodeType":"YulFunctionCall","src":"23059:18:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23093:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23101:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23089:3:27"},"nodeType":"YulFunctionCall","src":"23089:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23083:5:27"},"nodeType":"YulFunctionCall","src":"23083:22:27"},{"name":"_1","nodeType":"YulIdentifier","src":"23107:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23079:3:27"},"nodeType":"YulFunctionCall","src":"23079:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23052:6:27"},"nodeType":"YulFunctionCall","src":"23052:59:27"},"nodeType":"YulExpressionStatement","src":"23052:59:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23131:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23142:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23127:3:27"},"nodeType":"YulFunctionCall","src":"23127:19:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23162:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23170:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23158:3:27"},"nodeType":"YulFunctionCall","src":"23158:15:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23152:5:27"},"nodeType":"YulFunctionCall","src":"23152:22:27"},{"name":"_1","nodeType":"YulIdentifier","src":"23176:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23148:3:27"},"nodeType":"YulFunctionCall","src":"23148:31:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23120:6:27"},"nodeType":"YulFunctionCall","src":"23120:60:27"},"nodeType":"YulExpressionStatement","src":"23120:60:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23200:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23211:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23196:3:27"},"nodeType":"YulFunctionCall","src":"23196:19:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23231:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23239:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23227:3:27"},"nodeType":"YulFunctionCall","src":"23227:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23221:5:27"},"nodeType":"YulFunctionCall","src":"23221:23:27"},{"name":"_1","nodeType":"YulIdentifier","src":"23246:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23217:3:27"},"nodeType":"YulFunctionCall","src":"23217:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23189:6:27"},"nodeType":"YulFunctionCall","src":"23189:61:27"},"nodeType":"YulExpressionStatement","src":"23189:61:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23270:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23281:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23266:3:27"},"nodeType":"YulFunctionCall","src":"23266:19:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23301:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23309:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23297:3:27"},"nodeType":"YulFunctionCall","src":"23297:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23291:5:27"},"nodeType":"YulFunctionCall","src":"23291:23:27"},{"name":"_1","nodeType":"YulIdentifier","src":"23316:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23287:3:27"},"nodeType":"YulFunctionCall","src":"23287:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23259:6:27"},"nodeType":"YulFunctionCall","src":"23259:61:27"},"nodeType":"YulExpressionStatement","src":"23259:61:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23340:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23351:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23336:3:27"},"nodeType":"YulFunctionCall","src":"23336:19:27"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23367:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23375:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23363:3:27"},"nodeType":"YulFunctionCall","src":"23363:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23357:5:27"},"nodeType":"YulFunctionCall","src":"23357:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23329:6:27"},"nodeType":"YulFunctionCall","src":"23329:52:27"},"nodeType":"YulExpressionStatement","src":"23329:52:27"}]},"name":"abi_encode_tuple_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__to_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22720:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22731:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22739:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22750:4:27","type":""}],"src":"22552:835:27"},{"body":{"nodeType":"YulBlock","src":"23521:168:27","statements":[{"nodeType":"YulAssignment","src":"23531:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23543:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23554:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23539:3:27"},"nodeType":"YulFunctionCall","src":"23539:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23531:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23573:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23588:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23596:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23584:3:27"},"nodeType":"YulFunctionCall","src":"23584:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23566:6:27"},"nodeType":"YulFunctionCall","src":"23566:74:27"},"nodeType":"YulExpressionStatement","src":"23566:74:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23660:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23671:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23656:3:27"},"nodeType":"YulFunctionCall","src":"23656:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"23676:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23649:6:27"},"nodeType":"YulFunctionCall","src":"23649:34:27"},"nodeType":"YulExpressionStatement","src":"23649:34:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23482:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23493:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23501:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23512:4:27","type":""}],"src":"23392:297:27"},{"body":{"nodeType":"YulBlock","src":"23773:194:27","statements":[{"body":{"nodeType":"YulBlock","src":"23819:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23828:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23831:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23821:6:27"},"nodeType":"YulFunctionCall","src":"23821:12:27"},"nodeType":"YulExpressionStatement","src":"23821:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23794:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23803:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23790:3:27"},"nodeType":"YulFunctionCall","src":"23790:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"23815:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23786:3:27"},"nodeType":"YulFunctionCall","src":"23786:32:27"},"nodeType":"YulIf","src":"23783:52:27"},{"nodeType":"YulVariableDeclaration","src":"23844:29:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23863:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23857:5:27"},"nodeType":"YulFunctionCall","src":"23857:16:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23848:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"23921:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23930:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23933:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23923:6:27"},"nodeType":"YulFunctionCall","src":"23923:12:27"},"nodeType":"YulExpressionStatement","src":"23923:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23895:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23906:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"23913:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23902:3:27"},"nodeType":"YulFunctionCall","src":"23902:16:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23892:2:27"},"nodeType":"YulFunctionCall","src":"23892:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23885:6:27"},"nodeType":"YulFunctionCall","src":"23885:35:27"},"nodeType":"YulIf","src":"23882:55:27"},{"nodeType":"YulAssignment","src":"23946:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"23956:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23946:6:27"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23739:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23750:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23762:6:27","type":""}],"src":"23694:273:27"},{"body":{"nodeType":"YulBlock","src":"24053:103:27","statements":[{"body":{"nodeType":"YulBlock","src":"24099:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24108:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24111:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24101:6:27"},"nodeType":"YulFunctionCall","src":"24101:12:27"},"nodeType":"YulExpressionStatement","src":"24101:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24074:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24083:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24070:3:27"},"nodeType":"YulFunctionCall","src":"24070:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"24095:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24066:3:27"},"nodeType":"YulFunctionCall","src":"24066:32:27"},"nodeType":"YulIf","src":"24063:52:27"},{"nodeType":"YulAssignment","src":"24124:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24140:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24134:5:27"},"nodeType":"YulFunctionCall","src":"24134:16:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24124:6:27"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24019:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24030:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24042:6:27","type":""}],"src":"23972:184:27"},{"body":{"nodeType":"YulBlock","src":"24220:120:27","statements":[{"nodeType":"YulAssignment","src":"24230:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24245:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24239:5:27"},"nodeType":"YulFunctionCall","src":"24239:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24230:5:27"}]},{"body":{"nodeType":"YulBlock","src":"24318:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24327:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24330:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24320:6:27"},"nodeType":"YulFunctionCall","src":"24320:12:27"},"nodeType":"YulExpressionStatement","src":"24320:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24274:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24285:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"24292:22:27","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24281:3:27"},"nodeType":"YulFunctionCall","src":"24281:34:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24271:2:27"},"nodeType":"YulFunctionCall","src":"24271:45:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24264:6:27"},"nodeType":"YulFunctionCall","src":"24264:53:27"},"nodeType":"YulIf","src":"24261:73:27"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24199:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24210:5:27","type":""}],"src":"24161:179:27"},{"body":{"nodeType":"YulBlock","src":"24491:327:27","statements":[{"body":{"nodeType":"YulBlock","src":"24538:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24547:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24550:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24540:6:27"},"nodeType":"YulFunctionCall","src":"24540:12:27"},"nodeType":"YulExpressionStatement","src":"24540:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24512:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24521:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24508:3:27"},"nodeType":"YulFunctionCall","src":"24508:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"24533:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24504:3:27"},"nodeType":"YulFunctionCall","src":"24504:33:27"},"nodeType":"YulIf","src":"24501:53:27"},{"nodeType":"YulAssignment","src":"24563:49:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24602:9:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"24573:28:27"},"nodeType":"YulFunctionCall","src":"24573:39:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24563:6:27"}]},{"nodeType":"YulAssignment","src":"24621:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24641:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24652:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24637:3:27"},"nodeType":"YulFunctionCall","src":"24637:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24631:5:27"},"nodeType":"YulFunctionCall","src":"24631:25:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24621:6:27"}]},{"nodeType":"YulAssignment","src":"24665:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24685:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24696:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24681:3:27"},"nodeType":"YulFunctionCall","src":"24681:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24675:5:27"},"nodeType":"YulFunctionCall","src":"24675:25:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"24665:6:27"}]},{"nodeType":"YulAssignment","src":"24709:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24729:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24740:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24725:3:27"},"nodeType":"YulFunctionCall","src":"24725:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24719:5:27"},"nodeType":"YulFunctionCall","src":"24719:25:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"24709:6:27"}]},{"nodeType":"YulAssignment","src":"24753:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24796:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24807:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24792:3:27"},"nodeType":"YulFunctionCall","src":"24792:19:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"24763:28:27"},"nodeType":"YulFunctionCall","src":"24763:49:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"24753:6:27"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24425:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24436:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24448:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24456:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24464:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24472:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24480:6:27","type":""}],"src":"24345:473:27"},{"body":{"nodeType":"YulBlock","src":"24893:61:27","statements":[{"nodeType":"YulAssignment","src":"24903:45:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"24933:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"24939:8:27"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"24912:20:27"},"nodeType":"YulFunctionCall","src":"24912:36:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24903:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"24864:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"24870:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"24883:5:27","type":""}],"src":"24823:131:27"},{"body":{"nodeType":"YulBlock","src":"25010:243:27","statements":[{"body":{"nodeType":"YulBlock","src":"25052:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25073:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25076:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25066:6:27"},"nodeType":"YulFunctionCall","src":"25066:88:27"},"nodeType":"YulExpressionStatement","src":"25066:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25174:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25177:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25167:6:27"},"nodeType":"YulFunctionCall","src":"25167:15:27"},"nodeType":"YulExpressionStatement","src":"25167:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25202:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25205:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25195:6:27"},"nodeType":"YulFunctionCall","src":"25195:15:27"},"nodeType":"YulExpressionStatement","src":"25195:15:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25033:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"25040:1:27","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25030:2:27"},"nodeType":"YulFunctionCall","src":"25030:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25023:6:27"},"nodeType":"YulFunctionCall","src":"25023:20:27"},"nodeType":"YulIf","src":"25020:200:27"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25236:3:27"},{"name":"value","nodeType":"YulIdentifier","src":"25241:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25229:6:27"},"nodeType":"YulFunctionCall","src":"25229:18:27"},"nodeType":"YulExpressionStatement","src":"25229:18:27"}]},"name":"abi_encode_enum_TokenType","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24994:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25001:3:27","type":""}],"src":"24959:294:27"},{"body":{"nodeType":"YulBlock","src":"25371:95:27","statements":[{"nodeType":"YulAssignment","src":"25381:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25393:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25404:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25389:3:27"},"nodeType":"YulFunctionCall","src":"25389:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25381:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25442:6:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"25450:9:27"}],"functionName":{"name":"abi_encode_enum_TokenType","nodeType":"YulIdentifier","src":"25416:25:27"},"nodeType":"YulFunctionCall","src":"25416:44:27"},"nodeType":"YulExpressionStatement","src":"25416:44:27"}]},"name":"abi_encode_tuple_t_enum$_TokenType_$6827__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25340:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25351:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25362:4:27","type":""}],"src":"25258:208:27"},{"body":{"nodeType":"YulBlock","src":"25612:187:27","statements":[{"nodeType":"YulAssignment","src":"25622:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25634:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25645:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25630:3:27"},"nodeType":"YulFunctionCall","src":"25630:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25622:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25664:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25679:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25687:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25675:3:27"},"nodeType":"YulFunctionCall","src":"25675:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25657:6:27"},"nodeType":"YulFunctionCall","src":"25657:74:27"},"nodeType":"YulExpressionStatement","src":"25657:74:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25766:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25778:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25789:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25774:3:27"},"nodeType":"YulFunctionCall","src":"25774:18:27"}],"functionName":{"name":"abi_encode_enum_TokenType","nodeType":"YulIdentifier","src":"25740:25:27"},"nodeType":"YulFunctionCall","src":"25740:53:27"},"nodeType":"YulExpressionStatement","src":"25740:53:27"}]},"name":"abi_encode_tuple_t_address_t_enum$_TokenType_$6827__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25573:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25584:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25592:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25603:4:27","type":""}],"src":"25471:328:27"},{"body":{"nodeType":"YulBlock","src":"25836:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25853:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25856:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25846:6:27"},"nodeType":"YulFunctionCall","src":"25846:88:27"},"nodeType":"YulExpressionStatement","src":"25846:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25950:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25953:4:27","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25943:6:27"},"nodeType":"YulFunctionCall","src":"25943:15:27"},"nodeType":"YulExpressionStatement","src":"25943:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25974:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25977:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25967:6:27"},"nodeType":"YulFunctionCall","src":"25967:15:27"},"nodeType":"YulExpressionStatement","src":"25967:15:27"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"25804:184:27"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_uint64(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint64__to_t_uint256_t_uint256_t_uint256_t_uint64__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_enum$_TokenType_$6827t_struct$_VaultSetupParamemters_$6896_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 352) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value2 := value\n        if slt(add(_1, not(95)), 0xe0) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xe0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint64(add(headStart, 96)))\n        mstore(add(memPtr, 32), abi_decode_uint64(add(headStart, 128)))\n        mstore(add(memPtr, 64), abi_decode_uint64(add(headStart, 160)))\n        mstore(add(memPtr, 96), abi_decode_uint64(add(headStart, 192)))\n        mstore(add(memPtr, 128), abi_decode_uint64(add(headStart, 0xe0)))\n        mstore(add(memPtr, 160), abi_decode_uint64(add(headStart, 256)))\n        mstore(add(memPtr, 192), calldataload(add(headStart, 288)))\n        value3 := memPtr\n        value4 := abi_decode_bool(add(headStart, 320))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_struct_Vault(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_tuple_t_struct$_TokenVault_$6855_memory_ptr__to_t_struct$_TokenVault_$6855_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        abi_encode_struct_Vault(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_struct_Vault(memberValue0, add(headStart, 0x40))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        mstore(add(headStart, 0x80), mload(memberValue0_1))\n        let memberValue0_2 := mload(add(memberValue0_1, 0x20))\n        abi_encode_uint64(memberValue0_2, add(headStart, 160))\n        let memberValue0_3 := mload(add(memberValue0_1, 0x40))\n        abi_encode_uint64(memberValue0_3, add(headStart, 192))\n        let memberValue0_4 := mload(add(memberValue0_1, 0x60))\n        abi_encode_uint64(memberValue0_4, add(headStart, 224))\n        let memberValue0_5 := mload(add(memberValue0_1, 0x80))\n        let _1 := 256\n        abi_encode_uint64(memberValue0_5, add(headStart, _1))\n        let memberValue0_6 := mload(add(memberValue0_1, 160))\n        let _2 := 288\n        abi_encode_uint64(memberValue0_6, add(headStart, _2))\n        let memberValue0_7 := mload(add(memberValue0_1, 192))\n        abi_encode_uint64(memberValue0_7, add(headStart, 320))\n        let memberValue0_8 := mload(add(memberValue0_1, 224))\n        abi_encode_uint64(memberValue0_8, add(headStart, 352))\n        let memberValue0_9 := mload(add(memberValue0_1, _1))\n        abi_encode_uint64(memberValue0_9, add(headStart, 384))\n        mstore(add(headStart, 416), mload(add(memberValue0_1, _2)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_struct$_LiquidatedWarning_$6881_memory_ptr__to_t_struct$_LiquidatedWarning_$6881_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_calldata_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), 160)\n        let pos := tail_1\n        mstore(tail_1, value2)\n        pos := add(headStart, 192)\n        let srcPtr := value1\n        let i := 0\n        for { } lt(i, value2) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_address(srcPtr), _1))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        mstore(pos, value4)\n        if gt(value4, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert(0, 0) }\n        let length := shl(5, value4)\n        calldatacopy(add(pos, _2), value3, length)\n        let _3 := add(pos, length)\n        mstore(add(headStart, 96), add(sub(_3, headStart), _2))\n        let tail_2 := abi_encode_array_uint256_dyn(value5, add(_3, _2))\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes_calldata(value6, value7, tail_2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint64__to_t_uint256_t_uint64__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint64_t_uint256_t_uint256_t_uint256__to_t_uint64_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__to_t_address_t_struct$_VaultSetupParamemters_$6896_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        let _1 := 0xffffffffffffffff\n        mstore(add(headStart, 32), and(mload(value1), _1))\n        mstore(add(headStart, 64), and(mload(add(value1, 32)), _1))\n        mstore(add(headStart, 96), and(mload(add(value1, 64)), _1))\n        mstore(add(headStart, 128), and(mload(add(value1, 96)), _1))\n        mstore(add(headStart, 160), and(mload(add(value1, 128)), _1))\n        mstore(add(headStart, 192), and(mload(add(value1, 160)), _1))\n        mstore(add(headStart, 224), mload(add(value1, 192)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_enum_TokenType(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_TokenType_$6827__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_TokenType(value0, headStart)\n    }\n    function abi_encode_tuple_t_address_t_enum$_TokenType_$6827__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        abi_encode_enum_TokenType(value1, add(headStart, 32))\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106102c65760003560e01c80637dbca35311610179578063b6812c99116100d6578063dbe7cc171161008a578063fdda829511610064578063fdda82951461085b578063ff9b8bb81461087b578063ffc9896b1461093357600080fd5b8063dbe7cc17146107fb578063f2fde38b1461081b578063f6aa13f21461083b57600080fd5b8063c223a9be116100bb578063c223a9be146107a4578063d02641a0146107c4578063d37db1d2146107e457600080fd5b8063b6812c9914610764578063bf3702991461078457600080fd5b8063a2d20cf21161012d578063aaf5eb6811610112578063aaf5eb6814610708578063b4240c9914610724578063b5c5f6721461074457600080fd5b8063a2d20cf214610685578063aab3f868146106e857600080fd5b806389a1e8031161015e57806389a1e8031461061d5780638da5cb5b1461063d57806393f2d72e1461066557600080fd5b80637dbca353146105ea57806382a5b1aa146105fd57600080fd5b80632c895aff116102275780634cd5491c116101db5780636ad9f9df116101c05780636ad9f9df14610595578063715018a6146105b557806378767d70146105ca57600080fd5b80634cd5491c1461054457806361a552dc1461056457600080fd5b8063351b14a01161020c578063351b14a0146104e4578063429e2c1a146105115780634b8a35291461053157600080fd5b80632c895aff1461049757806330941e62146104b757600080fd5b80631d81944f1161027e578063249d39e911610263578063249d39e91461044057806325d07a95146104575780632b83cccd1461047757600080fd5b80631d81944f1461040057806322867d781461042057600080fd5b80630f342ee9116102af5780630f342ee91461033c578063150b7a021461036a5780631880b981146103e057600080fd5b80630d30320e146102cb5780630d8459fe146102ed575b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613f8d565b61096e565b005b3480156102f957600080fd5b5061030d610308366004613fc9565b610a3a565b6040805194855260208501939093529183015267ffffffffffffffff1660608201526080015b60405180910390f35b34801561034857600080fd5b5061035c610357366004613ffd565b610a59565b604051908152602001610333565b34801561037657600080fd5b506103af610385366004614086565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610333565b3480156103ec57600080fd5b506102eb6103fb366004614123565b610aef565b34801561040c57600080fd5b506102eb61041b36600461423b565b610b0b565b34801561042c57600080fd5b506102eb61043b366004614272565b610bf1565b34801561044c57600080fd5b5061035c620186a081565b34801561046357600080fd5b5061035c610472366004614272565b610d74565b34801561048357600080fd5b506102eb61049236600461429c565b610de3565b3480156104a357600080fd5b5061035c6104b2366004613fc9565b610df5565b3480156104c357600080fd5b506104d76104d2366004613fc9565b610e78565b60405161033391906142cf565b3480156104f057600080fd5b506105046104ff3660046143ca565b610f77565b6040516103339190614438565b34801561051d57600080fd5b506102eb61052c366004613f8d565b610fb1565b6102eb61053f366004614272565b611138565b34801561055057600080fd5b506102eb61055f366004613f8d565b6112fb565b34801561057057600080fd5b5060005461058590600160a01b900460ff1681565b6040519015158152602001610333565b3480156105a157600080fd5b5061035c6105b0366004613fc9565b611457565b3480156105c157600080fd5b506102eb6114dd565b3480156105d657600080fd5b506102eb6105e5366004614490565b6114f1565b6102eb6105f836600461429c565b6118f2565b34801561060957600080fd5b506102eb610618366004613f8d565b611a7e565b34801561062957600080fd5b5061035c610638366004613fc9565b611b0c565b34801561064957600080fd5b506000546040516001600160a01b039091168152602001610333565b34801561067157600080fd5b5061035c610680366004614272565b611bbc565b34801561069157600080fd5b506106d36106a03660046143ca565b6001600160a01b039182166000908152600760209081526040808320939094168252919091522080546001909101549091565b60408051928352602083019190915201610333565b3480156106f457600080fd5b506102eb61070336600461453b565b611c07565b34801561071457600080fd5b5061035c670de0b6b3a764000081565b34801561073057600080fd5b5061035c61073f3660046143ca565b61218e565b34801561075057600080fd5b506102eb61075f36600461429c565b6121be565b34801561077057600080fd5b5061058561077f366004613fc9565b6121cb565b34801561079057600080fd5b5061035c61079f366004613fc9565b6121fe565b3480156107b057600080fd5b506102eb6107bf366004614586565b61221d565b3480156107d057600080fd5b5061035c6107df366004613fc9565b612653565b3480156107f057600080fd5b5061035c6220148081565b34801561080757600080fd5b5061035c610816366004613fc9565b6126a6565b34801561082757600080fd5b506102eb610836366004613fc9565b612750565b34801561084757600080fd5b50610585610856366004613f8d565b6127e0565b34801561086757600080fd5b5061035c610876366004613ffd565b612811565b34801561088757600080fd5b50610905610896366004613f8d565b6040805180820190915260008082526020820152506001600160a01b03928316600090815260086020908152604080832094861683529381528382209282529182528290208251808401909352549283168252600160a01b90920467ffffffffffffffff169181019190915290565b6040805182516001600160a01b0316815260209283015167ffffffffffffffff169281019290925201610333565b34801561093f57600080fd5b5061095361094e366004613fc9565b612896565b60408051938452602084019290925290820152606001610333565b670de0b6b3a764000061098084611457565b101561099f576040516374fa216b60e01b815260040160405180910390fd5b6001600160a01b03838116600081815260086020908152604080832094871680845294825280832086845282529182902080547fffffffff0000000000000000000000000000000000000000000000000000000016905581519283528201929092529081018290527f077c7becfad752fe6ee0143187438b002e564c671aabfd4b3b3c4343a2e79524906060015b60405180910390a1505050565b600080600080610a49856128c2565b93509350935093505b9193509193565b60008115610aa5576001600160a01b03841660009081526006602090815260408083208151808301909252805482526001015491810191909152610a9e918590612de3565b9050610ae8565b6001600160a01b03841660009081526006602090815260408083208151808301909252600281015482526003015491810191909152610ae5918590612de3565b90505b9392505050565b610af7612e4a565b610b048585858585612ea4565b5050505050565b610b13612e4a565b6001600160a01b038216610b955760008054821515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff9091161790556040517f59617e84cd4a4d47c34c76f190da73d3a6a0236e0770dcba41851db53f336f5790610b8990831515815260200190565b60405180910390a15050565b6001600160a01b038216600081815260016020908152604091829020805460ff19168515159081179091558251938452908301527ff0158690f9b0f41fc31e96038d36f6b6517557ebe2d3202408966ef3c616f5b69101610b89565b610bfa826128c2565b50503360009081526007602090815260408083206001600160a01b03881684528252808320600190810154600684528285208351808501909452600281015484526003015493830193909352919450919250610c5891908590612de3565b9050600019831480610c6957508181115b15610cb357506001600160a01b03831660009081526006602090815260409182902082518084019093526002810154835260030154908201528190610cb090826001613186565b92505b610cc86001600160a01b0385163330866131d4565b6001600160a01b03841660008181526006602090815260408083206003810180546001600160801b03888116909103909155600290910180549189169091039055338084526007835281842085855283529281902085870360019190910155805192835290820192909252908101849052606081018290527fe4a1ae657f49cb1fb1c7d3a94ae6093565c4c8c0e03de488f79c377c3c3a24e0906080015b60405180910390a150505050565b600080610d8084612653565b90506000610d96856001600160a01b0316613347565b90506000610da5826012614624565b610db090600a614721565b610dba9086614730565b9050670de0b6b3a7640000610dcf8483614730565b610dd99190614747565b9695505050505050565b610df083838360016133ab565b505050565b600354600090815b81811015610e7157600060038281548110610e1a57610e1a614769565b60009182526020822001546001600160a01b03169150610e3a868361218e565b90508015610e67576000610e4d83612653565b9050610e598183614730565b610e63908761477f565b9550505b5050600101610dfd565b5050919050565b610e80613eda565b506001600160a01b0316600090815260066020818152604092839020835160a0808201865282546060808401918252600185015460808086019190915291845287518089018952600286015481526003860154818801528487015287516101408101895260048601548152600586015467ffffffffffffffff80821698830198909852680100000000000000008082048916838c0152600160801b8083048a1694840194909452600160c01b918290048916948301949094529786015480881694820194909452918304861660c08301528204851660e0820152949004909216610100840152600701546101208301529182015290565b6001600160a01b038083166000908152600560209081526040808320938516835292905220606090610fa890613627565b90505b92915050565b610fbc8383836127e0565b610fd95760405163079f151f60e11b815260040160405180910390fd5b6000610fe4846126a6565b9050670de0b6b3a7640000610ff885611457565b10158061100457508015155b1561105a576040517f6560982d0000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152604481018390526064015b60405180910390fd5b6001600160a01b038085166000908152600860209081526040808320938716835292815282822085835290522080546001600160a01b031916331781556110a4620151804261477f565b81547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff9290921691909102178155604080513381526001600160a01b0387811660208301528616818301526060810185905290517f2d2541220f1c874dae8d6fa2dc8987e584ca7efede079594de6066330745daa59181900360800190a15050505050565b61114182613634565b61114b8282613674565b61116857604051631e9acf1760e31b815260040160405180910390fd5b611171826128c2565b505050506001600160a01b038216600090815260066020908152604080832081518083019092526002810154825260030154918101919091526111b5908383612de3565b6001600160a01b038416600090815260066020526040812060030180549293506001600160801b038416929091906111ee90849061477f565b90915550506001600160a01b038316600090815260066020526040812060020180546001600160801b038516929061122790849061477f565b90915550503360009081526007602090815260408083206001600160a01b03871684529091528120600101805483929061126290849061477f565b9091555061127d90506001600160a01b0384163033856131d4565b670de0b6b3a764000061128f33611457565b10156112ae576040516374fa216b60e01b815260040160405180910390fd5b604080513381526001600160a01b0385166020820152908101839052606081018290527fc1561b330e73faa7d5d1ac03c968d8f359b0191ccdb9cc002cf7d8eb6ae038cb90608001610a2d565b670de0b6b3a764000061130d84611457565b101561132c576040516330af2d6760e21b815260040160405180910390fd5b6001600160a01b0380841660009081526008602090815260408083208685168452825280832085845290915290208054909116611395576040517f049c49b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8054600160a01b900467ffffffffffffffff164210156113e1576040517f606f9ea300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80546114019061012c90600160a01b900467ffffffffffffffff1661477f565b421115801561141a575080546001600160a01b03163314155b15611451576040517f728e956900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60008060008061146685612896565b919450925090506000611479838561477f565b90508160000361149657610dd9670de0b6b3a76400006064614730565b6000620186a06114a96201388084614730565b6114b39190614747565b9050826114c8670de0b6b3a764000083614730565b6114d29190614747565b979650505050505050565b6114e5612e4a565b6114ef6000613750565b565b60008590036115135760405163521299a960e01b815260040160405180910390fd5b8483146115335760405163b7c1140d60e01b815260040160405180910390fd5b8660008667ffffffffffffffff81111561154f5761154f6140f5565b604051908082528060200260200182016040528015611578578160200160208202803683370190505b50905060005b878110156116e0576115b089898381811061159b5761159b614769565b905060200201602081019061079f9190613fc9565b60000361161c578888828181106115c9576115c9614769565b90506020020160208101906115de9190613fc9565b6040517f7c154f890000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152602401611051565b61166489898381811061163157611631614769565b90506020020160208101906116469190613fc9565b88888481811061165857611658614769565b90506020020135611bbc565b82828151811061167657611676614769565b6020026020010181815250506116d8308b89898581811061169957611699614769565b905060200201358c8c868181106116b2576116b2614769565b90506020020160208101906116c79190613fc9565b6001600160a01b03169291906131d4565b60010161157e565b506040517f64573d020000000000000000000000000000000000000000000000000000000081526001600160a01b038316906364573d02906117349033908c908c908c908c9089908d908d906004016147bb565b6020604051808303816000875af1158015611753573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611777919061488d565b6117ad576040517ffd5ead8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b888110156118a0578281815181106117cb576117cb614769565b60200260200101518888838181106117e5576117e5614769565b905060200201356117f6919061477f565b91506118108b30848d8d868181106116b2576116b2614769565b82818151811061182257611822614769565b60200260200101516001600160801b0316600660008c8c8581811061184957611849614769565b905060200201602081019061185e9190613fc9565b6001600160a01b03166001600160a01b031681526020019081526020016000206000016000016000828254611893919061477f565b90915550506001016117b1565b507f76f226d30806b7b34cf90ae0330c53df665a4127510985a1a3958387039b9d75338a8a8a8a878b8b6040516118de9897969594939291906147bb565b60405180910390a150505050505050505050565b6118fb83613634565b611904836137a0565b61190d836128c2565b50611927925050506001600160a01b0384163330856131d4565b6001600160a01b03831660009081526006602090815260408083208151808301909252805482526001015491810191909152611964908483612de3565b90508181101561198a576040516328ac9b3f60e11b815260048101829052602401611051565b6001600160a01b038416600090815260066020526040812060010180546001600160801b03841692906119be90849061477f565b90915550506001600160a01b038416600090815260066020526040812080546001600160801b03861692906119f490849061477f565b90915550503360009081526007602090815260408083206001600160a01b038816845290915281208054839290611a2c90849061477f565b9091555050604080513381526001600160a01b0386166020820152908101849052606081018290527fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d790608001610d66565b611a8a338484846137f9565b670de0b6b3a7640000611a9c33611457565b1015611abb576040516374fa216b60e01b815260040160405180910390fd5b604080513381526001600160a01b038086166020830152841691810191909152606081018290527fa766742a23fe9ecbd32c553cd9ad3115b2d15c6b72cd5e95858f5a911d55cb4590608001610a2d565b600254600090815b81811015610e7157600060028281548110611b3157611b31614769565b60009182526020808320909101546001600160a01b03888116845260078352604080852091909216808552908352818420600101546006845282852083518085019094526002810154845260030154938301939093529350611b939183613186565b90508015611bb257611ba58282610d74565b611baf908661477f565b94505b5050600101611b14565b6001600160a01b038216600090815260066020526040812060050154620186a090611bfd9068010000000000000000900467ffffffffffffffff1684614730565b610fa89190614747565b6001600160a01b0384163303611c49576040517f44511af100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611c5485611457565b9050670de0b6b3a76400008110611c7e576040516330af2d6760e21b815260040160405180910390fd5b6001600160a01b0385811660009081526007602090815260408083208885168452909152808220549286168252902060010154811580611cbc575080155b15611cc957505050611451565b6001600160a01b03851660009081526006602090815260408083208151808301909252600281015482526003015491810191909152611d0a90836001613186565b90506000670c7d713b49da0000851015611d245781611d3e565b620186a0611d3461c35084614730565b611d3e9190614747565b9050808611611d4d5785611d4f565b805b6001600160a01b038916600090815260066020908152604080832081518083019092528054825260010154918101919091529197509250829150899088908a9089908590611d9e908a83613186565b90506000611dab84612653565b90506000611db886612653565b90506000611dce866001600160a01b0316613347565b90506000611de4886001600160a01b0316613347565b9050611df181600a614721565b611dfb9085614730565b611e0683600a614721565b611e108589614730565b611e1a9190614730565b611e249190614747565b9a506000620186a0611e386113888e614730565b611e429190614747565b9050858c1115611e9a57859b5082600a611e5c9190614721565b84611e6884600a614721565b611e72888a614730565b611e7c9190614730565b611e869190614747565b611e909190614730565b9a50869f50611ebb565b6000611ea68d886148aa565b9050808211611eb55781611eb7565b805b9b50505b6001600160a01b03891660009081526006602090815260408083208151808301909252600281015482526003015491810191909152611efb908983612de3565b6001600160a01b038b16600090815260066020526040812060030180549293506001600160801b03841692909190611f349084906148aa565b90915550506001600160a01b038a16600090815260066020526040812060020180546001600160801b038b169290611f6d9084906148aa565b925050819055506000611fbe8d8f611f85919061477f565b6001600160a01b038c16600090815260066020908152604080832081518083019092528054825260010154918101919091529190612de3565b6001600160a01b038b16600090815260066020526040812060010180549293506001600160801b03841692909190611ff79084906148aa565b9091555061200790508d8f61477f565b6001600160a01b038b16600090815260066020526040812080546001600160801b03939093169290919061203c9084906148aa565b90915550506001600160a01b03808d166000908152600760209081526040808320938f16835292905290812060010180546001600160801b03851692906120849084906148aa565b90915550506001600160a01b03808d166000908152600760209081526040808320938e16835292905290812080546001600160801b03841692906120c99084906148aa565b925050819055505050505050505050505050506120ff303383856120ed919061477f565b6001600160a01b038b169291906131d4565b612120303361210e848661477f565b6001600160a01b038c169291906131d4565b7ffcbc974bf3a532baf2bb229db3c37fd58299b62d2d1db6a855dac5b693bb6ff389338861214e858761477f565b604080516001600160a01b0395861681529490931660208501529183015260608201526080810183905260a00160405180910390a1505050505050505050565b6001600160a01b0380831660009081526005602090815260408083209385168352929052908120610fa8906138d8565b610df083838360006133ab565b60008054600160a01b900460ff1680610fab5750506001600160a01b031660009081526001602052604090205460ff1690565b6000612209826121cb565b61221557600019610fab565b600092915050565b600083900361223f5760405163521299a960e01b815260040160405180910390fd5b82811461225f5760405163b7c1140d60e01b815260040160405180910390fd5b61226a8787876112fb565b600061227588611b0c565b9050600061228288612653565b9050600089818080805b8a811015612414578b8b828181106122a6576122a6614769565b90506020020160208101906122bb9190613fc9565b93508989828181106122cf576122cf614769565b9050602002013592506122e1846128c2565b5050506001600160a01b03851660009081526006602090815260409182902082518084019093526002810154835260030154908201526123249150846001612de3565b915061233b6001600160a01b0385163330866131d4565b6001600160a01b038416600090815260066020526040812060030180546001600160801b038516929061236f9084906148aa565b90915550506001600160a01b038416600090815260066020526040812060020180546001600160801b03861692906123a89084906148aa565b90915550506001600160a01b038086166000908152600760209081526040808320938816835292905290812060010180546001600160801b03851692906123f09084906148aa565b9091555061240090508484610d74565b61240a908761477f565b955060010161228c565b50858711801561243c5750620186a061242f61c35088614730565b6124399190614747565b85105b15612473576040517ff67d9a2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600092508c9150829050620186a061248e6127108261477f565b6124989086614730565b6124a29190614747565b90506124ae81866148aa565b9250600060026000815481106124c6576124c6614769565b6000918252602090912001546001600160a01b031690506124e9813330876131d4565b6001600160a01b03811660009081526006602090815260408083208151808301909252805482526001015491810191909152612526908683612de3565b6001600160a01b038316600090815260066020526040812060010180549293506001600160801b0384169290919061255f90849061477f565b90915550506001600160a01b038216600090815260066020526040812080546001600160801b038816929061259590849061477f565b90915550506001600160a01b038085166000908152600760209081526040808320938616835292905290812080548392906125d190849061477f565b92505081905550505050506125e88b338c8c6137f9565b604080513381526001600160a01b038d811660208301528c1681830152606081018b90526080810184905260a0810183905290517f7cd35ff79d73d5af7cb402eaac9792d8b3d32b685b221cd81c3d5611c8327fd09181900360c00190a15050505050505050505050565b6001600160a01b038116600090815260046020526040812054600160a81b900460ff1661268257506000919050565b6001600160a01b0380831660009081526004602052604090205416610ae8816138e2565b600254600090815b81811015610e71576000600282815481106126cb576126cb614769565b60009182526020808320909101546001600160a01b038881168452600783526040808520919092168085529083528184205460068452828520835180850190945280548452600101549383019390935293506127279183613186565b90508015612746576127398282610d74565b612743908661477f565b94505b50506001016126ae565b612758612e4a565b6001600160a01b0381166127d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611051565b6127dd81613750565b50565b6001600160a01b0380841660009081526005602090815260408083209386168352929052908120610ae590836139e5565b60008115612856576001600160a01b03841660009081526006602090815260408083208151808301909252805482526001015491810191909152610a9e918590613186565b6001600160a01b03841660009081526006602090815260408083208151808301909252600281015482526003015491810191909152610ae5918590613186565b60008060006128a4846126a6565b92506128af84610df5565b91506128ba84611b0c565b929491935050565b6001600160a01b0381166000908152600660208181526040808420815160a0808201845282546060808401918252600185015460808086019190915291845285518087018752600286015481526003860154818901528488015285516101408101875260048601548152600586015467ffffffffffffffff80821699830199909952680100000000000000008082048a16838a0152600160801b8083048b1694840194909452600160c01b918290048a16948301949094529886015480891694820194909452918304871660c08301528204861660e0820152959004909316610100850152600701546101208401528101919091528051518291829182919082036129db57600080600080945094509450945050610a52565b604081015160808101514267ffffffffffffffff90911603612a0457606001519150610a529050565b60208083015101511580612a1c5750612a1c876121cb565b15612a455767ffffffffffffffff4281166080830152431660a082015260408201819052612cad565b60008160a0015167ffffffffffffffff1643612a6191906148aa565b835151602085015151919250600091612a8390670de0b6b3a764000090614730565b612a8d9190614747565b90506000612a9b84836139fd565b67ffffffffffffffff8781166060870152428116608087015243811660a08701526040805186815291831660208301529192507fcff294bc3695620876ce22ec38b97aaa07675b271c26a784ebeba510e59b1f65910160405180910390a1612b0e62201480670de0b6b3a7640000614730565b846060015167ffffffffffffffff1686602001516000015185612b319190614730565b612b3b9190614730565b612b459190614747565b9850886001600160801b03168560200151600001818151612b66919061477f565b905250845180516001600160801b038b169190612b8490839061477f565b90525060408501849052602084015167ffffffffffffffff1615612c5257620186a0846020015167ffffffffffffffff168a612bc09190614730565b612bca9190614747565b855151909850612bdb9089906148aa565b855160200151612beb908a614730565b612bf59190614747565b9650866001600160801b03168560000151602001818151612c16919061477f565b9052503060009081526007602090815260408083206001600160a01b038e16845290915281208054899290612c4c90849061477f565b90915550505b6060808501516040805167ffffffffffffffff9092168252602082018c905281018a90529081018890527ff4fc4a63006144011c7214b4099772de96603a49b426f18267c33b3c1ec35bed9060800160405180910390a15050505b506001600160a01b039590951660009081526006602081815260409283902088518051825582015160018201558882015180516002830155820151600382015597830151805160048a015590810151600589018054948301516060840151608085015167ffffffffffffffff9485166fffffffffffffffffffffffffffffffff1998891617680100000000000000009386168402176001600160801b03908116600160801b938716840277ffffffffffffffffffffffffffffffffffffffffffffffff90811691909117600160c01b93881684021790955560a0870151978e01805460c089015160e08a01516101008b01519b8a1692909c169190911790881690950294909417169785169091029092169590951793909116029190911790915561012001516007909501949094559193909290565b82516000908103612df5575081610ae8565b83516020850151612e069085614730565b612e109190614747565b9050818015612e3a575060208401518451849190612e2e9084614730565b612e389190614747565b105b15610ae857610ae581600161477f565b6000546001600160a01b031633146114ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611051565b8015612eba57612eb5858585613ada565b612ec3565b612ec385613d1a565b6000836001811115612ed757612ed76148bd565b03610b0457620186a0826000015167ffffffffffffffff161115612f365781516040517f5f7918ed00000000000000000000000000000000000000000000000000000000815267ffffffffffffffff9091166004820152602401611051565b611388826020015167ffffffffffffffff161115612f795760208201516040516336e6824b60e21b815267ffffffffffffffff9091166004820152602401611051565b611388826040015167ffffffffffffffff161115612fbc5760408083015190516336e6824b60e21b815267ffffffffffffffff9091166004820152602401611051565b6001600160a01b038516600090815260066020818152604092839020855167ffffffffffffffff9081166004830190815592870151600583018054898801518416680100000000000000009081026fffffffffffffffffffffffffffffffff19909216938516939093171790556060880151948301805460808a015160a08b01518516600160c01b0277ffffffffffffffffffffffffffffffffffffffffffffffff918616600160801b027fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff99909616909402979097167fffffffffffffffff00000000000000000000000000000000ffffffffffffffff9091161792909217949094169390931790925560c085015160079092019190915590517f7e914af3d8d31ac64e6df6e8087ac12953b11a1bceebf2a80692aa35e6b0e6ff9061317690889086906000610100820190506001600160a01b038416825267ffffffffffffffff8084511660208401528060208501511660408401528060408501511660608401528060608501511660808401528060808501511660a08401528060a08501511660c08401525060c083015160e08301529392505050565b60405180910390a1505050505050565b6000836020015160000361319b575081610ae8565b602084015184516131ac9085614730565b6131b69190614747565b9050818015612e3a575083516020850151849190612e2e9084614730565b6000306001600160a01b03851603613279576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905286169063a9059cbb906044016020604051808303816000875af115801561324e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613272919061488d565b9050613310565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528481166024830152604482018490528616906323b872dd906064016020604051808303816000875af11580156132e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061330d919061488d565b90505b80610b04576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613387573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fab91906148d3565b6133b4846128c2565b50503360009081526007602090815260408083206001600160a01b038a16845290915281205492509050821561345057506001600160a01b03851660009081526006602090815260408083208151808301909252805482526001015491810191909152859161342591908390613186565b94508385101561344b576040516328ac9b3f60e11b815260048101869052602401611051565b6134b3565b6001600160a01b0386166000908152600660209081526040808320815180830190925280548252600101549181019190915261348d918790612de3565b9050838111156134b3576040516328ac9b3f60e11b815260048101829052602401611051565b8082108061352857506040516370a0823160e01b815230600482015285906001600160a01b038816906370a0823190602401602060405180830381865afa158015613502573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061352691906148f6565b105b1561354657604051631e9acf1760e31b815260040160405180910390fd5b6001600160a01b03861660008181526006602090815260408083206001810180546001600160801b038089169091039091558154908b16900390553380845260078352818420858552909252909120805484900390556135a991903090886131d4565b670de0b6b3a76400006135bb33611457565b10156135da576040516374fa216b60e01b815260040160405180910390fd5b604080513381526001600160a01b0388166020820152908101869052606081018290527ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb56790608001613176565b60606000610ae883613d84565b61363d816121cb565b156127dd576040517fb187bd2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166000908152600660205260408120600481015490548291620186a0916136a49190614730565b6136ae9190614747565b6001600160a01b0385166000908152600660205260409020549091501580159061374857506136dd838261477f565b6040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015613721573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061374591906148f6565b10155b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116600090815260046020526040902054600160a81b900460ff166127dd576040517f3dd1b30500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6138048483836127e0565b6138215760405163079f151f60e11b815260040160405180910390fd5b6001600160a01b0380851660009081526005602090815260408083209386168352929052206138509082613de0565b506040517f42842e0e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906342842e0e90606401600060405180830381600087803b1580156138ba57600080fd5b505af11580156138ce573d6000803e3d6000fd5b5050505050505050565b6000610fab825490565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061394c9190614929565b945094505093509350600083131580613963575081155b8061398557508369ffffffffffffffffffff168169ffffffffffffffffffff16105b8061399a5750611c2061399883426148aa565b115b156139d0576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6139db600a8061496d565b610dd99084614730565b60008181526001830160205260408120541515610fa8565b61012082015160c083015160e08401516101008501516000939267ffffffffffffffff9081169281169116838611613a5a57600084613a3c8489614730565b613a469190614747565b9050613a52818561477f565b955050613ad0565b6000613a6685886148aa565b90506000613a7c86670de0b6b3a76400006148aa565b613a8e670de0b6b3a764000084614730565b613a989190614747565b9050670de0b6b3a7640000613aad8483614730565b613ab79190614747565b613ac1858761477f565b613acb919061477f565b965050505b5050505092915050565b6001600160a01b038316600090815260046020526040902054600160a81b900460ff1615613b34576040517f3706ba4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001816001811115613b4857613b486148bd565b1115613b8257806040517f4e00ade0000000000000000000000000000000000000000000000000000000008152600401611051919061499b565b6001600160a01b03808416600090815260046020526040902080549184166001600160a01b031983168117825583927fffffffffffffffffffffff0000000000000000000000000000000000000000001617600160a01b836001811115613beb57613beb6148bd565b02179055506001600160a01b038316600090815260046020526040902080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556001816001811115613c4857613c486148bd565b03613c9d57600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038516179055613ce9565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385161790555b7f20ba3738d0f69ad18e0a9923005003b1434ffc62c40ad3332d30d2d42c49ef428382604051610a2d9291906149a9565b600054600160a01b900460ff16158015613d4d57506001600160a01b03811660009081526001602052604090205460ff16155b156127dd576040517f7acf489200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606081600001805480602002602001604051908101604052809291908181526020018280548015613dd457602002820191906000526020600020905b815481526020019060010190808311613dc0575b50505050509050919050565b6000610fa8838360008181526001830160205260408120548015613ed0576000613e0b6001836148aa565b8554909150600090613e1f906001906148aa565b9050808214613e84576000866000018281548110613e3f57613e3f614769565b9060005260206000200154905080876000018481548110613e6257613e62614769565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080613e9557613e956149c6565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610fab565b6000915050610fab565b6040805160a08101909152600060608201818152608083019190915281908152602001613f1a604051806040016040528060008152602001600081525090565b8152604080516101408101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082015291015290565b80356001600160a01b0381168114613f8857600080fd5b919050565b600080600060608486031215613fa257600080fd5b613fab84613f71565b9250613fb960208501613f71565b9150604084013590509250925092565b600060208284031215613fdb57600080fd5b610fa882613f71565b80151581146127dd57600080fd5b8035613f8881613fe4565b60008060006060848603121561401257600080fd5b61401b84613f71565b925060208401359150604084013561403281613fe4565b809150509250925092565b60008083601f84011261404f57600080fd5b50813567ffffffffffffffff81111561406757600080fd5b60208301915083602082850101111561407f57600080fd5b9250929050565b60008060008060006080868803121561409e57600080fd5b6140a786613f71565b94506140b560208701613f71565b935060408601359250606086013567ffffffffffffffff8111156140d857600080fd5b6140e48882890161403d565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b803567ffffffffffffffff81168114613f8857600080fd5b600080600080600085870361016081121561413d57600080fd5b61414687613f71565b955061415460208801613f71565b945060408701356002811061416857600080fd5b935060e0605f198201121561417c57600080fd5b5060405160e0810181811067ffffffffffffffff821117156141ae57634e487b7160e01b600052604160045260246000fd5b6040526141bd6060880161410b565b81526141cb6080880161410b565b60208201526141dc60a0880161410b565b60408201526141ed60c0880161410b565b60608201526141fe60e0880161410b565b6080820152614210610100880161410b565b60a082015261012087013560c0820152915061422f6101408701613ff2565b90509295509295909350565b6000806040838503121561424e57600080fd5b61425783613f71565b9150602083013561426781613fe4565b809150509250929050565b6000806040838503121561428557600080fd5b61428e83613f71565b946020939093013593505050565b6000806000606084860312156142b157600080fd5b6142ba84613f71565b95602085013595506040909401359392505050565b815180518252602090810151908201526101c081016020838101518051604085015290810151606084015250604083015180516080840152602081015167ffffffffffffffff811660a085015250604081015167ffffffffffffffff811660c085015250606081015167ffffffffffffffff811660e08501525060808101516101006143668186018367ffffffffffffffff169052565b60a083015191506101206143858187018467ffffffffffffffff169052565b60c084015167ffffffffffffffff90811661014088015260e0850151811661016088015291840151909116610180860152909101516101a09093019290925292915050565b600080604083850312156143dd57600080fd5b6143e683613f71565b91506143f460208401613f71565b90509250929050565b600081518084526020808501945080840160005b8381101561442d57815187529582019590820190600101614411565b509495945050505050565b602081526000610fa860208301846143fd565b60008083601f84011261445d57600080fd5b50813567ffffffffffffffff81111561447557600080fd5b6020830191508360208260051b850101111561407f57600080fd5b60008060008060008060006080888a0312156144ab57600080fd5b6144b488613f71565b9650602088013567ffffffffffffffff808211156144d157600080fd5b6144dd8b838c0161444b565b909850965060408a01359150808211156144f657600080fd5b6145028b838c0161444b565b909650945060608a013591508082111561451b57600080fd5b506145288a828b0161403d565b989b979a50959850939692959293505050565b6000806000806080858703121561455157600080fd5b61455a85613f71565b935061456860208601613f71565b925061457660408601613f71565b9396929550929360600135925050565b600080600080600080600060a0888a0312156145a157600080fd5b6145aa88613f71565b96506145b860208901613f71565b955060408801359450606088013567ffffffffffffffff808211156145dc57600080fd5b6145e88b838c0161444b565b909650945060808a013591508082111561460157600080fd5b506145288a828b0161444b565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610fab57610fab61460e565b600181815b8085111561467857816000190482111561465e5761465e61460e565b8085161561466b57918102915b93841c9390800290614642565b509250929050565b60008261468f57506001610fab565b8161469c57506000610fab565b81600181146146b257600281146146bc576146d8565b6001915050610fab565b60ff8411156146cd576146cd61460e565b50506001821b610fab565b5060208310610133831016604e8410600b84101617156146fb575081810a610fab565b614705838361463d565b80600019048211156147195761471961460e565b029392505050565b6000610fa860ff841683614680565b8082028115828204841417610fab57610fab61460e565b60008261476457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b80820180821115610fab57610fab61460e565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03898116825260a060208084018290529083018990526000918a9160c08501845b8c81101561480857836147f586613f71565b16825293820193908201906001016147e3565b5085810360408701528981527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8a111561484157600080fd5b8960051b9350838b838301379092018481038301606086015291614867818401896143fd565b92505050828103608084015261487e818587614792565b9b9a5050505050505050505050565b60006020828403121561489f57600080fd5b8151610ae881613fe4565b81810381811115610fab57610fab61460e565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156148e557600080fd5b815160ff81168114610ae857600080fd5b60006020828403121561490857600080fd5b5051919050565b805169ffffffffffffffffffff81168114613f8857600080fd5b600080600080600060a0868803121561494157600080fd5b61494a8661490f565b945060208601519350604086015192506060860151915061422f6080870161490f565b6000610fa88383614680565b6002811061499757634e487b7160e01b600052602160045260246000fd5b9052565b60208101610fab8284614979565b6001600160a01b038316815260408101610ae86020830184614979565b634e487b7160e01b600052603160045260246000fdfea26469706673582212206e15512fd904e89d9fc5c3f4f5b1ef0b971d07904bd64ca056609e3f7a8cbd7464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DBCA353 GT PUSH2 0x179 JUMPI DUP1 PUSH4 0xB6812C99 GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xDBE7CC17 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xFDDA8295 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xFDDA8295 EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0xFF9B8BB8 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0xFFC9896B EQ PUSH2 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDBE7CC17 EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xF6AA13F2 EQ PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC223A9BE GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xC223A9BE EQ PUSH2 0x7A4 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x7C4 JUMPI DUP1 PUSH4 0xD37DB1D2 EQ PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB6812C99 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xBF370299 EQ PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2D20CF2 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0xAAF5EB68 GT PUSH2 0x112 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xB4240C99 EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0xB5C5F672 EQ PUSH2 0x744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2D20CF2 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xAAB3F868 EQ PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89A1E803 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x89A1E803 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x93F2D72E EQ PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7DBCA353 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x82A5B1AA EQ PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C895AFF GT PUSH2 0x227 JUMPI DUP1 PUSH4 0x4CD5491C GT PUSH2 0x1DB JUMPI DUP1 PUSH4 0x6AD9F9DF GT PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x6AD9F9DF EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0x78767D70 EQ PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4CD5491C EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x351B14A0 GT PUSH2 0x20C JUMPI DUP1 PUSH4 0x351B14A0 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x429E2C1A EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x4B8A3529 EQ PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C895AFF EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x30941E62 EQ PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D81944F GT PUSH2 0x27E JUMPI DUP1 PUSH4 0x249D39E9 GT PUSH2 0x263 JUMPI DUP1 PUSH4 0x249D39E9 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x25D07A95 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x2B83CCCD EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D81944F EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x22867D78 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF342EE9 GT PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF342EE9 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x1880B981 EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD30320E EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD8459FE EQ PUSH2 0x2ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FFD JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x4086 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x4123 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x423B JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH3 0x186A0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0xD74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x429C JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x42CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x43CA JUMP JUMPDEST PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x4438 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x53F CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x12FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x585 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x1457 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x14DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4490 JUMP JUMPDEST PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x18F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x1A7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x638 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x680 CALLDATASIZE PUSH1 0x4 PUSH2 0x4272 JUMP JUMPDEST PUSH2 0x1BBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D3 PUSH2 0x6A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x43CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x453B JUMP JUMPDEST PUSH2 0x1C07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x73F CALLDATASIZE PUSH1 0x4 PUSH2 0x43CA JUMP JUMPDEST PUSH2 0x218E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x75F CALLDATASIZE PUSH1 0x4 PUSH2 0x429C JUMP JUMPDEST PUSH2 0x21BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x585 PUSH2 0x77F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x21CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x79F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x21FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x7BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4586 JUMP JUMPDEST PUSH2 0x221D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x7DF CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x2653 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH3 0x201480 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x26A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x836 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x2750 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x585 PUSH2 0x856 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH2 0x27E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH2 0x876 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FFD JUMP JUMPDEST PUSH2 0x2811 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x905 PUSH2 0x896 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 DUP3 MSTORE DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD SWAP3 DUP4 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x333 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x953 PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x333 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x980 DUP5 PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x77C7BECFAD752FE6EE0143187438B002E564C671AABFD4B3B3C4343A2E79524 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xA49 DUP6 PUSH2 0x28C2 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA9E SWAP2 DUP6 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xAE5 SWAP2 DUP6 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x2E4A JUMP JUMPDEST PUSH2 0xB04 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2EA4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x2E4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x59617E84CD4A4D47C34C76F190DA73D3A6A0236E0770DCBA41851DB53F336F57 SWAP1 PUSH2 0xB89 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xF0158690F9B0F41FC31E96038D36F6B6517557EBE2D3202408966EF3C616F5B6 SWAP2 ADD PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xBFA DUP3 PUSH2 0x28C2 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 MSTORE PUSH1 0x3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP5 POP SWAP2 SWAP3 POP PUSH2 0xC58 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP4 EQ DUP1 PUSH2 0xC69 JUMPI POP DUP2 DUP2 GT JUMPDEST ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 DUP3 ADD MSTORE DUP2 SWAP1 PUSH2 0xCB0 SWAP1 DUP3 PUSH1 0x1 PUSH2 0x3186 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0xCC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP7 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 DUP2 AND SWAP1 SWAP2 SUB SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 DUP10 AND SWAP1 SWAP2 SUB SWAP1 SSTORE CALLER DUP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 DUP8 SUB PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xE4A1AE657F49CB1FB1C7D3A94AE6093565C4C8C0E03DE488F79C377C3C3A24E0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD80 DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD96 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDA5 DUP3 PUSH1 0x12 PUSH2 0x4624 JUMP JUMPDEST PUSH2 0xDB0 SWAP1 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0xDBA SWAP1 DUP7 PUSH2 0x4730 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xDCF DUP5 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDF0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x33AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE1A JUMPI PUSH2 0xE1A PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xE3A DUP7 DUP4 PUSH2 0x218E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 PUSH2 0xE4D DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH2 0xE59 DUP2 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0xE63 SWAP1 DUP8 PUSH2 0x477F JUMP JUMPDEST SWAP6 POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xDFD JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE80 PUSH2 0x3EDA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP5 MSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE PUSH1 0x2 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP2 DUP9 ADD MSTORE DUP5 DUP8 ADD MSTORE DUP8 MLOAD PUSH2 0x140 DUP2 ADD DUP10 MSTORE PUSH1 0x4 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP9 DUP4 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH9 0x10000000000000000 DUP1 DUP3 DIV DUP10 AND DUP4 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP11 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP3 SWAP1 DIV DUP10 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP8 DUP7 ADD SLOAD DUP1 DUP9 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP4 DIV DUP7 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP3 DIV DUP6 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP3 AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0xFA8 SWAP1 PUSH2 0x3627 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFBC DUP4 DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH2 0xFD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79F151F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFE4 DUP5 PUSH2 0x26A6 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xFF8 DUP6 PUSH2 0x1457 JUMP JUMPDEST LT ISZERO DUP1 PUSH2 0x1004 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6560982D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE PUSH2 0x10A4 PUSH3 0x15180 TIMESTAMP PUSH2 0x477F JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x2D2541220F1C874DAE8D6FA2DC8987E584CA7EFEDE079594DE6066330745DAA5 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1141 DUP3 PUSH2 0x3634 JUMP JUMPDEST PUSH2 0x114B DUP3 DUP3 PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1171 DUP3 PUSH2 0x28C2 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x11B5 SWAP1 DUP4 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x11EE SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x1227 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1262 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x127D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS CALLER DUP6 PUSH2 0x31D4 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x128F CALLER PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xC1561B330E73FAA7D5D1AC03C968D8F359B0191CCDB9CC002CF7D8EB6AE038CB SWAP1 PUSH1 0x80 ADD PUSH2 0xA2D JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x130D DUP5 PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x132C JUMPI PUSH1 0x40 MLOAD PUSH4 0x30AF2D67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x49C49B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x606F9EA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x1401 SWAP1 PUSH2 0x12C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x477F JUMP JUMPDEST TIMESTAMP GT ISZERO DUP1 ISZERO PUSH2 0x141A JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH32 0x728E956900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1466 DUP6 PUSH2 0x2896 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x1479 DUP4 DUP6 PUSH2 0x477F JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 SUB PUSH2 0x1496 JUMPI PUSH2 0xDD9 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH2 0x4730 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x14A9 PUSH3 0x13880 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x14B3 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x14C8 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14E5 PUSH2 0x2E4A JUMP JUMPDEST PUSH2 0x14EF PUSH1 0x0 PUSH2 0x3750 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 SWAP1 SUB PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x521299A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP4 EQ PUSH2 0x1533 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB7C1140D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x154F JUMPI PUSH2 0x154F PUSH2 0x40F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1578 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI PUSH2 0x15B0 DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x159B JUMPI PUSH2 0x159B PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x79F SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x0 SUB PUSH2 0x161C JUMPI DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0x15C9 JUMPI PUSH2 0x15C9 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7C154F8900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1664 DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x1631 JUMPI PUSH2 0x1631 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x1658 JUMPI PUSH2 0x1658 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1BBC JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1676 JUMPI PUSH2 0x1676 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x16D8 ADDRESS DUP12 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1699 JUMPI PUSH2 0x1699 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x16B2 JUMPI PUSH2 0x16B2 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x16C7 SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x157E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x64573D0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x64573D02 SWAP1 PUSH2 0x1734 SWAP1 CALLER SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP10 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1753 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1777 SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST PUSH2 0x17AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xFD5EAD8000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x17CB JUMPI PUSH2 0x17CB PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x17E5 JUMPI PUSH2 0x17E5 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP PUSH2 0x1810 DUP12 ADDRESS DUP5 DUP14 DUP14 DUP7 DUP2 DUP2 LT PUSH2 0x16B2 JUMPI PUSH2 0x16B2 PUSH2 0x4769 JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1822 JUMPI PUSH2 0x1822 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x6 PUSH1 0x0 DUP13 DUP13 DUP6 DUP2 DUP2 LT PUSH2 0x1849 JUMPI PUSH2 0x1849 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x185E SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x17B1 JUMP JUMPDEST POP PUSH32 0x76F226D30806B7B34CF90AE0330C53DF665A4127510985A1A3958387039B9D75 CALLER DUP11 DUP11 DUP11 DUP11 DUP8 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x18DE SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18FB DUP4 PUSH2 0x3634 JUMP JUMPDEST PUSH2 0x1904 DUP4 PUSH2 0x37A0 JUMP JUMPDEST PUSH2 0x190D DUP4 PUSH2 0x28C2 JUMP JUMPDEST POP PUSH2 0x1927 SWAP3 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1964 SWAP1 DUP5 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x198A JUMPI PUSH1 0x40 MLOAD PUSH4 0x28AC9B3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 PUSH2 0x19BE SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND SWAP3 SWAP1 PUSH2 0x19F4 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1A2C SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 SWAP1 PUSH1 0x80 ADD PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x1A8A CALLER DUP5 DUP5 DUP5 PUSH2 0x37F9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A9C CALLER PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x1ABB JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xA766742A23FE9ECBD32C553CD9AD3115B2D15C6B72CD5E95858F5A911D55CB45 SWAP1 PUSH1 0x80 ADD PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B31 JUMPI PUSH2 0x1B31 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 MSTORE PUSH1 0x3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 POP PUSH2 0x1B93 SWAP2 DUP4 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BB2 JUMPI PUSH2 0x1BA5 DUP3 DUP3 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x1BAF SWAP1 DUP7 PUSH2 0x477F JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH3 0x186A0 SWAP1 PUSH2 0x1BFD SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER SUB PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44511AF100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C54 DUP6 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x1C7E JUMPI PUSH1 0x40 MLOAD PUSH4 0x30AF2D67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 ISZERO DUP1 PUSH2 0x1CBC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1CC9 JUMPI POP POP POP PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1D0A SWAP1 DUP4 PUSH1 0x1 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xC7D713B49DA0000 DUP6 LT ISZERO PUSH2 0x1D24 JUMPI DUP2 PUSH2 0x1D3E JUMP JUMPDEST PUSH3 0x186A0 PUSH2 0x1D34 PUSH2 0xC350 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1D3E SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 GT PUSH2 0x1D4D JUMPI DUP6 PUSH2 0x1D4F JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP8 POP SWAP3 POP DUP3 SWAP2 POP DUP10 SWAP1 DUP9 SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP6 SWAP1 PUSH2 0x1D9E SWAP1 DUP11 DUP4 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DAB DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DB8 DUP7 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DCE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1DE4 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3347 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DF1 DUP2 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x1DFB SWAP1 DUP6 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E06 DUP4 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x1E10 DUP6 DUP10 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E1A SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E24 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP11 POP PUSH1 0x0 PUSH3 0x186A0 PUSH2 0x1E38 PUSH2 0x1388 DUP15 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E42 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP6 DUP13 GT ISZERO PUSH2 0x1E9A JUMPI DUP6 SWAP12 POP DUP3 PUSH1 0xA PUSH2 0x1E5C SWAP2 SWAP1 PUSH2 0x4721 JUMP JUMPDEST DUP5 PUSH2 0x1E68 DUP5 PUSH1 0xA PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x1E72 DUP9 DUP11 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH2 0x1E90 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST SWAP11 POP DUP7 SWAP16 POP PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA6 DUP14 DUP9 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x1EB5 JUMPI DUP2 PUSH2 0x1EB7 JUMP JUMPDEST DUP1 JUMPDEST SWAP12 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1EFB SWAP1 DUP10 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1F34 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND SWAP3 SWAP1 PUSH2 0x1F6D SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1FBE DUP14 DUP16 PUSH2 0x1F85 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1FF7 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2007 SWAP1 POP DUP14 DUP16 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x203C SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP16 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x2084 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP15 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 PUSH2 0x20C9 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x20FF ADDRESS CALLER DUP4 DUP6 PUSH2 0x20ED SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP3 SWAP2 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH2 0x2120 ADDRESS CALLER PUSH2 0x210E DUP5 DUP7 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP3 SWAP2 SWAP1 PUSH2 0x31D4 JUMP JUMPDEST PUSH32 0xFCBC974BF3A532BAF2BB229DB3C37FD58299B62D2D1DB6A855DAC5B693BB6FF3 DUP10 CALLER DUP9 PUSH2 0x214E DUP6 DUP8 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0xFA8 SWAP1 PUSH2 0x38D8 JUMP JUMPDEST PUSH2 0xDF0 DUP4 DUP4 DUP4 PUSH1 0x0 PUSH2 0x33AB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xFAB JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2209 DUP3 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x2215 JUMPI PUSH1 0x0 NOT PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 SUB PUSH2 0x223F JUMPI PUSH1 0x40 MLOAD PUSH4 0x521299A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 EQ PUSH2 0x225F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB7C1140D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x226A DUP8 DUP8 DUP8 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2275 DUP9 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2282 DUP9 PUSH2 0x2653 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP2 DUP1 DUP1 DUP1 JUMPDEST DUP11 DUP2 LT ISZERO PUSH2 0x2414 JUMPI DUP12 DUP12 DUP3 DUP2 DUP2 LT PUSH2 0x22A6 JUMPI PUSH2 0x22A6 PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22BB SWAP2 SWAP1 PUSH2 0x3FC9 JUMP JUMPDEST SWAP4 POP DUP10 DUP10 DUP3 DUP2 DUP2 LT PUSH2 0x22CF JUMPI PUSH2 0x22CF PUSH2 0x4769 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP3 POP PUSH2 0x22E1 DUP5 PUSH2 0x28C2 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP4 MSTORE PUSH1 0x3 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x2324 SWAP2 POP DUP5 PUSH1 0x1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x233B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP7 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x236F SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND SWAP3 SWAP1 PUSH2 0x23A8 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND SWAP3 SWAP1 PUSH2 0x23F0 SWAP1 DUP5 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2400 SWAP1 POP DUP5 DUP5 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x240A SWAP1 DUP8 PUSH2 0x477F JUMP JUMPDEST SWAP6 POP PUSH1 0x1 ADD PUSH2 0x228C JUMP JUMPDEST POP DUP6 DUP8 GT DUP1 ISZERO PUSH2 0x243C JUMPI POP PUSH3 0x186A0 PUSH2 0x242F PUSH2 0xC350 DUP9 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2439 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x2473 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF67D9A2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP3 POP DUP13 SWAP2 POP DUP3 SWAP1 POP PUSH3 0x186A0 PUSH2 0x248E PUSH2 0x2710 DUP3 PUSH2 0x477F JUMP JUMPDEST PUSH2 0x2498 SWAP1 DUP7 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x24A2 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH2 0x24AE DUP2 DUP7 PUSH2 0x48AA JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x24C6 JUMPI PUSH2 0x24C6 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x24E9 DUP2 CALLER ADDRESS DUP8 PUSH2 0x31D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2526 SWAP1 DUP7 DUP4 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x255F SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND SWAP3 SWAP1 PUSH2 0x2595 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x25D1 SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x25E8 DUP12 CALLER DUP13 DUP13 PUSH2 0x37F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x7CD35FF79D73D5AF7CB402EAAC9792D8B3D32B685B221CD81C3D5611C8327FD0 SWAP2 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2682 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xAE8 DUP2 PUSH2 0x38E2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x26CB JUMPI PUSH2 0x26CB PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP4 POP PUSH2 0x2727 SWAP2 DUP4 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2746 JUMPI PUSH2 0x2739 DUP3 DUP3 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x2743 SWAP1 DUP7 PUSH2 0x477F JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x2758 PUSH2 0x2E4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x27D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x27DD DUP2 PUSH2 0x3750 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0xAE5 SWAP1 DUP4 PUSH2 0x39E5 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2856 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xA9E SWAP2 DUP6 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xAE5 SWAP2 DUP6 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x28A4 DUP5 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x28AF DUP5 PUSH2 0xDF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BA DUP5 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 SWAP5 SWAP2 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP5 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH1 0x2 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP2 DUP10 ADD MSTORE DUP5 DUP9 ADD MSTORE DUP6 MLOAD PUSH2 0x140 DUP2 ADD DUP8 MSTORE PUSH1 0x4 DUP7 ADD SLOAD DUP2 MSTORE PUSH1 0x5 DUP7 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP10 DUP4 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH9 0x10000000000000000 DUP1 DUP3 DIV DUP11 AND DUP4 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP12 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 DUP3 SWAP1 DIV DUP11 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP9 DUP7 ADD SLOAD DUP1 DUP10 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP4 DIV DUP8 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP3 DIV DUP7 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP6 SWAP1 DIV SWAP1 SWAP4 AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD MLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 DUP3 SUB PUSH2 0x29DB JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP2 ADD MLOAD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SUB PUSH2 0x2A04 JUMPI PUSH1 0x60 ADD MLOAD SWAP2 POP PUSH2 0xA52 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD MLOAD ADD MLOAD ISZERO DUP1 PUSH2 0x2A1C JUMPI POP PUSH2 0x2A1C DUP8 PUSH2 0x21CB JUMP JUMPDEST ISZERO PUSH2 0x2A45 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE NUMBER AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND NUMBER PUSH2 0x2A61 SWAP2 SWAP1 PUSH2 0x48AA JUMP JUMPDEST DUP4 MLOAD MLOAD PUSH1 0x20 DUP6 ADD MLOAD MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x2A83 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2A8D SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A9B DUP5 DUP4 PUSH2 0x39FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x60 DUP8 ADD MSTORE TIMESTAMP DUP2 AND PUSH1 0x80 DUP8 ADD MSTORE NUMBER DUP2 AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0xCFF294BC3695620876CE22EC38B97AAA07675B271C26A784EBEBA510E59B1F65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2B0E PUSH3 0x201480 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4730 JUMP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 PUSH2 0x2B31 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2B3B SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2B45 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP9 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x2B66 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 MSTORE POP DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND SWAP2 SWAP1 PUSH2 0x2B84 SWAP1 DUP4 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x2C52 JUMPI PUSH3 0x186A0 DUP5 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x2BC0 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2BCA SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST DUP6 MLOAD MLOAD SWAP1 SWAP9 POP PUSH2 0x2BDB SWAP1 DUP10 SWAP1 PUSH2 0x48AA JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2BEB SWAP1 DUP11 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2BF5 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP7 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x2C16 SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 MSTORE POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP10 SWAP3 SWAP1 PUSH2 0x2C4C SWAP1 DUP5 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x60 DUP1 DUP6 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP13 SWAP1 MSTORE DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 DUP2 ADD DUP9 SWAP1 MSTORE PUSH32 0xF4FC4A63006144011C7214B4099772DE96603A49B426F18267C33B3C1EC35BED SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP9 MLOAD DUP1 MLOAD DUP3 SSTORE DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP9 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x2 DUP4 ADD SSTORE DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP8 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x4 DUP11 ADD SSTORE SWAP1 DUP2 ADD MLOAD PUSH1 0x5 DUP10 ADD DUP1 SLOAD SWAP5 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP6 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP9 DUP10 AND OR PUSH9 0x10000000000000000 SWAP4 DUP7 AND DUP5 MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP4 DUP8 AND DUP5 MUL PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP9 AND DUP5 MUL OR SWAP1 SWAP6 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD SWAP8 DUP15 ADD DUP1 SLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH2 0x100 DUP12 ADD MLOAD SWAP12 DUP11 AND SWAP3 SWAP1 SWAP13 AND SWAP2 SWAP1 SWAP2 OR SWAP1 DUP9 AND SWAP1 SWAP6 MUL SWAP5 SWAP1 SWAP5 OR AND SWAP8 DUP6 AND SWAP1 SWAP2 MUL SWAP1 SWAP3 AND SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP2 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x120 ADD MLOAD PUSH1 0x7 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0x2DF5 JUMPI POP DUP2 PUSH2 0xAE8 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2E06 SWAP1 DUP6 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2E10 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x2E3A JUMPI POP PUSH1 0x20 DUP5 ADD MLOAD DUP5 MLOAD DUP5 SWAP2 SWAP1 PUSH2 0x2E2E SWAP1 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x2E38 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE5 DUP2 PUSH1 0x1 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1051 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EBA JUMPI PUSH2 0x2EB5 DUP6 DUP6 DUP6 PUSH2 0x3ADA JUMP JUMPDEST PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x2EC3 DUP6 PUSH2 0x3D1A JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2ED7 JUMPI PUSH2 0x2ED7 PUSH2 0x48BD JUMP JUMPDEST SUB PUSH2 0xB04 JUMPI PUSH3 0x186A0 DUP3 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2F36 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5F7918ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1388 DUP3 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2F79 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x36E6824B PUSH1 0xE2 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1388 DUP3 PUSH1 0x40 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2FBC JUMPI PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 MLOAD PUSH4 0x36E6824B PUSH1 0xE2 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD SWAP1 DUP2 SSTORE SWAP3 DUP8 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD DUP10 DUP9 ADD MLOAD DUP5 AND PUSH9 0x10000000000000000 SWAP1 DUP2 MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SSTORE PUSH1 0x60 DUP9 ADD MLOAD SWAP5 DUP4 ADD DUP1 SLOAD PUSH1 0x80 DUP11 ADD MLOAD PUSH1 0xA0 DUP12 ADD MLOAD DUP6 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP7 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 SWAP1 SWAP7 AND SWAP1 SWAP5 MUL SWAP8 SWAP1 SWAP8 AND PUSH32 0xFFFFFFFFFFFFFFFF00000000000000000000000000000000FFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP3 SWAP1 SWAP3 OR SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x7 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0x7E914AF3D8D31AC64E6DF6E8087AC12953B11A1BCEEBF2A80692AA35E6B0E6FF SWAP1 PUSH2 0x3176 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP6 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP6 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 SUB PUSH2 0x319B JUMPI POP DUP2 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x31AC SWAP1 DUP6 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x31B6 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x2E3A JUMPI POP DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD DUP5 SWAP2 SWAP1 PUSH2 0x2E2E SWAP1 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SUB PUSH2 0x3279 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x324E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3272 SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST SWAP1 POP PUSH2 0x3310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x330D SWAP2 SWAP1 PUSH2 0x488D JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3387 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x48D3 JUMP JUMPDEST PUSH2 0x33B4 DUP5 PUSH2 0x28C2 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP3 POP SWAP1 POP DUP3 ISZERO PUSH2 0x3450 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 SWAP2 PUSH2 0x3425 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x3186 JUMP JUMPDEST SWAP5 POP DUP4 DUP6 LT ISZERO PUSH2 0x344B JUMPI PUSH1 0x40 MLOAD PUSH4 0x28AC9B3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x34B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x348D SWAP2 DUP8 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x34B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x28AC9B3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1051 JUMP JUMPDEST DUP1 DUP3 LT DUP1 PUSH2 0x3528 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3502 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3526 SWAP2 SWAP1 PUSH2 0x48F6 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x3546 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP10 AND SWAP1 SWAP2 SUB SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP12 AND SWAP1 SUB SWAP1 SSTORE CALLER DUP1 DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE PUSH2 0x35A9 SWAP2 SWAP1 ADDRESS SWAP1 DUP9 PUSH2 0x31D4 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x35BB CALLER PUSH2 0x1457 JUMP JUMPDEST LT ISZERO PUSH2 0x35DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x74FA216B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 SWAP1 PUSH1 0x80 ADD PUSH2 0x3176 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAE8 DUP4 PUSH2 0x3D84 JUMP JUMPDEST PUSH2 0x363D DUP2 PUSH2 0x21CB JUMP JUMPDEST ISZERO PUSH2 0x27DD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB187BD2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SLOAD DUP3 SWAP2 PUSH3 0x186A0 SWAP2 PUSH2 0x36A4 SWAP2 SWAP1 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x36AE SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3748 JUMPI POP PUSH2 0x36DD DUP4 DUP3 PUSH2 0x477F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3721 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3745 SWAP2 SWAP1 PUSH2 0x48F6 JUMP JUMPDEST LT ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DD1B30500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3804 DUP5 DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH2 0x3821 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79F151F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH2 0x3850 SWAP1 DUP3 PUSH2 0x3DE0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x394C SWAP2 SWAP1 PUSH2 0x4929 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SGT ISZERO DUP1 PUSH2 0x3963 JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x3985 JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST DUP1 PUSH2 0x399A JUMPI POP PUSH2 0x1C20 PUSH2 0x3998 DUP4 TIMESTAMP PUSH2 0x48AA JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x39D0 JUMPI PUSH1 0x40 MLOAD PUSH31 0xBFC92100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39DB PUSH1 0xA DUP1 PUSH2 0x496D JUMP JUMPDEST PUSH2 0xDD9 SWAP1 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH1 0x0 SWAP4 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP3 DUP2 AND SWAP2 AND DUP4 DUP7 GT PUSH2 0x3A5A JUMPI PUSH1 0x0 DUP5 PUSH2 0x3A3C DUP5 DUP10 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x3A46 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A52 DUP2 DUP6 PUSH2 0x477F JUMP JUMPDEST SWAP6 POP POP PUSH2 0x3AD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A66 DUP6 DUP9 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3A7C DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x48AA JUMP JUMPDEST PUSH2 0x3A8E PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x3A98 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x3AAD DUP5 DUP4 PUSH2 0x4730 JUMP JUMPDEST PUSH2 0x3AB7 SWAP2 SWAP1 PUSH2 0x4747 JUMP JUMPDEST PUSH2 0x3AC1 DUP6 DUP8 PUSH2 0x477F JUMP JUMPDEST PUSH2 0x3ACB SWAP2 SWAP1 PUSH2 0x477F JUMP JUMPDEST SWAP7 POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3706BA4900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B48 JUMPI PUSH2 0x3B48 PUSH2 0x48BD JUMP JUMPDEST GT ISZERO PUSH2 0x3B82 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4E00ADE000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x499B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE DUP4 SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BEB JUMPI PUSH2 0x3BEB PUSH2 0x48BD JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C48 JUMPI PUSH2 0x3C48 PUSH2 0x48BD JUMP JUMPDEST SUB PUSH2 0x3C9D JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH2 0x3CE9 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH32 0x20BA3738D0F69AD18E0A9923005003B1434FFC62C40AD3332D30D2D42C49EF42 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x49A9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3D4D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x27DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x7ACF489200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3DD4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3DC0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA8 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x3ED0 JUMPI PUSH1 0x0 PUSH2 0x3E0B PUSH1 0x1 DUP4 PUSH2 0x48AA JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3E1F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x48AA JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x3E84 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3E3F JUMPI PUSH2 0x3E3F PUSH2 0x4769 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3E62 JUMPI PUSH2 0x3E62 PUSH2 0x4769 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x3E95 JUMPI PUSH2 0x3E95 PUSH2 0x49C6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F1A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x120 DUP3 ADD MSTORE SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FAB DUP5 PUSH2 0x3F71 JUMP JUMPDEST SWAP3 POP PUSH2 0x3FB9 PUSH1 0x20 DUP6 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA8 DUP3 PUSH2 0x3F71 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x27DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3F88 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x401B DUP5 PUSH2 0x3F71 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x4032 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x404F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x407F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x409E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40A7 DUP7 PUSH2 0x3F71 JUMP JUMPDEST SWAP5 POP PUSH2 0x40B5 PUSH1 0x20 DUP8 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40E4 DUP9 DUP3 DUP10 ADD PUSH2 0x403D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x160 DUP2 SLT ISZERO PUSH2 0x413D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4146 DUP8 PUSH2 0x3F71 JUMP JUMPDEST SWAP6 POP PUSH2 0x4154 PUSH1 0x20 DUP9 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x4168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0xE0 PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH2 0x417C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x41AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x41BD PUSH1 0x60 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x41CB PUSH1 0x80 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x41DC PUSH1 0xA0 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x41ED PUSH1 0xC0 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x41FE PUSH1 0xE0 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x4210 PUSH2 0x100 DUP9 ADD PUSH2 0x410B JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x120 DUP8 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP2 POP PUSH2 0x422F PUSH2 0x140 DUP8 ADD PUSH2 0x3FF2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x424E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4257 DUP4 PUSH2 0x3F71 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4267 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x428E DUP4 PUSH2 0x3F71 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x42B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42BA DUP5 PUSH2 0x3F71 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD PUSH1 0x20 DUP4 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE SWAP1 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE POP PUSH1 0x40 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x100 PUSH2 0x4366 DUP2 DUP7 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD SWAP2 POP PUSH2 0x120 PUSH2 0x4385 DUP2 DUP8 ADD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD DUP2 AND PUSH2 0x160 DUP9 ADD MSTORE SWAP2 DUP5 ADD MLOAD SWAP1 SWAP2 AND PUSH2 0x180 DUP7 ADD MSTORE SWAP1 SWAP2 ADD MLOAD PUSH2 0x1A0 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43E6 DUP4 PUSH2 0x3F71 JUMP JUMPDEST SWAP2 POP PUSH2 0x43F4 PUSH1 0x20 DUP5 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x442D JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4411 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x445D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x407F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x44AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44B4 DUP9 PUSH2 0x3F71 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x44D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44DD DUP12 DUP4 DUP13 ADD PUSH2 0x444B JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x44F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4502 DUP12 DUP4 DUP13 ADD PUSH2 0x444B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x451B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4528 DUP11 DUP3 DUP12 ADD PUSH2 0x403D JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x455A DUP6 PUSH2 0x3F71 JUMP JUMPDEST SWAP4 POP PUSH2 0x4568 PUSH1 0x20 DUP7 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP3 POP PUSH2 0x4576 PUSH1 0x40 DUP7 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x45A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45AA DUP9 PUSH2 0x3F71 JUMP JUMPDEST SWAP7 POP PUSH2 0x45B8 PUSH1 0x20 DUP10 ADD PUSH2 0x3F71 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x45DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45E8 DUP12 DUP4 DUP13 ADD PUSH2 0x444B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4528 DUP11 DUP3 DUP12 ADD PUSH2 0x444B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4678 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x465E JUMPI PUSH2 0x465E PUSH2 0x460E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x466B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4642 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x468F JUMPI POP PUSH1 0x1 PUSH2 0xFAB JUMP JUMPDEST DUP2 PUSH2 0x469C JUMPI POP PUSH1 0x0 PUSH2 0xFAB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x46B2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x46BC JUMPI PUSH2 0x46D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xFAB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x46CD JUMPI PUSH2 0x46CD PUSH2 0x460E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xFAB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x46FB JUMPI POP DUP2 DUP2 EXP PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x4705 DUP4 DUP4 PUSH2 0x463D JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4719 JUMPI PUSH2 0x4719 PUSH2 0x460E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4680 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4764 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP11 SWAP2 PUSH1 0xC0 DUP6 ADD DUP5 JUMPDEST DUP13 DUP2 LT ISZERO PUSH2 0x4808 JUMPI DUP4 PUSH2 0x47F5 DUP7 PUSH2 0x3F71 JUMP JUMPDEST AND DUP3 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x47E3 JUMP JUMPDEST POP DUP6 DUP2 SUB PUSH1 0x40 DUP8 ADD MSTORE DUP10 DUP2 MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 GT ISZERO PUSH2 0x4841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x5 SHL SWAP4 POP DUP4 DUP12 DUP4 DUP4 ADD CALLDATACOPY SWAP1 SWAP3 ADD DUP5 DUP2 SUB DUP4 ADD PUSH1 0x60 DUP7 ADD MSTORE SWAP2 PUSH2 0x4867 DUP2 DUP5 ADD DUP10 PUSH2 0x43FD JUMP JUMPDEST SWAP3 POP POP POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x487E DUP2 DUP6 DUP8 PUSH2 0x4792 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x489F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAE8 DUP2 PUSH2 0x3FE4 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0x460E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x494A DUP7 PUSH2 0x490F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x422F PUSH1 0x80 DUP8 ADD PUSH2 0x490F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA8 DUP4 DUP4 PUSH2 0x4680 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4997 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xFAB DUP3 DUP5 PUSH2 0x4979 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0xAE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4979 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x15512FD904E89D9FC5C3F4F5B1EF0B SWAP8 SAR SMOD SWAP1 0x4B 0xD6 0x4C LOG0 JUMP PUSH1 0x9E EXTCODEHASH PUSH27 0x8CBD7464736F6C6343000814003300000000000000000000000000 ","sourceMap":"552:29389:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14289:357;;;;;;;;;;-1:-1:-1;14289:357:16;;;;;:::i;:::-;;:::i;:::-;;12658:281;;;;;;;;;;-1:-1:-1;12658:281:16;;;;;:::i;:::-;;:::i;:::-;;;;1075:25:27;;;1131:2;1116:18;;1109:34;;;;1159:18;;;1152:34;1234:18;1222:31;1217:2;1202:18;;1195:59;1062:3;1047:19;12658:281:16;;;;;;;;22105:357;;;;;;;;;;-1:-1:-1;22105:357:16;;;;;:::i;:::-;;:::i;:::-;;;2055:25:27;;;2043:2;2028:18;22105:357:16;1909:177:27;1857:212:17;;;;;;;;;;-1:-1:-1;1857:212:17;;;;;:::i;:::-;2021:41;1857:212;;;;;;;;;;;3248:66:27;3236:79;;;3218:98;;3206:2;3191:18;1857:212:17;3074:248:27;23349:283:16;;;;;;;;;;-1:-1:-1;23349:283:16;;;;;:::i;:::-;;:::i;760:360:26:-;;;;;;;;;;-1:-1:-1;760:360:26;;;;;:::i;:::-;;:::i;5297:789:16:-;;;;;;;;;;-1:-1:-1;5297:789:16;;;;;:::i;:::-;;:::i;92:33:25:-;;;;;;;;;;;;122:3;92:33;;21355:338:16;;;;;;;;;;-1:-1:-1;21355:338:16;;;;;:::i;:::-;;:::i;6288:169::-;;;;;;;;;;-1:-1:-1;6288:169:16;;;;;:::i;:::-;;:::i;19213:566::-;;;;;;;;;;-1:-1:-1;19213:566:16;;;;;:::i;:::-;;:::i;21699:144::-;;;;;;;;;;-1:-1:-1;21699:144:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1487:186:17:-;;;;;;;;;;-1:-1:-1;1487:186:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13451:832:16:-;;;;;;;;;;-1:-1:-1;13451:832:16;;;;;:::i;:::-;;:::i;4560:708::-;;;;;;:::i;:::-;;:::i;17337:748::-;;;;;;;;;;-1:-1:-1;17337:748:16;;;;;:::i;:::-;;:::i;147:31:26:-;;;;;;;;;;-1:-1:-1;147:31:26;;;;-1:-1:-1;;;147:31:26;;;;;;;;;8999:14:27;;8992:22;8974:41;;8962:2;8947:18;147:31:26;8834:187:27;20712:637:16;;;;;;;;;;-1:-1:-1;20712:637:16;;;;;:::i;:::-;;:::i;1824:101:1:-;;;;;;;;;;;;;:::i;11189:1445:16:-;;;;;;;;;;-1:-1:-1;11189:1445:16;;;;;:::i;:::-;;:::i;3877:660::-;;;;;;:::i;:::-;;:::i;13095:344::-;;;;;;;;;;-1:-1:-1;13095:344:16;;;;;:::i;:::-;;:::i;19785:581::-;;;;;;;;;;-1:-1:-1;19785:581:16;;;;;:::i;:::-;;:::i;1201:85:1:-;;;;;;;;;;-1:-1:-1;1247:7:1;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:1;;;10684:74:27;;10672:2;10657:18;1201:85:1;10538:226:27;23018:182:16;;;;;;;;;;-1:-1:-1;23018:182:16;;;;;:::i;:::-;;:::i;20372:334::-;;;;;;;;;;-1:-1:-1;20372:334:16;;;;;:::i;:::-;-1:-1:-1;;;;;20606:16:16;;;20513:28;20606:16;;;:10;:16;;;;;;;;:23;;;;;;;;;;;:34;;20669:30;;;;;20606:34;;20372:334;;;;;10943:25:27;;;10999:2;10984:18;;10977:34;;;;10916:18;20372:334:16;10769:248:27;6463:4714:16;;;;;;;;;;-1:-1:-1;6463:4714:16;;;;;:::i;:::-;;:::i;177:40:25:-;;;;;;;;;;;;213:4;177:40;;1679:172:17;;;;;;;;;;-1:-1:-1;1679:172:17;;;;;:::i;:::-;;:::i;6104:168:16:-;;;;;;;;;;-1:-1:-1;6104:168:16;;;;;:::i;:::-;;:::i;632:122:26:-;;;;;;;;;;-1:-1:-1;632:122:26;;;;;:::i;:::-;;:::i;22831:181:16:-;;;;;;;;;;-1:-1:-1;22831:181:16;;;;;:::i;:::-;;:::i;14652:2679::-;;;;;;;;;;-1:-1:-1;14652:2679:16;;;;;:::i;:::-;;:::i;1340:298:18:-;;;;;;;;;;-1:-1:-1;1340:298:18;;;;;:::i;:::-;;:::i;937:49:25:-;;;;;;;;;;;;979:7;937:49;;18613:594:16;;;;;;;;;;-1:-1:-1;18613:594:16;;;;;:::i;:::-;;:::i;2074:198:1:-;;;;;;;;;;-1:-1:-1;2074:198:1;;;;;:::i;:::-;;:::i;1273:208:17:-;;;;;;;;;;-1:-1:-1;1273:208:17;;;;;:::i;:::-;;:::i;22468:357:16:-;;;;;;;;;;-1:-1:-1;22468:357:16;;;;;:::i;:::-;;:::i;21849:250::-;;;;;;;;;;-1:-1:-1;21849:250:16;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;22041:30:16;;;;;;;:21;:30;;;;;;;;:42;;;;;;;;;;;:51;;;;;;;;;22034:58;;;;;;;;;;;;;;-1:-1:-1;;;22034:58:16;;;;;;;;;;;;;21849:250;;;;;12664:13:27;;-1:-1:-1;;;;;12660:62:27;12642:81;;12783:4;12771:17;;;12765:24;12791:18;12761:49;12739:20;;;12732:79;;;;12615:18;21849:250:16;12426:391:27;18231:376:16;;;;;;;;;;-1:-1:-1;18231:376:16;;;;;:::i;:::-;;:::i;:::-;;;;13024:25:27;;;13080:2;13065:18;;13058:34;;;;13108:18;;;13101:34;13012:2;12997:18;18231:376:16;12822:319:27;14289:357:16;284:4:25;14424:21:16;14437:7;14424:12;:21::i;:::-;:41;14420:85;;;14486:19;;-1:-1:-1;;;14486:19:16;;;;;;;;;;;14420:85;-1:-1:-1;;;;;14522:30:16;;;;;;;:21;:30;;;;;;;;:42;;;;;;;;;;;;:51;;;;;;;;;14515:58;;;;;;14588:51;;13409:34:27;;;13459:18;;13452:43;;;;13511:18;;;13504:34;;;14588:51:16;;13336:2:27;13321:18;14588:51:16;;;;;;;;14289:357;;;:::o;12658:281::-;12759:23;12796:19;12829:18;12861:15;12909:23;12926:5;12909:16;:23::i;:::-;12902:30;;;;;;;;12658:281;;;;;;:::o;22105:357::-;22228:14;22258:7;22254:202;;;-1:-1:-1;;;;;22298:13:16;;22340:5;22298:13;;;:6;:13;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;:48;;22332:6;;22298:33;:48::i;:::-;22281:66;;22254:202;;;-1:-1:-1;;;;;22395:13:16;;22438:5;22395:13;;;:6;:13;;;;;;;;:34;;;;;;;;:25;;;:34;;;;;;;;;;;;;:49;;22430:6;;22395:34;:49::i;:::-;22378:67;;22254:202;22105:357;;;;;:::o;23349:283::-;1094:13:1;:11;:13::i;:::-;23567:58:16::1;23579:5;23586:9;23597;23608:6;23616:8;23567:11;:58::i;:::-;23349:283:::0;;;;;:::o;760:360:26:-;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;846:19:26;::::1;842:272;;940:12;:21:::0;;;::::1;;-1:-1:-1::0;;;940:21:26::1;::::0;;;::::1;;::::0;;980:20:::1;::::0;::::1;::::0;::::1;::::0;955:6;8999:14:27;8992:22;8974:41;;8962:2;8947:18;;8834:187;980:20:26::1;;;;;;;;760:360:::0;;:::o;842:272::-:1;-1:-1:-1::0;;;;;1031:18:26;::::1;;::::0;;;:11:::1;:18;::::0;;;;;;;;:27;;-1:-1:-1;;1031:27:26::1;::::0;::::1;;::::0;;::::1;::::0;;;1077:26;;13717:74:27;;;13807:18;;;13800:50;1077:26:26::1;::::0;13690:18:27;1077:26:26::1;13549:307:27::0;5297:789:16;5362:23;5379:5;5362:16;:23::i;:::-;-1:-1:-1;;5432:10:16;5395:23;5421:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;5421:29:16;;;;;;;;;:36;;;;;5484:6;:13;;;;;:34;;;;;;;;:25;;;:34;;;;;;;;;;;;;5421:36;;-1:-1:-1;5395:23:16;;-1:-1:-1;5484:48:16;;:34;5519:6;;5484:34;:48::i;:::-;5467:65;;-1:-1:-1;;5546:6:16;:27;:55;;;;5586:15;5577:6;:24;5546:55;5542:181;;;-1:-1:-1;;;;;;5664:13:16;;;;;;:6;:13;;;;;;;;;:34;;;;;;;;:25;;;:34;;;;;;;;;;5626:15;;5664:48;;5626:15;5707:4;5664:34;:48::i;:::-;5655:57;;5542:181;5732:54;-1:-1:-1;;;;;5732:19:16;;5752:10;5772:4;5779:6;5732:19;:54::i;:::-;-1:-1:-1;;;;;5820:13:16;;;;;;:6;:13;;;;;;;;:32;;;:51;;-1:-1:-1;;;;;5820:51:16;;;;;;;;;:25;;;;5885:51;;;;;;;;;;5961:10;5950:22;;;:10;:22;;;;;:29;;;;;;;;;5989:24;;;-1:-1:-1;5950:36:16;;;;:63;6039:40;;14153:34:27;;;14203:18;;;14196:43;;;;14255:18;;;14248:34;;;14313:2;14298:18;;14291:34;;;6039:40:16;;14079:3:27;14064:19;6039:40:16;;;;;;;;5352:734;;5297:789;;:::o;21355:338::-;21453:13;21478;21494:20;21508:5;21494:13;:20::i;:::-;21478:36;;21524:14;21541:21;:5;-1:-1:-1;;;;;21541:19:16;;:21::i;:::-;21524:38;-1:-1:-1;21572:26:16;21615:12;21524:38;21615:2;:12;:::i;:::-;21610:18;;:2;:18;:::i;:::-;21601:27;;:6;:27;:::i;:::-;21572:56;-1:-1:-1;213:4:25;21647:26:16;21668:5;21572:56;21647:26;:::i;:::-;21646:40;;;;:::i;:::-;21638:48;21355:338;-1:-1:-1;;;;;;21355:338:16:o;6288:169::-;6406:44;6416:5;6423:6;6431:12;6445:4;6406:9;:44::i;:::-;6288:169;;;:::o;19213:566::-;19323:13;:20;19277:23;;;19353:420;19373:3;19369:1;:7;19353:420;;;19393:18;19414:13;19428:1;19414:16;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;19414:16:16;;-1:-1:-1;19472:38:16;19493:4;19414:16;19472:20;:38::i;:::-;19444:66;-1:-1:-1;19528:22:16;;19524:180;;19570:21;19594:25;19608:10;19594:13;:25::i;:::-;19570:49;-1:-1:-1;19656:33:16;19570:49;19656:17;:33;:::i;:::-;19637:52;;;;:::i;:::-;;;19552:152;19524:180;-1:-1:-1;;19745:3:16;;19353:420;;;;19302:477;19213:566;;;:::o;21699:144::-;21772:31;;:::i;:::-;-1:-1:-1;;;;;;21823:13:16;;;;;:6;:13;;;;;;;;;21815:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21815:21:16;;;;;;;;;;;;-1:-1:-1;;;21815:21:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21815:21:16;;21699:144::o;1487:186:17:-;-1:-1:-1;;;;;1625:20:17;;;;;;;:13;:20;;;;;;;;:32;;;;;;;;;1590:16;;1625:41;;:39;:41::i;:::-;1618:48;;1487:186;;;;;:::o;13451:832:16:-;13589:45;13605:7;13614:10;13626:7;13589:15;:45::i;:::-;13584:71;;13643:12;;-1:-1:-1;;;13643:12:16;;;;;;;;;;;13584:71;13665:33;13701:58;13742:7;13701:27;:58::i;:::-;13665:94;;284:4:25;13787:21:16;13800:7;13787:12;:21::i;:::-;:42;;:88;;;-1:-1:-1;13845:30:16;;;13787:88;13770:174;;;13893:51;;;;;-1:-1:-1;;;;;13427:15:27;;;13893:51:16;;;13409:34:27;13479:15;;13459:18;;;13452:43;13511:18;;;13504:34;;;13321:18;;13893:51:16;;;;;;;;13770:174;-1:-1:-1;;;;;13999:52:16;;;13955:41;13999:52;;;:21;:52;;;;;;;;:64;;;;;;;;;;;:73;;;;;;14082:31;;-1:-1:-1;;;;;;14082:31:16;14103:10;14082:31;;;14161:35;671:8:25;14161:15:16;:35;:::i;:::-;14123:74;;;;-1:-1:-1;;;14123:74:16;;;;;;;;;;;;14213:63;;;14235:10;17127:34:27;;-1:-1:-1;;;;;17197:15:27;;;17192:2;17177:18;;17170:43;17249:15;;17229:18;;;17222:43;17296:2;17281:18;;17274:34;;;14213:63:16;;;;;;;17053:3:27;14213:63:16;;;13574:709;;13451:832;;;:::o;4560:708::-;4634:20;4648:5;4634:13;:20::i;:::-;4668:36;4691:5;4697:6;4668:22;:36::i;:::-;4664:82;;4725:21;;-1:-1:-1;;;4725:21:16;;;;;;;;;;;4664:82;4756:23;4773:5;4756:16;:23::i;:::-;-1:-1:-1;;;;;;;;;4807:13:16;;4790:14;4807:13;;;:6;:13;;;;;;;;:34;;;;;;;;:25;;;:34;;;;;;;;;;;;;:49;;4842:6;4790:14;4807:34;:49::i;:::-;-1:-1:-1;;;;;4866:13:16;;;;;;:6;:13;;;;;:32;;:51;;4790:66;;-1:-1:-1;;;;;;4866:51:16;;;:32;;:13;:51;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;4927:13:16;;;;;;:6;:13;;;;;:25;;:51;;-1:-1:-1;;;;;4927:51:16;;;:13;:51;;;;;:::i;:::-;;;;-1:-1:-1;;4999:10:16;4988:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4988:29:16;;;;;;;;;:36;;:46;;5028:6;;4988:22;:46;;5028:6;;4988:46;:::i;:::-;;;;-1:-1:-1;5053:54:16;;-1:-1:-1;;;;;;5053:19:16;;5081:4;5088:10;5100:6;5053:19;:54::i;:::-;284:4:25;5120:24:16;5133:10;5120:12;:24::i;:::-;:44;5117:87;;;5185:19;;-1:-1:-1;;;5185:19:16;;;;;;;;;;;5117:87;5220:41;;;5227:10;14153:34:27;;-1:-1:-1;;;;;14223:15:27;;14218:2;14203:18;;14196:43;14255:18;;;14248:34;;;14313:2;14298:18;;14291:34;;;5220:41:16;;14079:3:27;14064:19;5220:41:16;13861:470:27;17337:748:16;284:4:25;17472:21:16;17485:7;17472:12;:21::i;:::-;:41;17468:86;;;17535:19;;-1:-1:-1;;;17535:19:16;;;;;;;;;;;17468:86;-1:-1:-1;;;;;17608:52:16;;;17564:41;17608:52;;;:21;:52;;;;;;;;:64;;;;;;;;;;:73;;;;;;;;17695:18;;17608:73;;17695:18;17691:67;;17736:22;;;;;;;;;;;;;;17691:67;17790:28;;-1:-1:-1;;;17790:28:16;;;;17772:15;:46;17768:97;;;17839:26;;;;;;;;;;;;;;17768:97;17923:28;;:51;;734:9:25;;-1:-1:-1;;;17923:28:16;;;;:51;:::i;:::-;17892:15;:82;;:130;;;;-1:-1:-1;18004:18:16;;-1:-1:-1;;;;;18004:18:16;17990:10;:32;;17892:130;17875:194;;;18040:29;;;;;;;;;;;;;;17875:194;17458:627;17337:748;;;:::o;20712:637::-;20769:14;20809:28;20851:26;20891:24;20928:17;20940:4;20928:11;:17::i;:::-;20795:150;;-1:-1:-1;20795:150:16;-1:-1:-1;20795:150:16;-1:-1:-1;20956:32:16;20991:53;20795:150;;20991:53;:::i;:::-;20956:88;;21058:16;21078:1;21058:21;21054:57;;21088:23;284:4:25;21088:3:16;:23;:::i;21054:57::-;21121:36;122:3:25;21161:61:16;411:3:25;21161:24:16;:61;:::i;:::-;21160:69;;;;:::i;:::-;21121:108;-1:-1:-1;21326:16:16;21262:48;284:4:25;21121:108:16;21262:48;:::i;:::-;21261:81;;;;:::i;:::-;21239:103;20712:637;-1:-1:-1;;;;;;;20712:637:16:o;1824:101:1:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;11189:1445:16:-;11387:1;11370:18;;;11366:43;;11397:12;;-1:-1:-1;;;11397:12:16;;;;;;;;;;;11366:43;11423:31;;;11419:59;;11463:15;;-1:-1:-1;;;11463:15:16;;;;;;;;;;;11419:59;11554:15;11489:35;11618:6;11604:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11604:28:16;;11580:52;;11647:9;11642:328;11658:17;;;11642:328;;;11697:23;11710:6;;11717:1;11710:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;11697:23::-;11724:1;11697:28;11693:67;;11750:6;;11757:1;11750:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11734:26;;;;;-1:-1:-1;;;;;10702:55:27;;;11734:26:16;;;10684:74:27;10657:18;;11734:26:16;10538:226:27;11693:67:16;11784:35;11797:6;;11804:1;11797:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11808:7;;11816:1;11808:10;;;;;;;:::i;:::-;;;;;;;11784:12;:35::i;:::-;11774:4;11779:1;11774:7;;;;;;;;:::i;:::-;;;;;;:45;;;;;11833:67;11865:4;11872:15;11889:7;;11897:1;11889:10;;;;;;;:::i;:::-;;;;;;;11833:6;;11840:1;11833:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11833:23:16;;:67;;:23;:67::i;:::-;11942:3;;11642:328;;;-1:-1:-1;11984:131:16;;;;;-1:-1:-1;;;;;11984:20:16;;;;;:131;;12018:10;;12042:6;;;;12062:7;;;;12083:4;;12101;;;;11984:131;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11979:162;;12124:17;;;;;;;;;;;;;;11979:162;12152:21;12188:9;12183:372;12199:17;;;12183:372;;;12263:4;12268:1;12263:7;;;;;;;;:::i;:::-;;;;;;;12250;;12258:1;12250:10;;;;;;;:::i;:::-;;;;;;;:20;;;;:::i;:::-;12234:36;;12284:132;12325:15;12366:4;12389:13;12284:6;;12291:1;12284:9;;;;;;;:::i;:132::-;12477:4;12482:1;12477:7;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12430:55:16;:6;:17;12437:6;;12444:1;12437:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12430:17:16;-1:-1:-1;;;;;12430:17:16;;;;;;;;;;;;:28;;:35;;;:55;;;;;;;:::i;:::-;;;;-1:-1:-1;;12527:3:16;;12183:372;;;;12570:57;12587:10;12599:6;;12607:7;;12616:4;12622;;12570:57;;;;;;;;;;;;;:::i;:::-;;;;;;;;11356:1278;;;11189:1445;;;;;;;:::o;3877:660::-;4004:20;4018:5;4004:13;:20::i;:::-;4034:19;4047:5;4034:12;:19::i;:::-;4063:23;4080:5;4063:16;:23::i;:::-;-1:-1:-1;4097:53:16;;-1:-1:-1;;;;;;;;4097:19:16;;4117:10;4137:4;4143:6;4097:19;:53::i;:::-;-1:-1:-1;;;;;4177:13:16;;4160:14;4177:13;;;:6;:13;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;:48;;4211:6;4160:14;4177:33;:48::i;:::-;4160:65;;4248:12;4239:6;:21;4235:56;;;4269:22;;-1:-1:-1;;;4269:22:16;;;;;2055:25:27;;;2028:18;;4269:22:16;1909:177:27;4235:56:16;-1:-1:-1;;;;;4302:13:16;;;;;;:6;:13;;;;;:31;;:50;;-1:-1:-1;;;;;4302:50:16;;;:13;:50;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;4362:13:16;;;;;;:6;:13;;;;;:50;;-1:-1:-1;;;;;4362:50:16;;;:13;:50;;;;;:::i;:::-;;;;-1:-1:-1;;4433:10:16;4422:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4422:29:16;;;;;;;;;:50;;4466:6;;4422:22;:50;;4466:6;;4422:50;:::i;:::-;;;;-1:-1:-1;;4488:42:16;;;4496:10;14153:34:27;;-1:-1:-1;;;;;14223:15:27;;14218:2;14203:18;;14196:43;14255:18;;;14248:34;;;14313:2;14298:18;;14291:34;;;4488:42:16;;14079:3:27;14064:19;4488:42:16;13861:470:27;13095:344:16;13220:56;13233:10;13245:9;13256:10;13268:7;13220:12;:56::i;:::-;284:4:25;13290:24:16;13303:10;13290:12;:24::i;:::-;:44;13286:76;;;13343:19;;-1:-1:-1;;;13343:19:16;;;;;;;;;;;13286:76;13377:55;;;13389:10;17127:34:27;;-1:-1:-1;;;;;17197:15:27;;;17192:2;17177:18;;17170:43;17249:15;;17229:18;;;17222:43;;;;17296:2;17281:18;;17274:34;;;13377:55:16;;17053:3:27;17038:19;13377:55:16;16835:479:27;19785:581:16;19908:15;:22;19862:23;;;19940:420;19960:3;19956:1;:7;19940:420;;;19980:13;19996:15;20012:1;19996:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;20102:16:16;;;;;:10;:16;;;;;;19996:18;;;;20102:23;;;;;;;;;19996:18;20102:30;;20050:6;:13;;;;;:34;;;;;;;;:25;;;:34;;;;;;;;;;;;;19996:18;-1:-1:-1;20050:119:16;;19996:18;20050:34;:119::i;:::-;20028:141;-1:-1:-1;20187:16:16;;20183:108;;20242:34;20257:5;20264:11;20242:14;:34::i;:::-;20223:53;;;;:::i;:::-;;;20183:108;-1:-1:-1;;20332:3:16;;19940:420;;23018:182;-1:-1:-1;;;;;23150:13:16;;23114:7;23150:13;;;:6;:13;;;;;:36;;;122:3:25;;23141:45:16;;23150:36;;;;;23141:6;:45;:::i;:::-;23140:53;;;;:::i;6463:4714::-;-1:-1:-1;;;;;6632:21:16;;:10;:21;6628:51;;6662:17;;;;;;;;;;;;;;6628:51;6689:21;6713;6726:7;6713:12;:21::i;:::-;6689:45;;284:4:25;6748:13:16;:34;6744:66;;6791:19;;-1:-1:-1;;;6791:19:16;;;;;;;;;;;6744:66;-1:-1:-1;;;;;6848:19:16;;;6821:24;6848:19;;;:10;:19;;;;;;;;:31;;;;;;;;;;;:42;6923:36;;;;;;;:43;;;6980:21;;;:42;;-1:-1:-1;7005:17:16;;6980:42;6976:55;;;7024:7;;;;;6976:55;-1:-1:-1;;;;;7082:23:16;;7054:25;7082:23;;;:6;:23;;;;;;;;:78;;;;;;;;:52;;;:78;;;;;;;;;;;;;:98;;7161:12;7175:4;7082:78;:98::i;:::-;7054:126;;7195:34;349:6:25;7232:13:16;:59;;:167;;7382:17;7232:167;;;122:3:25;7311:45:16;480:3:25;7311:17:16;:45;:::i;:::-;7310:53;;;;:::i;:::-;7195:204;;7453:26;7433:17;:46;:127;;7543:17;7433:127;;;7498:26;7433:127;-1:-1:-1;;;;;7910:23:16;;7582:35;7910:23;;;:6;:23;;;;;;;;:77;;;;;;;;;;;;;;;;;;;;;;7413:147;;-1:-1:-1;7582:35:16;-1:-1:-1;7582:35:16;;-1:-1:-1;7691:7:16;;7734:15;;7789:10;;7413:147;;7582:35;;7910:102;;7988:16;7582:35;7910:77;:102::i;:::-;7873:139;;8039:23;8065:30;8079:15;8065:13;:30::i;:::-;8039:56;;8109:24;8136:26;8150:11;8136:13;:26::i;:::-;8109:53;;8176:24;8203:31;:15;-1:-1:-1;;;;;8203:29:16;;:31::i;:::-;8176:58;;8248:25;8276:27;:11;-1:-1:-1;;;;;8276:25:16;;:27::i;:::-;8248:55;-1:-1:-1;8507:25:16;8248:55;8507:2;:25;:::i;:::-;8489:43;;:15;:43;:::i;:::-;8444:24;8450:18;8444:2;:24;:::i;:::-;8365:56;8405:16;8365:17;:56;:::i;:::-;:103;;;;:::i;:::-;8364:169;;;;:::i;:::-;8318:215;-1:-1:-1;8547:28:16;122:3:25;8579:64:16;542:3:25;8318:215:16;8579:64;:::i;:::-;8578:72;;;;:::i;:::-;8547:103;;8698:26;8668:27;:56;8664:794;;;8774:26;8744:56;;9031:18;9025:2;:24;;;;:::i;:::-;8985:16;8956:25;8962:19;8956:2;:25;:::i;:::-;8861:68;8914:15;8861:26;:68;:::i;:::-;:120;;;;:::i;:::-;8860:141;;;;:::i;:::-;8859:190;;;;:::i;:::-;8818:231;;9087:17;9067:37;;8664:794;;;9143:30;9176:76;9225:27;9176:26;:76;:::i;:::-;9143:109;;9333:22;9290:20;:65;:153;;9423:20;9290:153;;;9378:22;9290:153;9270:173;;9125:333;8664:794;-1:-1:-1;;;;;9559:19:16;;9505:26;9559:19;;;:6;:19;;;;;;;;:40;;;;;;;;:31;;;:40;;;;;;;;;;;;;:124;;9621:17;9505:26;9559:40;:124::i;:::-;-1:-1:-1;;;;;9711:19:16;;;;;;:6;:19;;;;;:38;;:60;;9505:192;;-1:-1:-1;;;;;;9711:60:16;;;:38;;:19;:60;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9785:19:16;;;;;;:6;:19;;;;;:31;;:98;;-1:-1:-1;;;;;9785:98:16;;;:19;:98;;;;;:::i;:::-;;;;;;;;9936:28;9992:157;10087:17;10057:27;:47;;;;:::i;:::-;-1:-1:-1;;;;;9992:23:16;;10126:5;9992:23;;;:6;:23;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;:157;:43;:157::i;:::-;-1:-1:-1;;;;;10177:23:16;;;;;;:6;:23;;;;;:41;;:65;;9936:227;;-1:-1:-1;;;;;;10177:65:16;;;:41;;:23;:65;;;;;:::i;:::-;;;;-1:-1:-1;10326:47:16;;-1:-1:-1;10356:17:16;10326:27;:47;:::i;:::-;-1:-1:-1;;;;;10256:23:16;;;;;;:6;:23;;;;;:131;;-1:-1:-1;;;;;10256:131:16;;;;;:23;;;:131;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10401:16:16;;;;;;;:10;:16;;;;;;;;:29;;;;;;;;;;;:36;;:58;;-1:-1:-1;;;;;10401:58:16;;;:16;:58;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10473:16:16;;;;;;;:10;:16;;;;;;;;:33;;;;;;;;;;;:68;;-1:-1:-1;;;;;10473:68:16;;;:16;:68;;;;;:::i;:::-;;;;;;;;7662:2890;;;;;;;;;;;;10594:151;10645:4;10664:10;10718:17;10688:27;:47;;;;:::i;:::-;-1:-1:-1;;;;;10594:29:16;;;:151;;:29;:151::i;:::-;10820:146;10866:4;10885:10;10909:47;10939:17;10909:27;:47;:::i;:::-;-1:-1:-1;;;;;10820:24:16;;;:146;;:24;:146::i;:::-;10982:188;11006:7;11027:10;11051:17;11082:47;11112:17;11082:27;:47;:::i;:::-;10982:188;;;-1:-1:-1;;;;;19857:15:27;;;19839:34;;19909:15;;;;19904:2;19889:18;;19882:43;19941:18;;;19934:34;19999:2;19984:18;;19977:34;20042:3;20027:19;;20020:35;;;19765:3;19750:19;10982:188:16;;;;;;;6618:4559;;;;;6463:4714;;;;:::o;1679:172:17:-;-1:-1:-1;;;;;1803:20:17;;;1773:7;1803:20;;;:13;:20;;;;;;;;:32;;;;;;;;;;;:41;;:39;:41::i;6104:168:16:-;6222:43;6232:5;6239:6;6247:10;6259:5;6222:9;:43::i;632:122:26:-;690:4;713:12;;-1:-1:-1;;;713:12:26;;;;;:34;;-1:-1:-1;;;;;;;729:18:26;;;;;:11;:18;;;;;;;;;632:122::o;22831:181:16:-;22903:26;22962:19;22975:5;22962:12;:19::i;:::-;:43;;-1:-1:-1;;22962:43:16;;;22984:1;22941:64;22831:181;-1:-1:-1;;22831:181:16:o;14652:2679::-;14893:1;14871:23;;;14867:48;;14903:12;;-1:-1:-1;;;14903:12:16;;;;;;;;;;;14867:48;14929:41;;;14925:69;;14979:15;;-1:-1:-1;;;14979:15:16;;;;;;;;;;;14925:69;15004:45;15020:7;15029:10;15041:7;15004:15;:45::i;:::-;15060:22;15085:27;15104:7;15085:18;:27::i;:::-;15060:52;;15122:21;15146:25;15160:10;15146:13;:25::i;:::-;15122:49;-1:-1:-1;15181:28:16;15252:7;15181:28;;;;15362:698;15378:22;;;15362:698;;;15430:11;;15442:1;15430:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;15422:22;;15471:12;;15484:1;15471:15;;;;;;;:::i;:::-;;;;;;;15462:24;;15504:23;15521:5;15504:16;:23::i;:::-;-1:-1:-1;;;;;;;;15560:13:16;;;;;;:6;:13;;;;;;;;;:34;;;;;;;;:25;;;:34;;;;;;;;;;:48;;-1:-1:-1;15595:6:16;15603:4;15560:34;:48::i;:::-;15545:63;-1:-1:-1;15626:54:16;-1:-1:-1;;;;;15626:19:16;;15646:10;15666:4;15673:6;15626:19;:54::i;:::-;-1:-1:-1;;;;;15698:13:16;;;;;;:6;:13;;;;;:32;;:57;;-1:-1:-1;;;;;15698:57:16;;;:13;:57;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;15773:13:16;;;;;;:6;:13;;;;;:25;;:51;;-1:-1:-1;;;;;15773:51:16;;;:13;:51;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;15843:20:16;;;;;;;:10;:20;;;;;;;;:27;;;;;;;;;;;:34;;:59;;-1:-1:-1;;;;;15843:59:16;;;:20;:59;;;;;:::i;:::-;;;;-1:-1:-1;15945:29:16;;-1:-1:-1;15960:5:16;15967:6;15945:14;:29::i;:::-;15921:53;;;;:::i;:::-;;-1:-1:-1;16024:3:16;;15362:698;;;;16180:13;16163:14;:30;:138;;;;-1:-1:-1;122:3:25;16253:41:16;480:3:25;16253:13:16;:41;:::i;:::-;16252:49;;;;:::i;:::-;16213:20;:88;16163:138;16142:198;;;16323:17;;;;;;;;;;;;;;16142:198;-1:-1:-1;16361:19:16;;-1:-1:-1;16423:7:16;;-1:-1:-1;16361:19:16;;-1:-1:-1;122:3:25;16519:30:16;610:3:25;122;16519:30:16;:::i;:::-;16479:71;;:20;:71;:::i;:::-;16478:79;;;;:::i;:::-;16444:113;-1:-1:-1;16585:39:16;16444:113;16585:13;:39;:::i;:::-;16571:53;;16639:11;16654:15;16670:1;16654:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;16654:18:16;;-1:-1:-1;16686:57:16;16654:18;16704:10;16724:4;16731:11;16686:17;:57::i;:::-;-1:-1:-1;;;;;16775:11:16;;16758:14;16775:11;;;:6;:11;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;:97;;16824:11;16758:14;16775:31;:97::i;:::-;-1:-1:-1;;;;;16886:11:16;;;;;;:6;:11;;;;;:29;;:48;;16758:114;;-1:-1:-1;;;;;;16886:48:16;;;:29;;:11;:48;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;16948:11:16;;;;;;:6;:11;;;;;:53;;-1:-1:-1;;;;;16948:53:16;;;:11;:53;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;17015:20:16;;;;;;;:10;:20;;;;;;;;:25;;;;;;;;;;;:46;;17055:6;;17015:20;:46;;17055:6;;17015:46;:::i;:::-;;;;;;;;16390:682;;;;17082:54;17095:7;17104:10;17116;17128:7;17082:12;:54::i;:::-;17152:172;;;17179:10;20414:34:27;;-1:-1:-1;;;;;20484:15:27;;;20479:2;20464:18;;20457:43;20536:15;;20516:18;;;20509:43;20583:2;20568:18;;20561:34;;;20626:3;20611:19;;20604:35;;;20670:3;20655:19;;20648:35;;;17152:172:16;;;;;;;20340:3:27;17152:172:16;;;14857:2474;;;;14652:2679;;;;;;;:::o;1340:298:18:-;-1:-1:-1;;;;;1429:21:18;;1399:13;1429:21;;;:14;:21;;;;;:31;-1:-1:-1;;;1429:31:18;;;;1424:46;;-1:-1:-1;1469:1:18;;1340:298;-1:-1:-1;1340:298:18:o;1424:46::-;-1:-1:-1;;;;;1549:21:18;;;1480:31;1549:21;;;:14;:21;;;;;:34;;1611:20;1549:34;1611:18;:20::i;18613:594:16:-;18745:15;:22;18699:23;;;18777:423;18797:3;18793:1;:7;18777:423;;;18817:13;18833:15;18849:1;18833:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;18938:16:16;;;;;:10;:16;;;;;;18833:18;;;;18938:23;;;;;;;;;:34;18887:6;:13;;;;;:33;;;;;;;;;;;;18833:18;18887:33;;;;;;;;;18833:18;-1:-1:-1;18887:122:16;;18833:18;18887:33;:122::i;:::-;18865:144;-1:-1:-1;19027:16:16;;19023:108;;19082:34;19097:5;19104:11;19082:14;:34::i;:::-;19063:53;;;;:::i;:::-;;;19023:108;-1:-1:-1;;19172:3:16;;18777:423;;2074:198:1;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:1;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:1;;20896:2:27;2154:73:1::1;::::0;::::1;20878:21:27::0;20935:2;20915:18;;;20908:30;20974:34;20954:18;;;20947:62;21045:8;21025:18;;;21018:36;21071:19;;2154:73:1::1;20694:402:27::0;2154:73:1::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1273:208:17:-;-1:-1:-1;;;;;1424:20:17;;;1401:4;1424:20;;;:13;:20;;;;;;;;:32;;;;;;;;;;;:50;;1466:7;1424:41;:50::i;22468:357:16:-;22590:14;22621:7;22617:202;;;-1:-1:-1;;;;;22661:13:16;;22703:5;22661:13;;;:6;:13;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;:48;;22695:6;;22661:33;:48::i;22617:202::-;-1:-1:-1;;;;;22758:13:16;;22801:5;22758:13;;;:6;:13;;;;;;;;:34;;;;;;;;:25;;;:34;;;;;;;;;;;;;:49;;22793:6;;22758:34;:49::i;18231:376::-;18315:28;18353:26;18389:24;18457:33;18485:4;18457:27;:33::i;:::-;18434:56;;18521:26;18542:4;18521:20;:26::i;:::-;18500:47;;18576:24;18595:4;18576:18;:24::i;:::-;18231:376;;;;-1:-1:-1;;18231:376:16:o;25700:2889::-;-1:-1:-1;;;;;25978:13:16;;25802:23;25978:13;;;:6;:13;;;;;;;;25943:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25943:48:16;;;;;;;;;;;;-1:-1:-1;;;25943:48:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25943:48:16;;;;26005:17;;:24;25802:23;;;;;;25943:48;26005:29;;26001:79;;26058:1;26061;26064;26067;26050:19;;;;;;;;;;;26001:79;26177:16;;;;26207:30;;;;26241:15;26207:49;;;;;26203:189;;26282:27;;;;-1:-1:-1;26323:58:16;;-1:-1:-1;26323:58:16;26203:189;26489:18;;;;;:25;;:29;;:52;;;26522:19;26535:5;26522:12;:19::i;:::-;26486:2038;;;26557:55;26596:15;26557:55;;:30;;;:55;26662:12;26626:49;:26;;;:49;26689:16;;;:35;;;26486:2038;;;26755:18;26791:16;:26;;;26776:41;;:12;:41;;;;:::i;:::-;26912:17;;:24;26855:18;;;;:25;26755:62;;-1:-1:-1;26831:20:16;;26855:37;;213:4:25;;26855:37:16;:::i;:::-;26854:82;;;;:::i;:::-;26831:105;-1:-1:-1;26950:16:16;26969:76;:16;26831:105;26969:32;:76::i;:::-;27059:45;;;;:27;;;:45;27158:15;27118:56;;:30;;;:56;27224:12;27188:49;;:26;;;:49;27257:48;;;21273:25:27;;;21334:31;;;21329:2;21314:18;;21307:59;26950:95:16;;-1:-1:-1;27257:48:16;;21246:18:27;27257:48:16;;;;;;;27513:27;979:7:25;213:4;27513:27:16;:::i;:::-;27469:16;:27;;;27396:100;;27425:6;:18;;;:25;;;27396:10;:54;;;;:::i;:::-;:100;;;;:::i;:::-;27395:146;;;;:::i;:::-;27361:180;;27637:15;-1:-1:-1;;;;;27600:53:16;:6;:18;;;:25;;:53;;;;;;;:::i;:::-;;;-1:-1:-1;27667:17:16;;:52;;-1:-1:-1;;;;;27667:52:16;;;:17;:52;;;;;:::i;:::-;;;-1:-1:-1;27733:16:16;;;:35;;;27786:34;;;;:38;;;27782:549;;122:3:25;27897:16:16;:34;;;27879:52;;:15;:52;;;;:::i;:::-;27878:80;;;;:::i;:::-;28073:17;;:24;27844:114;;-1:-1:-1;28073:38:16;;27844:114;;28073:38;:::i;:::-;28024:17;;:24;;;28010:38;;:11;:38;:::i;:::-;28009:103;;;;:::i;:::-;27976:136;;28166:10;-1:-1:-1;;;;;28130:47:16;:6;:17;;;:24;;:47;;;;;;;:::i;:::-;;;-1:-1:-1;28278:4:16;28259:25;;;;:10;:25;;;;;;;;-1:-1:-1;;;;;28259:32:16;;;;;;;;;:57;;28306:10;;28259:25;:57;;28306:10;;28259:57;:::i;:::-;;;;-1:-1:-1;;27782:549:16;28382:27;;;;;28349:164;;;21636:18:27;21624:31;;;21606:50;;21687:2;21672:18;;21665:34;;;21715:18;;21708:34;;;21758:18;;;21751:34;;;28349:164:16;;21593:3:27;21578:19;28349:164:16;;;;;;;26741:1783;;;26486:2038;-1:-1:-1;;;;;;28560:13:16;;;;;;;;:6;:13;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28560:22:16;;;;;;;;;;;-1:-1:-1;;;;;28560:22:16;;;-1:-1:-1;;;28560:22:16;;;;;;;;;;;;;-1:-1:-1;;;28560:22:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25700:2889;;;;;:::o;125:430:24:-;283:12;;254:14;;283:17;;280:269;;-1:-1:-1;325:6:24;280:269;;;397:12;;381;;;;372:21;;:6;:21;:::i;:::-;371:38;;;;:::i;:::-;362:47;;427:7;:58;;;;-1:-1:-1;464:12:24;;;;448;;479:6;;464:12;439:21;;:6;:21;:::i;:::-;438:38;;;;:::i;:::-;:47;427:58;423:116;;;514:10;:6;523:1;514:10;:::i;1359:130:1:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;735:10:9;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;21998:2:27;1414:68:1;;;21980:21:27;;;22017:18;;;22010:30;22076:34;22056:18;;;22049:62;22128:18;;1414:68:1;21796:356:27;28595:1339:16;28808:8;28804:186;;;28832:46;28850:5;28857:9;28868;28832:17;:46::i;:::-;28804:186;;;28962:17;28973:5;28962:10;:17::i;:::-;29016:23;29003:9;:36;;;;;;;;:::i;:::-;;28999:929;;122:3:25;29059:6:16;:19;;;:25;;;29055:94;;;29129:19;;29109:40;;;;;22521:18:27;22509:31;;;29109:40:16;;;22491:50:27;22464:18;;29109:40:16;22346:201:27;29055:94:16;926:5:25;29167:6:16;:24;;;:43;;;29163:112;;;29250:24;;;;29235:40;;-1:-1:-1;;;29235:40:16;;22521:18:27;22509:31;;;29235:40:16;;;22491:50:27;22464:18;;29235:40:16;22346:201:27;29163:112:16;926:5:25;29292:6:16;:19;;;:38;;;29289:101;;;29370:19;;;;;29355:35;;-1:-1:-1;;;29355:35:16;;22521:18:27;22509:31;;;29355:35:16;;;22491:50:27;22464:18;;29355:35:16;22346:201:27;29289:101:16;-1:-1:-1;;;;;29443:13:16;;29404:36;29443:13;;;:6;:13;;;;;;;;;29506:19;;29480:45;;;;29443:23;;;29480:45;;;29570:24;;;;29539:28;;;:55;;29634:19;;;;29608:45;;;;;;-1:-1:-1;;29608:45:16;;;29539:55;;;29608:45;;;;;;;29689:15;;;;29667:19;;;:37;;29738:13;;;;29785;;;;29765:33;;-1:-1:-1;;;29765:33:16;;29718;;;-1:-1:-1;;;29718:33:16;;29667:37;;;;;;;29718:33;;;;;;;;;;;;;29765;;;;;;;;;;;29844:25;;;;29812:29;;;;:57;;;;29889:28;;;;;;29450:5;;29506:6;;22750:4:27;22792:3;22781:9;22777:19;22769:27;;-1:-1:-1;;;;;22827:6:27;22823:55;22812:9;22805:74;22898:18;22971:2;22962:6;22956:13;22952:22;22947:2;22936:9;22932:18;22925:50;23039:2;23033;23025:6;23021:15;23015:22;23011:31;23006:2;22995:9;22991:18;22984:59;23107:2;23101;23093:6;23089:15;23083:22;23079:31;23074:2;23063:9;23059:18;23052:59;23176:2;23170;23162:6;23158:15;23152:22;23148:31;23142:3;23131:9;23127:19;23120:60;23246:2;23239:3;23231:6;23227:16;23221:23;23217:32;23211:3;23200:9;23196:19;23189:61;23316:2;23309:3;23301:6;23297:16;23291:23;23287:32;23281:3;23270:9;23266:19;23259:61;;23375:3;23367:6;23363:16;23357:23;23351:3;23340:9;23336:19;23329:52;22552:835;;;;;;29889:28:16;;;;;;;;29041:887;28595:1339;;;;;:::o;561:430:24:-;690:14;719:5;:12;;;735:1;719:17;716:269;;-1:-1:-1;761:6:24;716:269;;;833:12;;;;817;;808:21;;:6;:21;:::i;:::-;807:38;;;;:::i;:::-;798:47;;863:7;:58;;;;-1:-1:-1;900:12:24;;884;;;;915:6;;900:12;875:21;;:6;:21;:::i;378:406:22:-;520:12;563:4;-1:-1:-1;;;;;546:22:22;;;542:189;;594:37;;;;;-1:-1:-1;;;;;23584:55:27;;;594:37:22;;;23566:74:27;23656:18;;;23649:34;;;594:23:22;;;;;23539:18:27;;594:37:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;584:47;;542:189;;;672:48;;;;;-1:-1:-1;;;;;13427:15:27;;;672:48:22;;;13409:34:27;13479:15;;;13459:18;;;13452:43;13511:18;;;13504:34;;;672:27:22;;;;;13321:18:27;;672:48:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;662:58;;542:189;745:7;740:37;;761:16;;;;;;;;;;;;;;221:151;296:14;348:5;-1:-1:-1;;;;;333:30:22;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;24390:1304:16:-;24543:23;24560:5;24543:16;:23::i;:::-;-1:-1:-1;;24619:10:16;24577:28;24608:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;24608:29:16;;;;;;;;;:40;;-1:-1:-1;24577:28:16;-1:-1:-1;24682:405:16;;;;-1:-1:-1;;;;;;24744:13:16;;24786:5;24744:13;;;:6;:13;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;24715:6;;24744:48;;:33;24715:6;;24744:33;:48::i;:::-;24735:57;;24819:24;24810:6;:33;24806:84;;;24868:22;;-1:-1:-1;;;24868:22:16;;;;;2055:25:27;;;2028:18;;24868:22:16;1909:177:27;24806:84:16;24682:405;;;-1:-1:-1;;;;;24930:13:16;;24972:5;24930:13;;;:6;:13;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;:48;;24964:6;;24930:33;:48::i;:::-;24921:57;;25005:24;24996:6;:33;24992:84;;;25054:22;;-1:-1:-1;;;25054:22:16;;;;;2055:25:27;;;2028:18;;25054:22:16;1909:177:27;24992:84:16;25136:6;25113:20;:29;:92;;;-1:-1:-1;25158:38:16;;-1:-1:-1;;;25158:38:16;;25190:4;25158:38;;;10684:74:27;25199:6:16;;-1:-1:-1;;;;;25158:23:16;;;;;10657:18:27;;25158:38:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;25113:92;25096:148;;;25223:21;;-1:-1:-1;;;25223:21:16;;;;;;;;;;;25096:148;-1:-1:-1;;;;;25278:13:16;;;;;;:6;:13;;;;;;;;:31;;;:50;;-1:-1:-1;;;;;25278:50:16;;;;;;;;;25342;;;;;;;;;25417:10;25406:22;;;:10;:22;;;;;:29;;;;;;;;;:50;;;;;;;25477:54;;25278:13;25505:4;;25385:6;25477:19;:54::i;:::-;284:4:25;25545:24:16;25558:10;25545:12;:24::i;:::-;:44;25541:88;;;25610:19;;-1:-1:-1;;;25610:19:16;;;;;;;;;;;25541:88;25644:43;;;25653:10;14153:34:27;;-1:-1:-1;;;;;14223:15:27;;14218:2;14203:18;;14196:43;14255:18;;;14248:34;;;14313:2;14298:18;;14291:34;;;25644:43:16;;14079:3:27;14064:19;25644:43:16;13861:470:27;12671:297:15;12731:16;12759:22;12784:19;12792:3;12784:7;:19::i;515:111:26:-;581:19;594:5;581:12;:19::i;:::-;577:42;;;609:10;;;;;;;;;;;;;;23930:454:16;-1:-1:-1;;;;;24153:13:16;;24044:24;24153:13;;;:6;:13;;;;;:23;;;:36;24107:31;;24044:24;;122:3:25;;24107:82:16;;24153:36;24107:82;:::i;:::-;24106:90;;;;:::i;:::-;-1:-1:-1;;;;;24240:13:16;;;;;;:6;:13;;;;;:31;24080:116;;-1:-1:-1;24240:36:16;;;;:137;;-1:-1:-1;24347:30:16;24365:12;24347:15;:30;:::i;:::-;24292:38;;-1:-1:-1;;;24292:38:16;;24324:4;24292:38;;;10684:74:27;-1:-1:-1;;;;;24292:23:16;;;;;10657:18:27;;24292:38:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;24240:137;24206:171;23930:454;-1:-1:-1;;;;23930:454:16:o;2426:187:1:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;1644:132:18:-;-1:-1:-1;;;;;1710:21:18;;;;;;:14;:21;;;;;:31;-1:-1:-1;;;1710:31:18;;;;1705:64;;1750:19;;;;;;;;;;;;;;880:387:17;1035:43;1051:5;1058:10;1070:7;1035:15;:43::i;:::-;1030:69;;1087:12;;-1:-1:-1;;;1087:12:17;;;;;;;;;;;1030:69;-1:-1:-1;;;;;1109:20:17;;;;;;;:13;:20;;;;;;;;:32;;;;;;;;;:48;;1149:7;1109:39;:48::i;:::-;-1:-1:-1;1167:93:17;;;;;1225:4;1167:93;;;13409:34:27;-1:-1:-1;;;;;13479:15:27;;;13459:18;;;13452:43;13511:18;;;13504:34;;;1167:36:17;;;;;13321:18:27;;1167:93:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;880:387;;;;:::o;11542:112:15:-;11602:7;11628:19;11636:3;4556:18;;4474:107;329:550:21;417:13;456:14;484:13;525:17;556:20;589:9;-1:-1:-1;;;;;589:25:21;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;442:174;;;;;;;;;654:1;644:6;:11;;:41;;;-1:-1:-1;671:14:21;;644:41;:80;;;;717:7;701:23;;:13;:23;;;644:80;:134;;;-1:-1:-1;259:7:21;740:27;758:9;740:15;:27;:::i;:::-;:38;644:134;627:183;;;796:14;;;;;;;;;;;;;;627:183;847:25;320:2;;847:25;:::i;:::-;829:43;;837:6;829:43;:::i;11317:144:15:-;11394:4;4360:21;;;:14;;;:21;;;;;;:26;;11417:37;4264:129;177:904:23;368:36;;;;441:26;;;;503:24;;;;563;;;;312:15;;368:36;433:35;;;;;495:33;;;555;603;;;599:476;;652:12;692:18;668:20;682:6;668:11;:20;:::i;:::-;667:43;;;;:::i;:::-;652:58;-1:-1:-1;734:15:23;652:58;734:8;:15;:::i;:::-;724:25;;638:122;599:476;;;780:13;796:32;810:18;796:11;:32;:::i;:::-;780:48;-1:-1:-1;842:29:23;919:35;936:18;166:4;919:35;:::i;:::-;892:22;166:4;892:5;:22;:::i;:::-;891:64;;;;:::i;:::-;842:113;-1:-1:-1;166:4:23;1000:30;1024:6;842:113;1000:30;:::i;:::-;999:65;;;;:::i;:::-;979:17;990:6;979:8;:17;:::i;:::-;:85;;;;:::i;:::-;969:95;;766:309;;599:476;329:752;;;;177:904;;;;:::o;687:647:18:-;-1:-1:-1;;;;;830:21:18;;;;;;:14;:21;;;;;:31;-1:-1:-1;;;830:31:18;;;;826:62;;;870:18;;;;;;;;;;;;;;826:62;920:1;907:9;902:15;;;;;;;;:::i;:::-;:19;898:59;;;947:9;930:27;;;;;;;;;;;:::i;898:59::-;-1:-1:-1;;;;;968:21:18;;;;;;;:14;:21;;;;;:46;;;;;-1:-1:-1;;;;;;968:46:18;;;;;;1058:9;;1024:43;;;-1:-1:-1;;;1058:9:18;968:46;1024:43;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1077:21:18;;;;;;:14;:21;;;;;:38;;;;-1:-1:-1;;;1077:38:18;;;1111:4;1130:9;:37;;;;;;;;:::i;:::-;;1126:151;;1183:13;:25;;;;;;;-1:-1:-1;1183:25:18;;;;;;;;-1:-1:-1;;;;;;1183:25:18;-1:-1:-1;;;;;1183:25:18;;;;;1126:151;;;1239:15;:27;;;;;;;-1:-1:-1;1239:27:18;;;;;;;;-1:-1:-1;;;;;;1239:27:18;-1:-1:-1;;;;;1239:27:18;;;;;1126:151;1292:35;1310:5;1317:9;1292:35;;;;;;;:::i;381:128:26:-;445:12;;-1:-1:-1;;;445:12:26;;;;444:13;:36;;;;-1:-1:-1;;;;;;462:18:26;;;;;;:11;:18;;;;;;;;461:19;444:36;440:62;;;489:13;;;;;;;;;;;;;;5581:109:15;5637:16;5672:3;:11;;5665:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:109;;;:::o;11101:135::-;11171:4;11194:35;11202:3;11222:5;2881:4;3010:21;;;:14;;;:21;;;;;;3046:13;;3042:1135;;3413:18;3434:12;3445:1;3434:8;:12;:::i;:::-;3480:18;;3413:33;;-1:-1:-1;3460:17:15;;3480:22;;3501:1;;3480:22;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;3844:25;;;:14;;;:25;;;;;:36;;;3517:378;3973:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:196:27:-;82:20;;-1:-1:-1;;;;;131:54:27;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:328::-;292:6;300;308;361:2;349:9;340:7;336:23;332:32;329:52;;;377:1;374;367:12;329:52;400:29;419:9;400:29;:::i;:::-;390:39;;448:38;482:2;471:9;467:18;448:38;:::i;:::-;438:48;;533:2;522:9;518:18;505:32;495:42;;215:328;;;;;:::o;548:186::-;607:6;660:2;648:9;639:7;635:23;631:32;628:52;;;676:1;673;666:12;628:52;699:29;718:9;699:29;:::i;1265:118::-;1351:5;1344:13;1337:21;1330:5;1327:32;1317:60;;1373:1;1370;1363:12;1388:128;1453:20;;1482:28;1453:20;1482:28;:::i;1521:383::-;1595:6;1603;1611;1664:2;1652:9;1643:7;1639:23;1635:32;1632:52;;;1680:1;1677;1670:12;1632:52;1703:29;1722:9;1703:29;:::i;:::-;1693:39;;1779:2;1768:9;1764:18;1751:32;1741:42;;1833:2;1822:9;1818:18;1805:32;1846:28;1868:5;1846:28;:::i;:::-;1893:5;1883:15;;;1521:383;;;;;:::o;2091:347::-;2142:8;2152:6;2206:3;2199:4;2191:6;2187:17;2183:27;2173:55;;2224:1;2221;2214:12;2173:55;-1:-1:-1;2247:20:27;;2290:18;2279:30;;2276:50;;;2322:1;2319;2312:12;2276:50;2359:4;2351:6;2347:17;2335:29;;2411:3;2404:4;2395:6;2387;2383:19;2379:30;2376:39;2373:59;;;2428:1;2425;2418:12;2373:59;2091:347;;;;;:::o;2443:626::-;2540:6;2548;2556;2564;2572;2625:3;2613:9;2604:7;2600:23;2596:33;2593:53;;;2642:1;2639;2632:12;2593:53;2665:29;2684:9;2665:29;:::i;:::-;2655:39;;2713:38;2747:2;2736:9;2732:18;2713:38;:::i;:::-;2703:48;;2798:2;2787:9;2783:18;2770:32;2760:42;;2853:2;2842:9;2838:18;2825:32;2880:18;2872:6;2869:30;2866:50;;;2912:1;2909;2902:12;2866:50;2951:58;3001:7;2992:6;2981:9;2977:22;2951:58;:::i;:::-;2443:626;;;;-1:-1:-1;2443:626:27;;-1:-1:-1;3028:8:27;;2925:84;2443:626;-1:-1:-1;;;2443:626:27:o;3327:184::-;-1:-1:-1;;;3376:1:27;3369:88;3476:4;3473:1;3466:15;3500:4;3497:1;3490:15;3516:171;3583:20;;3643:18;3632:30;;3622:41;;3612:69;;3677:1;3674;3667:12;3692:1497;3837:6;3845;3853;3861;3869;3913:9;3904:7;3900:23;3943:3;3939:2;3935:12;3932:32;;;3960:1;3957;3950:12;3932:32;3983:29;4002:9;3983:29;:::i;:::-;3973:39;;4031:38;4065:2;4054:9;4050:18;4031:38;:::i;:::-;4021:48;;4119:2;4108:9;4104:18;4091:32;4152:1;4145:5;4142:12;4132:40;;4168:1;4165;4158:12;4132:40;4191:5;-1:-1:-1;4230:4:27;-1:-1:-1;;4212:16:27;;4208:27;4205:47;;;4248:1;4245;4238:12;4205:47;;4281:2;4275:9;4323:4;4315:6;4311:17;4394:6;4382:10;4379:22;4358:18;4346:10;4343:34;4340:62;4337:242;;;-1:-1:-1;;;4432:1:27;4425:88;4536:4;4533:1;4526:15;4564:4;4561:1;4554:15;4337:242;4595:2;4588:22;4634:37;4667:2;4652:18;;4634:37;:::i;:::-;4626:6;4619:53;4705:38;4738:3;4727:9;4723:19;4705:38;:::i;:::-;4700:2;4692:6;4688:15;4681:63;4777:38;4810:3;4799:9;4795:19;4777:38;:::i;:::-;4772:2;4764:6;4760:15;4753:63;4849:38;4882:3;4871:9;4867:19;4849:38;:::i;:::-;4844:2;4836:6;4832:15;4825:63;4922:39;4955:4;4944:9;4940:20;4922:39;:::i;:::-;4916:3;4908:6;4904:16;4897:65;4996:38;5029:3;5018:9;5014:19;4996:38;:::i;:::-;4990:3;4978:16;;4971:64;5097:3;5082:19;;5069:33;5063:3;5051:16;;5044:59;4982:6;-1:-1:-1;5147:36:27;5178:3;5163:19;;5147:36;:::i;:::-;5137:46;;3692:1497;;;;;;;;:::o;5194:315::-;5259:6;5267;5320:2;5308:9;5299:7;5295:23;5291:32;5288:52;;;5336:1;5333;5326:12;5288:52;5359:29;5378:9;5359:29;:::i;:::-;5349:39;;5438:2;5427:9;5423:18;5410:32;5451:28;5473:5;5451:28;:::i;:::-;5498:5;5488:15;;;5194:315;;;;;:::o;5514:254::-;5582:6;5590;5643:2;5631:9;5622:7;5618:23;5614:32;5611:52;;;5659:1;5656;5649:12;5611:52;5682:29;5701:9;5682:29;:::i;:::-;5672:39;5758:2;5743:18;;;;5730:32;;-1:-1:-1;;;5514:254:27:o;5773:322::-;5850:6;5858;5866;5919:2;5907:9;5898:7;5894:23;5890:32;5887:52;;;5935:1;5932;5925:12;5887:52;5958:29;5977:9;5958:29;:::i;:::-;5948:39;6034:2;6019:18;;6006:32;;-1:-1:-1;6085:2:27;6070:18;;;6057:32;;5773:322;-1:-1:-1;;;5773:322:27:o;6251:1607::-;6478:13;;6171:12;;6159:25;;6233:4;6222:16;;;6216:23;6200:14;;;6193:47;6441:3;6426:19;;6550:4;6538:17;;;6532:24;6171:12;;6618:4;6603:20;;6159:25;6222:16;;;6216:23;6200:14;;;6193:47;-1:-1:-1;6673:4:27;6661:17;;6655:24;6717:21;;6710:4;6695:20;;6688:51;6796:4;6776:25;;6770:32;815:18;804:30;;6860:3;6845:19;;792:43;-1:-1:-1;6922:4:27;6902:25;;6896:32;815:18;804:30;;6986:3;6971:19;;792:43;-1:-1:-1;7048:4:27;7028:25;;7022:32;815:18;804:30;;7112:3;7097:19;;792:43;7063:54;7174:4;7158:14;7154:25;7148:32;7199:3;7211:53;7260:2;7249:9;7245:18;7229:14;815:18;804:30;792:43;;739:102;7211:53;7321:3;7305:14;7301:24;7295:31;7273:53;;7345:3;7357:53;7406:2;7395:9;7391:18;7375:14;815:18;804:30;792:43;;739:102;7357:53;7467:3;7447:24;;7441:31;815:18;804:30;;;7530:3;7515:19;;792:43;7592:3;7572:24;;7566:31;804:30;;7655:3;7640:19;;792:43;7697:23;;;7691:30;804;;;7779:3;7764:19;;792:43;7827:23;;;7821:30;7815:3;7800:19;;;7793:59;;;;6251:1607;;-1:-1:-1;;6251:1607:27:o;7863:260::-;7931:6;7939;7992:2;7980:9;7971:7;7967:23;7963:32;7960:52;;;8008:1;8005;7998:12;7960:52;8031:29;8050:9;8031:29;:::i;:::-;8021:39;;8079:38;8113:2;8102:9;8098:18;8079:38;:::i;:::-;8069:48;;7863:260;;;;;:::o;8128:435::-;8181:3;8219:5;8213:12;8246:6;8241:3;8234:19;8272:4;8301:2;8296:3;8292:12;8285:19;;8338:2;8331:5;8327:14;8359:1;8369:169;8383:6;8380:1;8377:13;8369:169;;;8444:13;;8432:26;;8478:12;;;;8513:15;;;;8405:1;8398:9;8369:169;;;-1:-1:-1;8554:3:27;;8128:435;-1:-1:-1;;;;;8128:435:27:o;8568:261::-;8747:2;8736:9;8729:21;8710:4;8767:56;8819:2;8808:9;8804:18;8796:6;8767:56;:::i;9026:367::-;9089:8;9099:6;9153:3;9146:4;9138:6;9134:17;9130:27;9120:55;;9171:1;9168;9161:12;9120:55;-1:-1:-1;9194:20:27;;9237:18;9226:30;;9223:50;;;9269:1;9266;9259:12;9223:50;9306:4;9298:6;9294:17;9282:29;;9366:3;9359:4;9349:6;9346:1;9342:14;9334:6;9330:27;9326:38;9323:47;9320:67;;;9383:1;9380;9373:12;9398:1135;9549:6;9557;9565;9573;9581;9589;9597;9650:3;9638:9;9629:7;9625:23;9621:33;9618:53;;;9667:1;9664;9657:12;9618:53;9690:29;9709:9;9690:29;:::i;:::-;9680:39;;9770:2;9759:9;9755:18;9742:32;9793:18;9834:2;9826:6;9823:14;9820:34;;;9850:1;9847;9840:12;9820:34;9889:70;9951:7;9942:6;9931:9;9927:22;9889:70;:::i;:::-;9978:8;;-1:-1:-1;9863:96:27;-1:-1:-1;10066:2:27;10051:18;;10038:32;;-1:-1:-1;10082:16:27;;;10079:36;;;10111:1;10108;10101:12;10079:36;10150:72;10214:7;10203:8;10192:9;10188:24;10150:72;:::i;:::-;10241:8;;-1:-1:-1;10124:98:27;-1:-1:-1;10329:2:27;10314:18;;10301:32;;-1:-1:-1;10345:16:27;;;10342:36;;;10374:1;10371;10364:12;10342:36;;10413:60;10465:7;10454:8;10443:9;10439:24;10413:60;:::i;:::-;9398:1135;;;;-1:-1:-1;9398:1135:27;;-1:-1:-1;9398:1135:27;;;;10387:86;;-1:-1:-1;;;9398:1135:27:o;11022:403::-;11108:6;11116;11124;11132;11185:3;11173:9;11164:7;11160:23;11156:33;11153:53;;;11202:1;11199;11192:12;11153:53;11225:29;11244:9;11225:29;:::i;:::-;11215:39;;11273:38;11307:2;11296:9;11292:18;11273:38;:::i;:::-;11263:48;;11330:38;11364:2;11353:9;11349:18;11330:38;:::i;:::-;11022:403;;;;-1:-1:-1;11320:48:27;;11415:2;11400:18;11387:32;;-1:-1:-1;;11022:403:27:o;11430:991::-;11579:6;11587;11595;11603;11611;11619;11627;11680:3;11668:9;11659:7;11655:23;11651:33;11648:53;;;11697:1;11694;11687:12;11648:53;11720:29;11739:9;11720:29;:::i;:::-;11710:39;;11768:38;11802:2;11791:9;11787:18;11768:38;:::i;:::-;11758:48;;11853:2;11842:9;11838:18;11825:32;11815:42;;11908:2;11897:9;11893:18;11880:32;11931:18;11972:2;11964:6;11961:14;11958:34;;;11988:1;11985;11978:12;11958:34;12027:70;12089:7;12080:6;12069:9;12065:22;12027:70;:::i;:::-;12116:8;;-1:-1:-1;12001:96:27;-1:-1:-1;12204:3:27;12189:19;;12176:33;;-1:-1:-1;12221:16:27;;;12218:36;;;12250:1;12247;12240:12;12218:36;;12289:72;12353:7;12342:8;12331:9;12327:24;12289:72;:::i;14336:184::-;-1:-1:-1;;;14385:1:27;14378:88;14485:4;14482:1;14475:15;14509:4;14506:1;14499:15;14525:151;14615:4;14608:12;;;14594;;;14590:31;;14633:14;;14630:40;;;14650:18;;:::i;14681:422::-;14770:1;14813:5;14770:1;14827:270;14848:7;14838:8;14835:21;14827:270;;;14907:4;14903:1;14899:6;14895:17;14889:4;14886:27;14883:53;;;14916:18;;:::i;:::-;14966:7;14956:8;14952:22;14949:55;;;14986:16;;;;14949:55;15065:22;;;;15025:15;;;;14827:270;;;14831:3;14681:422;;;;;:::o;15108:806::-;15157:5;15187:8;15177:80;;-1:-1:-1;15228:1:27;15242:5;;15177:80;15276:4;15266:76;;-1:-1:-1;15313:1:27;15327:5;;15266:76;15358:4;15376:1;15371:59;;;;15444:1;15439:130;;;;15351:218;;15371:59;15401:1;15392:10;;15415:5;;;15439:130;15476:3;15466:8;15463:17;15460:43;;;15483:18;;:::i;:::-;-1:-1:-1;;15539:1:27;15525:16;;15554:5;;15351:218;;15653:2;15643:8;15640:16;15634:3;15628:4;15625:13;15621:36;15615:2;15605:8;15602:16;15597:2;15591:4;15588:12;15584:35;15581:77;15578:159;;;-1:-1:-1;15690:19:27;;;15722:5;;15578:159;15769:34;15794:8;15788:4;15769:34;:::i;:::-;15839:6;15835:1;15831:6;15827:19;15818:7;15815:32;15812:58;;;15850:18;;:::i;:::-;15888:20;;15108:806;-1:-1:-1;;;15108:806:27:o;15919:140::-;15977:5;16006:47;16047:4;16037:8;16033:19;16027:4;16006:47;:::i;16064:168::-;16137:9;;;16168;;16185:15;;;16179:22;;16165:37;16155:71;;16206:18;;:::i;16237:274::-;16277:1;16303;16293:189;;-1:-1:-1;;;16335:1:27;16328:88;16439:4;16436:1;16429:15;16467:4;16464:1;16457:15;16293:189;-1:-1:-1;16496:9:27;;16237:274::o;16516:184::-;-1:-1:-1;;;16565:1:27;16558:88;16665:4;16662:1;16655:15;16689:4;16686:1;16679:15;16705:125;16770:9;;;16791:10;;;16788:36;;;16804:18;;:::i;17319:266::-;17407:6;17402:3;17395:19;17459:6;17452:5;17445:4;17440:3;17436:14;17423:43;-1:-1:-1;17511:1:27;17486:16;;;17504:4;17482:27;;;17475:38;;;;17567:2;17546:15;;;-1:-1:-1;;17542:29:27;17533:39;;;17529:50;;17319:266::o;17590:1541::-;-1:-1:-1;;;;;18132:15:27;;;18114:34;;18040:3;18167:2;18185:18;;;18178:31;;;18025:19;;;18244:22;;;17992:4;;18324:6;;18297:3;18282:19;;17992:4;18358:191;18372:6;18369:1;18366:13;18358:191;;;18465:2;18437:26;18456:6;18437:26;:::i;:::-;18433:35;18421:48;;18524:15;;;;18489:12;;;;18394:1;18387:9;18358:191;;;18362:3;18594:9;18589:3;18585:19;18580:2;18569:9;18565:18;18558:47;18626:6;18621:3;18614:19;18656:66;18648:6;18645:78;18642:98;;;18736:1;18733;18726:12;18642:98;18770:6;18767:1;18763:14;18749:28;;18821:6;18813;18808:2;18803:3;18799:12;18786:42;18847:16;;;18903:18;;;18899:27;;18894:2;18879:18;;18872:55;18847:16;18950:49;18987:11;;;18979:6;18950:49;:::i;:::-;18936:63;;;;19048:9;19040:6;19036:22;19030:3;19019:9;19015:19;19008:51;19076:49;19118:6;19110;19102;19076:49;:::i;:::-;19068:57;17590:1541;-1:-1:-1;;;;;;;;;;;17590:1541:27:o;19136:245::-;19203:6;19256:2;19244:9;19235:7;19231:23;19227:32;19224:52;;;19272:1;19269;19262:12;19224:52;19304:9;19298:16;19323:28;19345:5;19323:28;:::i;19386:128::-;19453:9;;;19474:11;;;19471:37;;;19488:18;;:::i;22157:184::-;-1:-1:-1;;;22206:1:27;22199:88;22306:4;22303:1;22296:15;22330:4;22327:1;22320:15;23694:273;23762:6;23815:2;23803:9;23794:7;23790:23;23786:32;23783:52;;;23831:1;23828;23821:12;23783:52;23863:9;23857:16;23913:4;23906:5;23902:16;23895:5;23892:27;23882:55;;23933:1;23930;23923:12;23972:184;24042:6;24095:2;24083:9;24074:7;24070:23;24066:32;24063:52;;;24111:1;24108;24101:12;24063:52;-1:-1:-1;24134:16:27;;23972:184;-1:-1:-1;23972:184:27:o;24161:179::-;24239:13;;24292:22;24281:34;;24271:45;;24261:73;;24330:1;24327;24320:12;24345:473;24448:6;24456;24464;24472;24480;24533:3;24521:9;24512:7;24508:23;24504:33;24501:53;;;24550:1;24547;24540:12;24501:53;24573:39;24602:9;24573:39;:::i;:::-;24563:49;;24652:2;24641:9;24637:18;24631:25;24621:35;;24696:2;24685:9;24681:18;24675:25;24665:35;;24740:2;24729:9;24725:18;24719:25;24709:35;;24763:49;24807:3;24796:9;24792:19;24763:49;:::i;24823:131::-;24883:5;24912:36;24939:8;24933:4;24912:36;:::i;24959:294::-;25040:1;25033:5;25030:12;25020:200;;-1:-1:-1;;;25073:1:27;25066:88;25177:4;25174:1;25167:15;25205:4;25202:1;25195:15;25020:200;25229:18;;24959:294::o;25258:208::-;25404:2;25389:18;;25416:44;25393:9;25442:6;25416:44;:::i;25471:328::-;-1:-1:-1;;;;;25675:55:27;;25657:74;;25645:2;25630:18;;25740:53;25789:2;25774:18;;25766:6;25740:53;:::i;25804:184::-;-1:-1:-1;;;25853:1:27;25846:88;25953:4;25950:1;25943:15;25977:4;25974:1;25967:15"},"gasEstimates":{"creation":{"codeDepositCost":"3792400","executionCost":"infinite","totalCost":"infinite"},"external":{"BLOCKS_PER_YEAR()":"306","BPS()":"263","PRECISION()":"262","accureInterest(address)":"infinite","amountToShares(address,uint256,bool)":"infinite","borrow(address,uint256)":"infinite","canLiquidateNFT(address,address,uint256)":"infinite","depositNft(address,address,uint256)":"infinite","executeNFTLiquidation(address,address,uint256,address[],uint256[])":"infinite","flashloan(address,address[],uint256[],bytes)":"infinite","flashloanFee(address,uint256)":"infinite","getAmountInUSD(address,uint256)":"infinite","getDepositedNFT(address,address)":"infinite","getDepositedNFTCount(address,address)":"infinite","getNFTLiquidationWarning(address,address,uint256)":"infinite","getTokenPrice(address)":"infinite","getTokenVault(address)":"18918","getUserData(address)":"infinite","getUserNFTCollateral(address)":"infinite","getUserTokenCollateralAndBorrow(address,address)":"infinite","getUserTotalBorrow(address)":"infinite","getUserTotalTokenCollateral(address)":"infinite","globalPaused()":"2417","hasDepositedNFT(address,address,uint256)":"infinite","healthFactor(address)":"infinite","liquidate(address,address,address,uint256)":"infinite","maxFlashloan(address)":"infinite","onERC721Received(address,address,uint256,bytes)":"infinite","owner()":"2391","pausedStatus(address)":"infinite","redeem(address,uint256,uint256)":"infinite","renounceOwnership()":"infinite","repay(address,uint256)":"infinite","setPausedStatus(address,bool)":"28338","setupVault(address,address,uint8,(uint64,uint64,uint64,uint64,uint64,uint64,uint256),bool)":"infinite","sharesToAmount(address,uint256,bool)":"infinite","stopNFTLiquidation(address,address,uint256)":"infinite","supply(address,uint256,uint256)":"infinite","transferOwnership(address)":"28426","triggerNFTiquidation(address,address,uint256)":"infinite","withdraw(address,uint256,uint256)":"infinite"},"internal":{"_accuredInterest(address)":"infinite","_setupVault(address,address,enum Structs.TokenType,struct Structs.VaultSetupParamemters memory,bool)":"infinite","_withdraw(address,uint256,uint256,bool)":"infinite","vaultAboveReserveRatio(address,uint256)":"infinite"}},"methodIdentifiers":{"BLOCKS_PER_YEAR()":"d37db1d2","BPS()":"249d39e9","PRECISION()":"aaf5eb68","accureInterest(address)":"0d8459fe","amountToShares(address,uint256,bool)":"0f342ee9","borrow(address,uint256)":"4b8a3529","canLiquidateNFT(address,address,uint256)":"4cd5491c","depositNft(address,address,uint256)":"82a5b1aa","executeNFTLiquidation(address,address,uint256,address[],uint256[])":"c223a9be","flashloan(address,address[],uint256[],bytes)":"78767d70","flashloanFee(address,uint256)":"93f2d72e","getAmountInUSD(address,uint256)":"25d07a95","getDepositedNFT(address,address)":"351b14a0","getDepositedNFTCount(address,address)":"b4240c99","getNFTLiquidationWarning(address,address,uint256)":"ff9b8bb8","getTokenPrice(address)":"d02641a0","getTokenVault(address)":"30941e62","getUserData(address)":"ffc9896b","getUserNFTCollateral(address)":"2c895aff","getUserTokenCollateralAndBorrow(address,address)":"a2d20cf2","getUserTotalBorrow(address)":"89a1e803","getUserTotalTokenCollateral(address)":"dbe7cc17","globalPaused()":"61a552dc","hasDepositedNFT(address,address,uint256)":"f6aa13f2","healthFactor(address)":"6ad9f9df","liquidate(address,address,address,uint256)":"aab3f868","maxFlashloan(address)":"bf370299","onERC721Received(address,address,uint256,bytes)":"150b7a02","owner()":"8da5cb5b","pausedStatus(address)":"b6812c99","redeem(address,uint256,uint256)":"2b83cccd","renounceOwnership()":"715018a6","repay(address,uint256)":"22867d78","setPausedStatus(address,bool)":"1d81944f","setupVault(address,address,uint8,(uint64,uint64,uint64,uint64,uint64,uint64,uint256),bool)":"1880b981","sharesToAmount(address,uint256,bool)":"fdda8295","stopNFTLiquidation(address,address,uint256)":"0d30320e","supply(address,uint256,uint256)":"7dbca353","transferOwnership(address)":"f2fde38b","triggerNFTiquidation(address,address,uint256)":"429e2c1a","withdraw(address,uint256,uint256)":"b5c5f672"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daiAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"daiPriceFeed\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"reserveRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"feeToProtocolRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flashFeeRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope1\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope2\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"optimalUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.VaultSetupParamemters\",\"name\":\"daiVaultParams\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadySupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BelowHealthFactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowerIsSolvant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FlashloanFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"FlashloanPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"InvalidFeeRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNFT\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"InvalidNFTLiquidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"InvalidReserveRatio\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Structs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidatorDelayHasNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustPayMoreDebt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoLiquidationWarning\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SelfLiquidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesOutOrAmountIn\",\"type\":\"uint256\"}],\"name\":\"TooHighSlipage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WarningDelayHasNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"isNotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"isPaused\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"interestRatePerSec\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestEarned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesShare\",\"type\":\"uint256\"}],\"name\":\"AccuredInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Structs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"AddSupportedToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DepositNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"token\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"fees\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"FlashloanSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaidAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddres\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"LiquidatingNFTStopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"LiquidatingNFTWarning\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRepayDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftBuyPrice\",\"type\":\"uint256\"}],\"name\":\"NFTLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"reserveRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"feeToProtocolRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flashFeeRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope1\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope2\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"optimalUtilization\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Structs.VaultSetupParamemters\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"NewVaultSetup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SystemPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"elapsedTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newInterestRate\",\"type\":\"uint64\"}],\"name\":\"UpdateInterestRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"VaultPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawNFT\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCKS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"accureInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feesAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feesShare\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_newRate\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAsset\",\"type\":\"bool\"}],\"name\":\"amountToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"canLiquidateNFT\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"depositNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"repayTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"repayAmounts\",\"type\":\"uint256[]\"}],\"name\":\"executeNFTLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashloan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashloanFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"getDepositedNFT\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"getDepositedNFTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFTLiquidationWarning\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"liquidationTimestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct Structs.LiquidatedWarning\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenVault\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Vault\",\"name\":\"totalAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Vault\",\"name\":\"totalBorrow\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserveRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"feeToProtocolRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flashFeeRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ratePerSec\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope1\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope2\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"optimalUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.TokenVault\",\"name\":\"vault\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokenCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNFTCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserNFTCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueInUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserTokenCollateralAndBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenCollateralShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBorrowShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTotalBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueInUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTotalTokenCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueInUSD\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasDepositedNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"healthFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userBorrowToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToLiquidate\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashloan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxFlashloanAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"pausedStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPausedStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"enum Structs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"reserveRatio\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"feeToProtocolRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"flashFeeRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseRate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope1\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slope2\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"optimalUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.VaultSetupParamemters\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"addToken\",\"type\":\"bool\"}],\"name\":\"setupVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAsset\",\"type\":\"bool\"}],\"name\":\"sharesToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stopNFTLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSharesOut\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"triggerNFTiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxShareIn\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HydraPool.sol\":\"HydraPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\"},\"contracts/HydraPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport {Helper} from \\\"./libraries/Helper.sol\\\";\\nimport {VaultAccounting} from \\\"./libraries/VaultAccounting.sol\\\";\\nimport {InterestRate} from \\\"./libraries/InterestRate.sol\\\";\\nimport {Pausing} from \\\"./utils/Pausing.sol\\\";\\nimport {Structs} from \\\"./interfaces/Structs.sol\\\";\\nimport {FlashLoanReceiverInterface} from \\\"./interfaces/FlashLoanReceiverInterface.sol\\\";\\nimport {NFTPledging} from \\\"./NFTPledging.sol\\\";\\nimport \\\"./libraries/Helper.sol\\\";\\n\\ncontract HydraPool is Pausing, NFTPledging {\\n    using VaultAccounting for Structs.Vault;\\n    using InterestRate for Structs.VaultInfo;\\n    using Helper for address;\\n\\n    mapping(address => Structs.TokenVault) private vaults;\\n    mapping(address => mapping(address => Structs.AccountShares))\\n        private userShares;\\n    mapping(address => mapping(address => mapping(uint256 => Structs.LiquidatedWarning)))\\n        private nftLiquidationWarning;\\n\\n    error TooHighSlipage(uint256 sharesOutOrAmountIn);\\n    error InsufficientBalance();\\n    error BelowHealthFactor();\\n    error BorrowerIsSolvant();\\n    error SelfLiquidation();\\n    error InvalidNFTLiquidation(\\n        address borrower,\\n        address nftAddress,\\n        uint256 tokenId\\n    );\\n    error InvalidFeeRate(uint256 fee);\\n    error InvalidReserveRatio(uint256 ratio);\\n    error FlashloanPaused(address token);\\n    error FlashloanFailed();\\n    error NoLiquidationWarning();\\n    error WarningDelayHasNotPassed();\\n    error MustPayMoreDebt();\\n    error LiquidatorDelayHasNotPassed();\\n    error EmptyArray();\\n    error ArrayMismatch();\\n\\n    event Deposit(address user, address token, uint256 amount, uint256 shares);\\n    event Borrow(address user, address token, uint256 amount, uint256 shares);\\n    event Repay(address user, address token, uint256 amount, uint256 shares);\\n    event Withdraw(address user, address token, uint256 amount, uint256 shares);\\n    event Liquidated(\\n        address borrower,\\n        address liquidator,\\n        uint repaidAmount,\\n        uint256 liquidatedCollateral,\\n        uint256 reward\\n    );\\n    event UpdateInterestRate(uint256 elapsedTime, uint64 newInterestRate);\\n    event AccuredInterest(\\n        uint64 interestRatePerSec,\\n        uint256 interestEarned,\\n        uint256 feesAmount,\\n        uint256 feesShare\\n    );\\n    event FlashloanSuccess(\\n        address initiator,\\n        address[] token,\\n        uint256[] amount,\\n        uint256[] fees,\\n        bytes data\\n    );\\n    event DepositNFT(address user, address nftAddress, uint256 tokenId);\\n    event WithdrawNFT(\\n        address user,\\n        address recipient,\\n        address nftAddress,\\n        uint256 tokenId\\n    );\\n    event LiquidatingNFTWarning(\\n        address liquidator,\\n        address borrower,\\n        address nftAddress,\\n        uint256 tokenId\\n    );\\n    event LiquidatingNFTStopped(\\n        address borrower,\\n        address nftAddres,\\n        uint256 tokenId\\n    );\\n    event NFTLiquidated(\\n        address liquidator,\\n        address borrower,\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 totalRepayDebt,\\n        uint256 nftBuyPrice\\n    );\\n    event NewVaultSetup(\\n        address token,\\n        Structs.VaultSetupParamemters params\\n    );\\n\\n    //Make a subnet that create a token, then replace daiAddress with token address and everything\\n    constructor(\\n        address daiAddress,\\n        address daiPriceFeed,\\n        Structs.VaultSetupParamemters memory daiVaultParams\\n    ) {\\n        _setupVault(\\n            daiAddress,\\n            daiPriceFeed,\\n            Structs.TokenType.ERC20,\\n            daiVaultParams,\\n            true\\n        );\\n    }\\n    /*/////////////////////////////////////////////\\n                ERC20 FUNCTIONS\\n    //////////////////////////////////////////////*/\\n\\n    //dua token de lay lai suat\\n    function supply(\\n        address token,\\n        uint256 amount,\\n        uint256 minSharesOut\\n    )  payable external {\\n        WhenNotPaused(token);\\n        allowedToken(token);\\n        _accuredInterest(token);\\n\\n        token.transferERC20(msg.sender, address(this),amount);\\n        uint256 shares = vaults[token].totalAsset.toShares(amount, false);\\n        if (shares < minSharesOut) revert TooHighSlipage(shares);\\n\\n        vaults[token].totalAsset.shares += uint128(shares);\\n        vaults[token].totalAsset.amount += uint128(amount);\\n        userShares[msg.sender][token].collateral += shares;\\n\\n        emit Deposit(msg.sender, token, amount, shares);\\n    }\\n\\n    //Muon token\\n    function borrow(address token, uint256 amount) payable external {\\n        WhenNotPaused(token);\\n        if(!vaultAboveReserveRatio(token,amount))\\n            revert InsufficientBalance();\\n        _accuredInterest(token);\\n\\n        uint256 shares = vaults[token].totalBorrow.toShares(amount, false);\\n        vaults[token].totalBorrow.shares += uint128(shares);\\n        vaults[token].totalBorrow.amount += uint128(amount);\\n        userShares[msg.sender][token].borrow += shares;\\n        \\n        token.transferERC20(address(this), msg.sender, amount);\\n        if(healthFactor(msg.sender) < MIN_HEALTH_FACTOR)\\n            revert BelowHealthFactor();\\n\\n        emit Borrow(msg.sender, token, amount, shares);\\n    }\\n    //Tra token da muon\\n    function repay(address token, uint256 amount) external {\\n        _accuredInterest(token);\\n        uint256 userBorrowShare = userShares[msg.sender][token].borrow;\\n        uint256 shares = vaults[token].totalBorrow.toShares(amount, true);\\n        if (amount == type(uint256).max || shares > userBorrowShare) {\\n            shares = userBorrowShare;\\n            amount = vaults[token].totalBorrow.toAmount(shares, true);\\n        }\\n        token.transferERC20(msg.sender, address(this), amount);\\n        unchecked {\\n            vaults[token].totalBorrow.shares -= uint128(shares);\\n            vaults[token].totalBorrow.amount -= uint128(amount);\\n            userShares[msg.sender][token].borrow = userBorrowShare - shares;\\n        }\\n\\n        emit Repay(msg.sender, token, amount, shares);\\n    }\\n    //Rut ra\\n    function withdraw(\\n        address token,\\n        uint256 amount,\\n        uint256 maxShareIn\\n    ) external {\\n        _withdraw(token, amount, maxShareIn, false);\\n    }\\n    //Khoi\\n    function redeem(\\n        address token,\\n        uint256 shares,\\n        uint256 minAmountOut\\n    ) external {\\n        _withdraw(token, shares, minAmountOut, true);\\n    }\\n\\n    function liquidate(\\n        address account,\\n        address collateral,\\n        address userBorrowToken,\\n        uint256 amountToLiquidate\\n    ) external {\\n        if (msg.sender == account) revert SelfLiquidation();\\n        uint256 accountHealth = healthFactor(account);\\n        if (accountHealth >= MIN_HEALTH_FACTOR) revert BorrowerIsSolvant();\\n\\n        uint256 collateralShares = userShares[account][collateral].collateral;\\n        uint256 borrowShares = userShares[account][userBorrowToken].borrow;\\n        if (collateralShares == 0 || borrowShares == 0) return;\\n        {\\n            uint256 totalBorrowAmount = vaults[userBorrowToken]\\n                .totalBorrow\\n                .toAmount(borrowShares, true);\\n\\n            uint256 maxBorrowAmountToLiquidate = accountHealth >=\\n                FULL_LIQUIDATION_THRESHOLD\\n                ? (totalBorrowAmount * DEFAULT_LIQUIDATION_CLOSE) / BPS\\n                : totalBorrowAmount;\\n            amountToLiquidate = amountToLiquidate > maxBorrowAmountToLiquidate\\n                ? maxBorrowAmountToLiquidate\\n                : amountToLiquidate;\\n        } \\n\\n        uint256 collateralAmountToLiquidate;\\n        uint256 liquidationReward;\\n        {\\n            address user = account;\\n            address borrowToken = userBorrowToken;\\n            address collateralToken = collateral;\\n            uint256 liquidationAmount = amountToLiquidate;\\n\\n            uint256 _userTotalCollateralAmount = vaults[collateralToken]\\n                .totalAsset\\n                .toAmount(collateralShares, false);\\n            \\n            uint256 collateralPrice = getTokenPrice(collateralToken);\\n            uint256 borrowTokenPrice = getTokenPrice(borrowToken);\\n            uint8 collateralDecimals = collateralToken.tokenDecimals();\\n            uint8 borrowTokenDecimals = borrowToken.tokenDecimals();\\n\\n            collateralAmountToLiquidate =\\n                (liquidationAmount *\\n                    borrowTokenPrice *\\n                    10 ** collateralDecimals) /\\n                (collateralPrice * 10 ** borrowTokenDecimals);\\n            uint256 maxLiquidationReward = (collateralAmountToLiquidate *\\n                LIQUIDATION_REWARD) / BPS;\\n            if (collateralAmountToLiquidate > _userTotalCollateralAmount) {\\n                collateralAmountToLiquidate = _userTotalCollateralAmount;\\n                liquidationReward = \\n                    ((_userTotalCollateralAmount *\\n                        collateralPrice *\\n                        10 ** borrowTokenDecimals) / borrowTokenPrice) *\\n                    10 ** collateralDecimals;\\n                amountToLiquidate = liquidationAmount;\\n            } else {\\n                uint256 collateralBalanceAfter = _userTotalCollateralAmount -\\n                    collateralAmountToLiquidate;\\n                liquidationReward = maxLiquidationReward >\\n                    collateralBalanceAfter\\n                    ? collateralBalanceAfter\\n                    : maxLiquidationReward;\\n            }\\n            //Update borrow vault\\n            uint128 repaidBorrowShares = uint128(\\n                vaults[borrowToken].totalBorrow.toShares(\\n                    liquidationAmount,\\n                    false\\n                )\\n            );\\n            vaults[borrowToken].totalBorrow.shares -= repaidBorrowShares;\\n            vaults[borrowToken].totalBorrow.amount -= uint128(\\n                liquidationAmount\\n            );\\n\\n            //Update collateral vault\\n            uint128 liquidatedCollShares = uint128(\\n                vaults[collateralToken].totalAsset.toShares(\\n                    collateralAmountToLiquidate + liquidationReward,\\n                    false\\n                )\\n            );\\n            vaults[collateralToken].totalAsset.shares -= liquidatedCollShares;\\n            vaults[collateralToken].totalAsset.amount -= uint128(\\n                collateralAmountToLiquidate + liquidationReward\\n            );\\n            userShares[user][borrowToken].borrow -= repaidBorrowShares;\\n            userShares[user][collateralToken].collateral -= liquidatedCollShares;\\n        }\\n\\n        //Repay borrowed amount\\n        userBorrowToken.transferERC20(\\n            address(this),\\n            msg.sender,\\n            collateralAmountToLiquidate + liquidationReward\\n        );\\n        //Transfer collateral & liquidation reward to liquidator\\n        collateral.transferERC20(\\n            address(this),\\n            msg.sender,\\n            collateralAmountToLiquidate + liquidationReward\\n        );\\n\\n        emit Liquidated(\\n            account,\\n            msg.sender,\\n            amountToLiquidate,\\n            collateralAmountToLiquidate + liquidationReward,\\n            liquidationReward\\n        );\\n    }\\n    //\\n    function flashloan(\\n        address receiverAddress,\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external {\\n        if (tokens.length == 0) revert EmptyArray();\\n        if (tokens.length != amounts.length) revert ArrayMismatch();\\n\\n        FlashLoanReceiverInterface receiver = FlashLoanReceiverInterface(receiverAddress);\\n        uint256[] memory fees = new uint256[](tokens.length);\\n        for (uint256 i; i < tokens.length; ) {\\n            if (maxFlashloan(tokens[i]) == 0) revert FlashloanPaused(tokens[i]);\\n            fees[i] = flashloanFee(tokens[i], amounts[i]);\\n            tokens[i].transferERC20(address(this), receiverAddress, amounts[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n        if (!receiver.onFlashLoan(\\n            msg.sender,\\n            tokens,\\n            amounts,\\n            fees,\\n            data\\n        )) revert FlashloanFailed();\\n\\n        uint256 amountPlusFee;\\n        for (uint256 i; i < tokens.length; ) {\\n            amountPlusFee = amounts[i] + fees[i];\\n            tokens[i].transferERC20(\\n                receiverAddress,\\n                address(this),\\n                amountPlusFee\\n            );\\n            vaults[tokens[i]].totalAsset.amount += uint128(fees[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        emit FlashloanSuccess(msg.sender, tokens, amounts, fees, data);\\n    }\\n    //Lai tich luy\\n    function accureInterest(\\n        address token\\n    ) \\n        external\\n        returns (\\n            uint256 _interestEarned,\\n            uint256 _feesAmount,\\n            uint256 _feesShare,\\n            uint64 _newRate\\n        ) \\n    {\\n        return _accuredInterest(token);\\n    }\\n\\n    /*//////////////////////////////////////////////\\n                NFT FUNCTIONS\\n    //////////////////////////////////////////////*/\\n    //Cam NFT\\n    function depositNft(\\n        address recipient,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) external {\\n        _withdrawNft(msg.sender, recipient, nftAddress, tokenId);\\n        if (healthFactor(msg.sender) < MIN_HEALTH_FACTOR) revert BelowHealthFactor();\\n        emit WithdrawNFT(msg.sender, recipient, nftAddress, tokenId);\\n    }\\n    //\\n    function triggerNFTiquidation(\\n        address account,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) external {\\n        if (!hasDepositedNFT(account, nftAddress, tokenId)) revert InvalidNFT();\\n        uint256 totalTokenCollateralValue = getUserTotalTokenCollateral(\\n            account\\n        );\\n\\n        if (\\n            healthFactor(account) >= MIN_HEALTH_FACTOR ||\\n            totalTokenCollateralValue != 0\\n        ) revert InvalidNFTLiquidation(account, nftAddress, tokenId);\\n\\n        Structs.LiquidatedWarning storage warning = nftLiquidationWarning[\\n            account\\n        ][nftAddress][tokenId];\\n        warning.liquidator = msg.sender;\\n        warning.liquidationTimestamp = uint64(block.timestamp + NFT_WARNING_DELAY);\\n\\n        emit LiquidatingNFTWarning(msg.sender, account, nftAddress, tokenId);\\n    }\\n\\n    function stopNFTLiquidation(\\n        address account,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) external {\\n        if (healthFactor(account) < MIN_HEALTH_FACTOR)\\n            revert BelowHealthFactor();\\n        delete nftLiquidationWarning[account][nftAddress][tokenId];\\n        emit LiquidatingNFTStopped(account, nftAddress, tokenId);\\n    }\\n\\n    function executeNFTLiquidation(\\n        address account,\\n        address nftAddress,\\n        uint256 tokenId,\\n        address[] calldata repayTokens,\\n        uint256[] calldata repayAmounts\\n    ) external {\\n        if (repayTokens.length == 0) revert EmptyArray();\\n        if (repayTokens.length != repayAmounts.length) revert ArrayMismatch();\\n        canLiquidateNFT(account, nftAddress, tokenId);\\n\\n        uint256 totalDebtValue = getUserTotalBorrow(account);\\n        uint256 nftFloorPrice = getTokenPrice(nftAddress);\\n        uint256 totalRepaidDebtValue;\\n        {\\n            address borrower = account;\\n            address token;\\n            uint256 amount;\\n            uint256 borrowShares;\\n            for (uint256 i; i < repayTokens.length; ) {\\n                token = repayTokens[i];\\n                amount = repayAmounts[i];\\n                _accuredInterest(token);\\n                borrowShares = vaults[token].totalBorrow.toShares(amount, true);\\n                token.transferERC20(msg.sender, address(this), amount);\\n                vaults[token].totalBorrow.shares -= uint128(borrowShares);\\n                vaults[token].totalBorrow.amount -= uint128(amount);\\n\\n                userShares[borrower][token].borrow -= uint128(borrowShares);\\n\\n                totalRepaidDebtValue += getAmountInUSD(token, amount);\\n                unchecked {\\n                    ++i;\\n                }\\n            }\\n\\n            //must repay at least debt equivalent of half NFT value\\n            if (\\n                totalDebtValue > nftFloorPrice &&\\n                totalRepaidDebtValue <\\n                (nftFloorPrice * DEFAULT_LIQUIDATION_CLOSE) / BPS\\n            ) revert MustPayMoreDebt();\\n        }\\n\\n        uint256 nftBuyPrice;\\n        {\\n            address borrower = account;\\n            uint256 totalLiquidatorDiscount = (totalRepaidDebtValue *\\n                (BPS + NFT_LIQUIDATION_DISCOUNT)) / BPS;\\n            nftBuyPrice = nftFloorPrice - totalLiquidatorDiscount;\\n\\n            address DAI =  supportedERC20s[0];\\n            DAI.transferERC20(msg.sender, address(this), nftBuyPrice);\\n\\n            uint256 shares = vaults[DAI].totalAsset.toShares(\\n                nftBuyPrice,\\n                false\\n            );\\n            vaults[DAI].totalAsset.shares += uint128(shares);\\n            vaults[DAI].totalAsset.amount += uint128(nftBuyPrice);\\n            userShares[borrower][DAI].collateral += shares;\\n        }\\n\\n        _withdrawNft(account, msg.sender, nftAddress, tokenId);\\n\\n        emit NFTLiquidated(\\n            msg.sender,\\n            account,\\n            nftAddress,\\n            tokenId,\\n            totalRepaidDebtValue,\\n            nftBuyPrice\\n        );\\n    }\\n\\n    function canLiquidateNFT(\\n        address account,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) public view {\\n        if (healthFactor(account) < MIN_HEALTH_FACTOR)\\n             revert BorrowerIsSolvant();\\n        Structs.LiquidatedWarning storage warning = nftLiquidationWarning[\\n            account\\n        ][nftAddress][tokenId];\\n        if (warning.liquidator == address(0)) revert NoLiquidationWarning();\\n        if (block.timestamp < warning.liquidationTimestamp)\\n            revert WarningDelayHasNotPassed();\\n        if (\\n            block.timestamp <=\\n            warning.liquidationTimestamp + NFT_LIQUIDATOR_DELAY &&\\n            msg.sender != warning.liquidator\\n        ) revert LiquidatorDelayHasNotPassed();\\n        \\n    }\\n    /*//////////////////////////////////////////////\\n                 GETTER FUNCTIONS\\n    //////////////////////////////////////////////*/\\n\\n    function getUserData(\\n        address user\\n    ) public view \\n    returns (\\n        uint256 totalTokenCollateral,\\n        uint256 totalNFTCollateral,\\n        uint256 totalBorrowValue\\n    )\\n    {\\n        totalTokenCollateral = getUserTotalTokenCollateral(user);\\n        totalNFTCollateral = getUserNFTCollateral(user);\\n        totalBorrowValue = getUserTotalBorrow(user);\\n    }\\n\\n    function getUserTotalTokenCollateral(\\n        address user\\n    ) public view returns (uint256 totalValueInUSD) {\\n        uint len = supportedERC20s.length;\\n        for (uint256 i; i < len;) {\\n            address token = supportedERC20s[i];\\n            uint256 tokenAmount = vaults[token].totalAsset.toAmount(\\n                userShares[user][token].collateral,\\n                false\\n            );\\n            if (tokenAmount != 0) {\\n                totalValueInUSD += getAmountInUSD(token, tokenAmount);\\n            }\\n            unchecked {\\n                ++i;\\n            }\\n        } \\n    }\\n\\n    function getUserNFTCollateral(address user) public view returns(uint256 totalValueInUSD) {\\n        uint len = supportedNFTs.length;\\n        for (uint256 i; i < len;) {\\n            address nftAddress = supportedNFTs[i];\\n            uint256 userDepositedNFTs = getDepositedNFTCount(user, nftAddress);\\n            if (userDepositedNFTs != 0) {\\n                uint256 nftFloorPrice = getTokenPrice(nftAddress);\\n                totalValueInUSD += userDepositedNFTs * nftFloorPrice;\\n            }\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function getUserTotalBorrow(\\n        address user\\n    ) public view returns (uint256 totalValueInUSD) {\\n        uint len = supportedERC20s.length;\\n        for (uint256 i; i < len;) {\\n            address token = supportedERC20s[i];\\n            uint256 tokenAmount = vaults[token].totalBorrow.toAmount(\\n                userShares[user][token].borrow,\\n                false\\n            );\\n            if (tokenAmount != 0) {\\n                totalValueInUSD += getAmountInUSD(token, tokenAmount);\\n            }\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function getUserTokenCollateralAndBorrow(\\n        address user,\\n        address token\\n    ) \\n        external \\n        view\\n        returns (uint256 tokenCollateralShare, uint256 tokenBorrowShare)\\n    {\\n        tokenCollateralShare = userShares[user][token].collateral;\\n        tokenBorrowShare = userShares[user][token].borrow;\\n    }\\n\\n    function healthFactor(address user) public view returns (uint256 factor) {\\n        (\\n            uint256 totalTokenCollateral,\\n            uint256 totalNFTCollateral,\\n            uint256 totalBorrowValue\\n        ) = getUserData(user);\\n\\n        uint256 userTotalCollateralValue = totalTokenCollateral +\\n            totalNFTCollateral;\\n        if (totalBorrowValue == 0) return 100 * MIN_HEALTH_FACTOR;\\n        uint256 collateralValueWithThreshold = (userTotalCollateralValue * \\n            LIQUIDATION_THRESHOLD) / BPS;\\n        factor = \\n            (collateralValueWithThreshold * MIN_HEALTH_FACTOR) /\\n            totalBorrowValue;\\n    }\\n\\n    function getAmountInUSD(\\n        address token,\\n        uint256 amount\\n    ) public view returns (uint256 value) {\\n        uint256 price = getTokenPrice(token);\\n        uint8 decimals = token.tokenDecimals();\\n        uint256 amountIn18Decimals = amount * 10**(18 -decimals);\\n        value = (amountIn18Decimals * price) / PRECISION;\\n    }\\n\\n    function getTokenVault(\\n        address token\\n    ) public view returns (Structs.TokenVault memory vault) {\\n        vault = vaults[token];\\n    }\\n\\n    function getNFTLiquidationWarning(\\n        address account,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) external view returns (Structs.LiquidatedWarning memory) {\\n        return nftLiquidationWarning[account][nftAddress][tokenId];\\n    }\\n\\n    function amountToShares(\\n        address token, \\n        uint256 amount,\\n        bool isAsset\\n    ) external view returns (uint256 shares) {\\n        if (isAsset) {\\n            shares = uint256(vaults[token].totalAsset.toShares(amount, false));\\n        } else {\\n            shares = uint256(vaults[token].totalBorrow.toShares(amount, false));\\n        }\\n    }\\n\\n    function sharesToAmount(\\n        address token,\\n        uint256 shares,\\n        bool isAsset\\n    ) external view returns (uint256 amount) {\\n         if (isAsset) {\\n            amount = uint256(vaults[token].totalAsset.toAmount(shares, false));\\n        } else {\\n            amount = uint256(vaults[token].totalBorrow.toAmount(shares, false));\\n        }\\n    }\\n\\n    function maxFlashloan(\\n        address token\\n    ) public view returns (uint256 maxFlashloanAmount) {\\n        maxFlashloanAmount = pausedStatus(token) ? 0 : type(uint256).max;\\n    }\\n\\n    function flashloanFee(\\n        address token,\\n        uint256 amount\\n    ) public view returns (uint256) {\\n        return (amount * vaults[token].vaultInfo.flashFeeRate) / BPS;\\n    }\\n\\n    /*///////////////////////////////////////////////\\n                 OWNER FUNCTIONS\\n    ////////////////////////////////////////////////*/\\n\\n    function setupVault(\\n        address token,\\n        address priceFeed,\\n        Structs.TokenType tokenType,\\n        Structs.VaultSetupParamemters memory params,\\n        bool addToken\\n    ) external onlyOwner {\\n        _setupVault(token, priceFeed, tokenType, params, addToken);\\n    }\\n\\n    ////////INTERNAL FUNCTIONS////////\\n\\n    //pulledAmount parameter represents an amount of tokens\\n    //that are being withdrawn or pulled from the vault. \\n    //The function checks if the vault's remaining balance after\\n    // this withdrawal would still be above a certain reserve ratio.\\n    function vaultAboveReserveRatio(\\n        address token,\\n        uint256 pulledAmount\\n    ) internal view returns (bool isAboveReserveRatio) {\\n        uint256 minVaultReserve = (vaults[token].totalAsset.amount *\\n            vaults[token].vaultInfo.reserveRatio) / BPS;\\n        isAboveReserveRatio =\\n            vaults[token].totalAsset.amount != 0 &&\\n            IERC20(token).balanceOf(address(this)) >= \\n            minVaultReserve + pulledAmount;\\n    }\\n\\n    function _withdraw(\\n        address token,\\n        uint256 amount,\\n        uint256 minAmountOutOrMaxShareIn,\\n        bool share\\n    ) internal {\\n        _accuredInterest(token);\\n\\n        uint256 userCollateralShares = userShares[msg.sender][token].collateral;\\n        uint256 shares;\\n        if(share) {\\n            shares = amount;\\n            amount = vaults[token].totalAsset.toAmount(shares, false);\\n            if (amount < minAmountOutOrMaxShareIn)\\n                revert TooHighSlipage(amount);\\n        } else {\\n            shares = vaults[token].totalAsset.toShares(amount, false);\\n            if (shares > minAmountOutOrMaxShareIn)\\n                revert TooHighSlipage(shares);\\n        }\\n        if (\\n            userCollateralShares < shares ||\\n            IERC20(token).balanceOf(address(this)) < amount\\n        ) revert InsufficientBalance();\\n        unchecked {\\n            vaults[token].totalAsset.shares -= uint128(shares);\\n            vaults[token].totalAsset.amount -= uint128(amount);\\n            userShares[msg.sender][token].collateral -= shares;\\n        }\\n\\n        token.transferERC20(address(this), msg.sender, amount);\\n        if (healthFactor(msg.sender) < MIN_HEALTH_FACTOR)\\n            revert BelowHealthFactor();\\n        emit Withdraw(msg.sender, token, amount, shares);\\n    }\\n\\n    function _accuredInterest(\\n        address token\\n    ) \\n        internal\\n        returns(\\n            uint256 _interestEarned,\\n            uint256 _feesAmount,\\n            uint256 _feesShare,\\n            uint64 newRate\\n        )\\n    {\\n        Structs.TokenVault memory _vault = vaults[token];\\n        if (_vault.totalAsset.amount == 0) {\\n            return (0, 0, 0, 0);\\n        }\\n\\n        //Add interest only once per block\\n        Structs.VaultInfo memory _currentRateInfo = _vault.vaultInfo;\\n        if (_currentRateInfo.lastTimestamp == block.timestamp) {\\n            newRate = _currentRateInfo.ratePerSec;\\n            return (_interestEarned, _feesAmount, _feesShare, newRate);\\n        }\\n\\n        //If there are no borrows or vault or system is paused, no interest accured\\n        if(_vault.totalBorrow.shares ==0 || pausedStatus(token)) {\\n            _currentRateInfo.lastTimestamp =uint64(block.timestamp);\\n            _currentRateInfo.lastBlock = uint64(block.number);\\n            _vault.vaultInfo = _currentRateInfo;\\n        } else {\\n            uint256 _deltaTime = block.number - _currentRateInfo.lastBlock;\\n            uint256 _utilization = (_vault.totalBorrow.amount * PRECISION) /\\n                _vault.totalAsset.amount;\\n            uint256 _newRate = _currentRateInfo.getInterestRate(\\n                _utilization\\n            );\\n            _currentRateInfo.ratePerSec = uint64(newRate);\\n            _currentRateInfo.lastTimestamp = uint64(block.timestamp);\\n            _currentRateInfo.lastBlock = uint64(block.number);\\n\\n            emit UpdateInterestRate(_deltaTime, uint64(_newRate));\\n\\n            //Calculate interest accures\\n            _interestEarned =\\n                (_deltaTime *\\n                _vault.totalBorrow.amount *\\n                _currentRateInfo.ratePerSec) /\\n            (PRECISION * BLOCKS_PER_YEAR);\\n\\n            // Accumulate interest and fees\\n            _vault.totalBorrow.amount += uint128(_interestEarned);\\n            _vault.totalAsset.amount += uint128(_interestEarned);\\n            _vault.vaultInfo = _currentRateInfo;\\n            if (_currentRateInfo.feeToProtocolRate > 0) {\\n                _feesAmount =\\n                    (_interestEarned * _currentRateInfo.feeToProtocolRate) /\\n                    BPS;\\n                _feesShare =\\n                    (_feesAmount * _vault.totalAsset.shares) /\\n                    (_vault.totalAsset.amount - _feesAmount);\\n                _vault.totalAsset.shares += uint128(_feesShare);\\n\\n                // accure protocol fee shares to this contract\\n                userShares[address(this)][token].collateral += _feesShare;\\n            }\\n            emit AccuredInterest(\\n                _currentRateInfo.ratePerSec,\\n                _interestEarned,\\n                _feesAmount,\\n                _feesShare\\n            );\\n        }\\n        //Save to storage \\n        vaults[token] = _vault;\\n    }\\n\\n    function _setupVault(\\n        address token,\\n        address priceFeed,\\n        Structs.TokenType tokenType,\\n        Structs.VaultSetupParamemters memory params,\\n        bool addToken\\n    ) internal {\\n        if (addToken) {\\n            addSupportedToken(token, priceFeed, tokenType);\\n        } else {\\n            //Cannot change vault setup when pausing\\n            WhenPaused(token);\\n        }\\n        if (tokenType == Structs.TokenType.ERC20) {\\n            if (params.reserveRatio > BPS)\\n                revert InvalidReserveRatio(params.reserveRatio);\\n            if (params.feeToProtocolRate > MAX_PROTOCOL_FEE)\\n                revert InvalidFeeRate(params.feeToProtocolRate);\\n            if(params.flashFeeRate > MAX_PROTOCOL_FEE)\\n                revert InvalidFeeRate(params.flashFeeRate);\\n            Structs.VaultInfo storage _vaultInfo = vaults[token].vaultInfo;\\n            _vaultInfo.reserveRatio = params.reserveRatio;\\n            _vaultInfo.feeToProtocolRate = params.feeToProtocolRate;\\n            _vaultInfo.flashFeeRate = params.flashFeeRate;\\n            _vaultInfo.baseRate = params.baseRate;\\n            _vaultInfo.slope1 = params.slope1;\\n            _vaultInfo.slope2 = params.slope2;\\n            _vaultInfo.optimalUtilization = params.optimalUtilization;\\n\\n            emit NewVaultSetup(token, params);\\n        }\\n    }\\n    \\n}\\n\\n\\n\",\"keccak256\":\"0x506fc759b1c7df5bbecbf5fb4771550409353be22723b162df8a01b0ba439bb5\",\"license\":\"MIT\"},\"contracts/NFTPledging.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport {TokenSupporter} from \\\"./TokenSupporter.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"./interfaces/Structs.sol\\\";\\n\\ncontract NFTPledging is TokenSupporter, IERC721Receiver {\\n    using EnumerableSet for EnumerableSet.UintSet;\\n\\n    error InvalidNFT();\\n\\n    mapping(address user => mapping(address nft => EnumerableSet.UintSet tokenIds)) depositedNFTs;\\n\\n    function _depositNFT(address nftAddress, uint256 tokenId) internal {\\n        allowedToken(nftAddress);\\n        IERC721(nftAddress).safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            tokenId\\n        );\\n        depositedNFTs[msg.sender][nftAddress].add(tokenId);\\n    }\\n\\n    function _withdrawNft(\\n        address owner,\\n        address recipient,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) internal {\\n        if (!hasDepositedNFT(owner, nftAddress, tokenId)) revert InvalidNFT();\\n        depositedNFTs[owner][nftAddress].remove(tokenId);\\n        IERC721(nftAddress).safeTransferFrom(\\n            address(this), recipient, tokenId\\n        );\\n    }\\n\\n    function hasDepositedNFT(\\n        address owner,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) public view returns (bool) {\\n        return depositedNFTs[owner][nftAddress].contains(tokenId);\\n    }\\n\\n    function getDepositedNFT(\\n        address owner,\\n        address nftAddress\\n    ) public view returns (uint256[] memory) {\\n        return depositedNFTs[owner][nftAddress].values();\\n    }\\n\\n    function getDepositedNFTCount(address owner, address nftAddress)\\n        public view returns (uint256) {\\n            return depositedNFTs[owner][nftAddress].length();\\n    }\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure override returns (bytes4) {\\n        return IERC721Receiver.onERC721Received.selector;\\n    }\\n}\",\"keccak256\":\"0x36ba932fb97912d7f6f57b522f84885c53a6b7bb82dec1d3486aa54a97e16f5a\",\"license\":\"MIT\"},\"contracts/TokenSupporter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./libraries/ChainlinkOracle.sol\\\";\\nimport \\\"./interfaces/Structs.sol\\\";\\nimport \\\"./utils/Constants.sol\\\";\\n\\ncontract TokenSupporter is Constants {\\n    using ChainlinkOracle for AggregatorV3Interface;\\n\\n    address[] internal supportedERC20s;\\n    address[] internal supportedNFTs;\\n\\n    mapping(address => Structs.SupportedToken) internal supportedToken;\\n\\n    error TokenNotSupported();\\n    error AlreadySupported();\\n    error InvalidTokenType(Structs.TokenType tokenType);\\n\\n    event AddSupportedToken(address token, Structs.TokenType tokenType);\\n\\n    function addSupportedToken(\\n        address token,\\n        address priceFeed,\\n        Structs.TokenType tokenType\\n    ) internal {\\n        if (supportedToken[token].supported) revert AlreadySupported();\\n        if (uint(tokenType) > 1) revert InvalidTokenType(tokenType);\\n\\n        supportedToken[token].usdPriceFeed = priceFeed;\\n        supportedToken[token].tokenType = tokenType;\\n        supportedToken[token].supported = true;\\n\\n        if (tokenType == Structs.TokenType.ERC721) {\\n            supportedNFTs.push(token);\\n        } else {\\n            supportedERC20s.push(token);\\n        }\\n\\n        emit AddSupportedToken(token, tokenType);\\n    }\\n\\n    function getTokenPrice(address token) public view returns (uint256 price) {\\n        if (!supportedToken[token].supported) return 0;\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            supportedToken[token].usdPriceFeed\\n        );\\n        price = priceFeed.getPrice();\\n    }\\n\\n    function allowedToken(address token) internal view {\\n        if (!supportedToken[token].supported) revert TokenNotSupported();\\n    }\\n}\",\"keccak256\":\"0x96c693e8569da696e98e63fbc6ded156d95e6f59d7f0b8c2ae4996636dcb4f11\",\"license\":\"MIT\"},\"contracts/interfaces/FlashLoanReceiverInterface.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface FlashLoanReceiverInterface {\\n    /**\\n     * @param initiator ng bat dau khoan vay\\n     * @param token token vay\\n     * @param amounts so tien vay\\n     * @param fees phi vay\\n     * @param data user-defined parameters\\n     * @return bool success or not\\n     */\\n    function onFlashLoan(\\n        address initiator,\\n        address[] calldata token,\\n        uint256[] calldata amounts,\\n        uint256[] calldata fees,\\n        bytes calldata data\\n    ) external returns (bool);\\n}\",\"keccak256\":\"0xc7a4dd97d41558c2611071f39fe801763e8ef521130c39112d35469ec26ad978\",\"license\":\"MIT\"},\"contracts/interfaces/Structs.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface Structs {\\n    enum TokenType {\\n        ERC20,\\n        ERC721\\n    }\\n\\n    struct SupportedToken {\\n        address usdPriceFeed;\\n        TokenType tokenType;\\n        bool supported;\\n    }\\n\\n    struct AccountShares {\\n        uint256 collateral;\\n        uint256 borrow;\\n    }\\n\\n    struct Vault {\\n        uint256 amount;\\n        uint256 shares;\\n    }\\n\\n    struct TokenVault {\\n        Vault totalAsset;\\n        Vault totalBorrow;\\n        VaultInfo vaultInfo;\\n    }\\n\\n    struct VaultInfo {\\n        uint256 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 ratePerSec;\\n        uint64 lastTimestamp;\\n        uint64 lastBlock;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n\\n    struct LiquidatedWarning {\\n        address liquidator;\\n        uint64 liquidationTimestamp;\\n    }\\n\\n    struct VaultSetupParamemters {\\n        uint64 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n}\",\"keccak256\":\"0x9a6b326a06bcee7cfcef4cfd680c4afa19f98541c4463a683dad54b204245f10\",\"license\":\"MIT\"},\"contracts/libraries/ChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary ChainlinkOracle {\\n    error InvalidPrice();\\n\\n    uint256 private constant TIME_OUT = 2 hours;\\n\\n    uint256 private constant USD_ORACLE_DECIMALS = 10;\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256 price) {\\n        (\\n            uint80 roundId,\\n            int256 answer,\\n            ,\\n            uint256 updatedAt,\\n            uint80 answerInRound\\n        ) = priceFeed.latestRoundData();\\n\\n        if (\\n            answer <= 0 ||\\n            updatedAt == 0 ||\\n            answerInRound < roundId ||\\n            block.timestamp - updatedAt > TIME_OUT\\n        ) revert InvalidPrice();\\n\\n        price = uint256(answer) * 10 ** USD_ORACLE_DECIMALS;\\n    } \\n\\n    function getTimeOut(AggregatorV3Interface) public pure returns (uint256) {\\n        return TIME_OUT;\\n    }\\n}\",\"keccak256\":\"0xe1d6702a9e4cf5909ab52df90f7b5c1415bf90b436e246eb312114a13aed6231\",\"license\":\"MIT\"},\"contracts/libraries/Helper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport {IERC20, IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nlibrary  Helper {\\n    error TransferFailed();\\n    \\n    function tokenDecimals(\\n        address token\\n    ) internal view returns (uint8 decimals) {\\n        decimals = IERC20Metadata(token).decimals();\\n    }\\n\\n    function transferERC20(\\n        address _token,\\n        address _from,\\n        address  _to,\\n        uint256 _amount\\n    ) internal {\\n        bool success;\\n        if (_from == address(this)) {\\n            success = IERC20(_token).transfer(_to, _amount);\\n        } else {\\n            success = IERC20(_token).transferFrom(_from, _to, _amount);\\n        }\\n        if (!success) revert TransferFailed();\\n    }\\n}\",\"keccak256\":\"0x5b6ca12b7937a44e1b58a93dda13f53787ebbb9706c8c9701baad3cffbada927\",\"license\":\"MIT\"},\"contracts/libraries/InterestRate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"../interfaces/Structs.sol\\\";\\n\\nlibrary InterestRate {\\n    uint256 internal constant RATE_PRECISION = 1e18;\\n\\n    function getInterestRate(\\n        Structs.VaultInfo memory _interestRateInfo,\\n        uint256 utilization\\n    ) internal pure returns (uint256 newRate) {\\n        uint256 optimalUtilization = _interestRateInfo.optimalUtilization;\\n        uint256 baseRate = uint256(_interestRateInfo.baseRate);\\n        uint256 slope1 = uint256(_interestRateInfo.slope1);\\n        uint256 slope2 = uint256(_interestRateInfo.slope2);\\n\\n        if (utilization <= optimalUtilization) {\\n            uint256 rate = (utilization * slope1) / optimalUtilization;\\n            newRate = baseRate + rate;\\n        } else {\\n            uint256 delta = utilization - optimalUtilization;\\n            uint256 excessUtilizationRate = \\n                (delta * RATE_PRECISION) / (RATE_PRECISION - optimalUtilization);\\n            newRate = baseRate + slope1 + (excessUtilizationRate * slope2)\\n                / RATE_PRECISION;\\n        }\\n    }\\n}\",\"keccak256\":\"0x0ed1069701529c6016943238a8e70f961be7f802b47f2f5ce51d747b99e92fbd\",\"license\":\"MIT\"},\"contracts/libraries/VaultAccounting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"../interfaces/Structs.sol\\\";\\n\\nlibrary VaultAccounting {\\n    function toShares(\\n        Structs.Vault memory total,\\n        uint256 amount,\\n        bool roundUp\\n    ) internal pure returns (uint256 shares) {\\n        if(total.amount == 0) {\\n            shares = amount;\\n        } else {\\n            shares = (amount * total.shares) / total.amount;\\n            if (roundUp && (shares * total.amount) / total.shares < amount) {\\n                shares = shares + 1;\\n            }\\n        }\\n    }\\n\\n    function toAmount(\\n        Structs.Vault memory total,\\n        uint256 shares,\\n        bool roundUp\\n    ) internal pure returns (uint256 amount) {\\n        if(total.shares == 0) {\\n            amount = shares;\\n        } else {\\n            amount = (shares * total.amount) / total.shares;\\n            if (roundUp && (amount * total.shares) / total.amount < shares) {\\n                amount = amount + 1;\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0xe14f04e2eccd9d2cf38d50ce10d20b463bc9c4ee336e54f09301b960163904ce\",\"license\":\"MIT\"},\"contracts/utils/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nabstract contract Constants {\\n    uint256 public constant BPS = 1e5; //Basis point, 1e5 means 5 decimals precision\\n    uint256 public constant PRECISION = 1e18; //18 decimals \\n    uint256 internal constant MIN_HEALTH_FACTOR = 1e18;\\n    uint256 internal constant FULL_LIQUIDATION_THRESHOLD = 0.9e18;\\n    uint256 internal constant LIQUIDATION_THRESHOLD = 8e4; //80%\\n    uint256 internal constant DEFAULT_LIQUIDATION_CLOSE = 5e4; //50%\\n    uint256 internal constant LIQUIDATION_REWARD = 5e3; //5%\\n\\n    uint256 internal constant NFT_LIQUIDATION_DISCOUNT = 1e4; //10%\\n    uint256 internal constant NFT_WARNING_DELAY = 24 hours;\\n    uint256 internal constant NFT_LIQUIDATOR_DELAY = 5 minutes;\\n\\n    //default interest if borrow = 0\\n    uint64 internal constant DEFAULT_INTEREST = 158247046; //0.5% annual rate 1e18 precision \\n    uint256 internal constant MAX_PROTOCOL_FEE = 0.5e4;\\n    uint256 public constant BLOCKS_PER_YEAR = 2102400; //Average ethereum blocks per year\\n}\\n\",\"keccak256\":\"0x298cf4930b6371254d50ea8c8b7f56d5b08733c98e6a0bb96b9f6619293aad1d\",\"license\":\"MIT\"},\"contracts/utils/Pausing.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Pausing is Ownable {\\n\\n    bool public globalPaused = true;\\n\\n    mapping (address vaulToken => bool status) vaultPaused;\\n\\n    error isPaused();\\n    error isNotPaused();\\n\\n    event SystemPaused(bool state);\\n    event VaultPaused(address vault, bool state);\\n\\n    function WhenPaused(address vault) internal view {\\n        if (!globalPaused && !vaultPaused[vault]) revert isNotPaused();\\n    }\\n\\n    function WhenNotPaused(address vault) internal view {\\n        if (pausedStatus(vault)) revert isPaused();\\n    }\\n\\n    function pausedStatus(address vault) public view returns (bool) {\\n        return globalPaused || vaultPaused[vault];\\n    }\\n\\n    function setPausedStatus(address vault, bool status) external onlyOwner {\\n        if (vault == address(0)) {\\n            // pass address(0) to pause/unpause all vaults\\n            globalPaused = status;\\n            emit SystemPaused(status);\\n        } else {\\n            vaultPaused[vault] = status;\\n            emit VaultPaused(vault, status);\\n        }\\n    }\\n}\",\"keccak256\":\"0x81a2b30a3beb064cef10f2a20b13a0ec0aba68330157592f49f95582d7d9d14c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/HydraPool.sol:HydraPool","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":7313,"contract":"contracts/HydraPool.sol:HydraPool","label":"globalPaused","offset":20,"slot":"0","type":"t_bool"},{"astId":7317,"contract":"contracts/HydraPool.sol:HydraPool","label":"vaultPaused","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":6652,"contract":"contracts/HydraPool.sol:HydraPool","label":"supportedERC20s","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"},{"astId":6655,"contract":"contracts/HydraPool.sol:HydraPool","label":"supportedNFTs","offset":0,"slot":"3","type":"t_array(t_address)dyn_storage"},{"astId":6660,"contract":"contracts/HydraPool.sol:HydraPool","label":"supportedToken","offset":0,"slot":"4","type":"t_mapping(t_address,t_struct(SupportedToken)6835_storage)"},{"astId":6481,"contract":"contracts/HydraPool.sol:HydraPool","label":"depositedNFTs","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)3534_storage))"},{"astId":3702,"contract":"contracts/HydraPool.sol:HydraPool","label":"vaults","offset":0,"slot":"6","type":"t_mapping(t_address,t_struct(TokenVault)6855_storage)"},{"astId":3709,"contract":"contracts/HydraPool.sol:HydraPool","label":"userShares","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_struct(AccountShares)6840_storage))"},{"astId":3718,"contract":"contracts/HydraPool.sol:HydraPool","label":"nftLiquidationWarning","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(LiquidatedWarning)6881_storage)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(TokenType)6827":{"encoding":"inplace","label":"enum Structs.TokenType","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(LiquidatedWarning)6881_storage)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning)))","numberOfBytes":"32","value":"t_mapping(t_address,t_mapping(t_uint256,t_struct(LiquidatedWarning)6881_storage))"},"t_mapping(t_address,t_mapping(t_address,t_struct(AccountShares)6840_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => struct Structs.AccountShares))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(AccountShares)6840_storage)"},"t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)3534_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => struct EnumerableSet.UintSet))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(UintSet)3534_storage)"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(LiquidatedWarning)6881_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Structs.LiquidatedWarning))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(LiquidatedWarning)6881_storage)"},"t_mapping(t_address,t_struct(AccountShares)6840_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Structs.AccountShares)","numberOfBytes":"32","value":"t_struct(AccountShares)6840_storage"},"t_mapping(t_address,t_struct(SupportedToken)6835_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Structs.SupportedToken)","numberOfBytes":"32","value":"t_struct(SupportedToken)6835_storage"},"t_mapping(t_address,t_struct(TokenVault)6855_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Structs.TokenVault)","numberOfBytes":"32","value":"t_struct(TokenVault)6855_storage"},"t_mapping(t_address,t_struct(UintSet)3534_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct EnumerableSet.UintSet)","numberOfBytes":"32","value":"t_struct(UintSet)3534_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(LiquidatedWarning)6881_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Structs.LiquidatedWarning)","numberOfBytes":"32","value":"t_struct(LiquidatedWarning)6881_storage"},"t_struct(AccountShares)6840_storage":{"encoding":"inplace","label":"struct Structs.AccountShares","members":[{"astId":6837,"contract":"contracts/HydraPool.sol:HydraPool","label":"collateral","offset":0,"slot":"0","type":"t_uint256"},{"astId":6839,"contract":"contracts/HydraPool.sol:HydraPool","label":"borrow","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(LiquidatedWarning)6881_storage":{"encoding":"inplace","label":"struct Structs.LiquidatedWarning","members":[{"astId":6878,"contract":"contracts/HydraPool.sol:HydraPool","label":"liquidator","offset":0,"slot":"0","type":"t_address"},{"astId":6880,"contract":"contracts/HydraPool.sol:HydraPool","label":"liquidationTimestamp","offset":20,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(Set)3062_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":3057,"contract":"contracts/HydraPool.sol:HydraPool","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":3061,"contract":"contracts/HydraPool.sol:HydraPool","label":"_positions","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(SupportedToken)6835_storage":{"encoding":"inplace","label":"struct Structs.SupportedToken","members":[{"astId":6829,"contract":"contracts/HydraPool.sol:HydraPool","label":"usdPriceFeed","offset":0,"slot":"0","type":"t_address"},{"astId":6832,"contract":"contracts/HydraPool.sol:HydraPool","label":"tokenType","offset":20,"slot":"0","type":"t_enum(TokenType)6827"},{"astId":6834,"contract":"contracts/HydraPool.sol:HydraPool","label":"supported","offset":21,"slot":"0","type":"t_bool"}],"numberOfBytes":"32"},"t_struct(TokenVault)6855_storage":{"encoding":"inplace","label":"struct Structs.TokenVault","members":[{"astId":6848,"contract":"contracts/HydraPool.sol:HydraPool","label":"totalAsset","offset":0,"slot":"0","type":"t_struct(Vault)6845_storage"},{"astId":6851,"contract":"contracts/HydraPool.sol:HydraPool","label":"totalBorrow","offset":0,"slot":"2","type":"t_struct(Vault)6845_storage"},{"astId":6854,"contract":"contracts/HydraPool.sol:HydraPool","label":"vaultInfo","offset":0,"slot":"4","type":"t_struct(VaultInfo)6876_storage"}],"numberOfBytes":"256"},"t_struct(UintSet)3534_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":3533,"contract":"contracts/HydraPool.sol:HydraPool","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)3062_storage"}],"numberOfBytes":"64"},"t_struct(Vault)6845_storage":{"encoding":"inplace","label":"struct Structs.Vault","members":[{"astId":6842,"contract":"contracts/HydraPool.sol:HydraPool","label":"amount","offset":0,"slot":"0","type":"t_uint256"},{"astId":6844,"contract":"contracts/HydraPool.sol:HydraPool","label":"shares","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(VaultInfo)6876_storage":{"encoding":"inplace","label":"struct Structs.VaultInfo","members":[{"astId":6857,"contract":"contracts/HydraPool.sol:HydraPool","label":"reserveRatio","offset":0,"slot":"0","type":"t_uint256"},{"astId":6859,"contract":"contracts/HydraPool.sol:HydraPool","label":"feeToProtocolRate","offset":0,"slot":"1","type":"t_uint64"},{"astId":6861,"contract":"contracts/HydraPool.sol:HydraPool","label":"flashFeeRate","offset":8,"slot":"1","type":"t_uint64"},{"astId":6863,"contract":"contracts/HydraPool.sol:HydraPool","label":"ratePerSec","offset":16,"slot":"1","type":"t_uint64"},{"astId":6865,"contract":"contracts/HydraPool.sol:HydraPool","label":"lastTimestamp","offset":24,"slot":"1","type":"t_uint64"},{"astId":6867,"contract":"contracts/HydraPool.sol:HydraPool","label":"lastBlock","offset":0,"slot":"2","type":"t_uint64"},{"astId":6869,"contract":"contracts/HydraPool.sol:HydraPool","label":"baseRate","offset":8,"slot":"2","type":"t_uint64"},{"astId":6871,"contract":"contracts/HydraPool.sol:HydraPool","label":"slope1","offset":16,"slot":"2","type":"t_uint64"},{"astId":6873,"contract":"contracts/HydraPool.sol:HydraPool","label":"slope2","offset":24,"slot":"2","type":"t_uint64"},{"astId":6875,"contract":"contracts/HydraPool.sol:HydraPool","label":"optimalUtilization","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NFTPledging.sol":{"NFTPledging":{"abi":[{"inputs":[],"name":"AlreadySupported","type":"error"},{"inputs":[],"name":"InvalidNFT","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[{"internalType":"enum Structs.TokenType","name":"tokenType","type":"uint8"}],"name":"InvalidTokenType","type":"error"},{"inputs":[],"name":"TokenNotSupported","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"enum Structs.TokenType","name":"tokenType","type":"uint8"}],"name":"AddSupportedToken","type":"event"},{"inputs":[],"name":"BLOCKS_PER_YEAR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"}],"name":"getDepositedNFT","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"}],"name":"getDepositedNFTCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"hasDepositedNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506107aa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b4240c991161005b578063b4240c9914610142578063d02641a014610155578063d37db1d214610168578063f6aa13f21461017257600080fd5b8063150b7a021461008d578063249d39e9146100fb578063351b14a014610113578063aaf5eb6814610133575b600080fd5b6100c561009b366004610458565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b610105620186a081565b6040519081526020016100f2565b6101266101213660046104f3565b610195565b6040516100f29190610526565b610105670de0b6b3a764000081565b6101056101503660046104f3565b6101cf565b61010561016336600461056a565b6101ff565b6101056220148081565b610185610180366004610585565b61026b565b60405190151581526020016100f2565b6001600160a01b0380831660009081526003602090815260408083209385168352929052206060906101c6906102a4565b90505b92915050565b6001600160a01b03808316600090815260036020908152604080832093851683529290529081206101c6906102b1565b6001600160a01b0381166000908152600260205260408120547501000000000000000000000000000000000000000000900460ff1661024057506000919050565b6001600160a01b0380831660009081526002602052604090205416610264816102bb565b9392505050565b6001600160a01b038084166000908152600360209081526040808320938616835292905290812061029c90836103c8565b949350505050565b60606000610264836103e0565b60006101c9825490565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032591906105db565b94509450509350935060008313158061033c575081155b8061035e57508369ffffffffffffffffffff168169ffffffffffffffffffff16105b806103735750611c20610371834261065a565b115b156103a9576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b4600a80610751565b6103be908461075d565b9695505050505050565b600081815260018301602052604081205415156101c6565b60608160000180548060200260200160405190810160405280929190818152602001828054801561043057602002820191906000526020600020905b81548152602001906001019080831161041c575b50505050509050919050565b80356001600160a01b038116811461045357600080fd5b919050565b60008060008060006080868803121561047057600080fd5b6104798661043c565b94506104876020870161043c565b935060408601359250606086013567ffffffffffffffff808211156104ab57600080fd5b818801915088601f8301126104bf57600080fd5b8135818111156104ce57600080fd5b8960208285010111156104e057600080fd5b9699959850939650602001949392505050565b6000806040838503121561050657600080fd5b61050f8361043c565b915061051d6020840161043c565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561055e57835183529284019291840191600101610542565b50909695505050505050565b60006020828403121561057c57600080fd5b6101c68261043c565b60008060006060848603121561059a57600080fd5b6105a38461043c565b92506105b16020850161043c565b9150604084013590509250925092565b805169ffffffffffffffffffff8116811461045357600080fd5b600080600080600060a086880312156105f357600080fd5b6105fc866105c1565b945060208601519350604086015192506060860151915061061f608087016105c1565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156101c9576101c961062b565b600181815b808511156106a857816000190482111561068e5761068e61062b565b8085161561069b57918102915b93841c9390800290610672565b509250929050565b6000826106bf575060016101c9565b816106cc575060006101c9565b81600181146106e257600281146106ec57610708565b60019150506101c9565b60ff8411156106fd576106fd61062b565b50506001821b6101c9565b5060208310610133831016604e8410600b841016171561072b575081810a6101c9565b610735838361066d565b80600019048211156107495761074961062b565b029392505050565b60006101c683836106b0565b80820281158282048414176101c9576101c961062b56fea2646970667358221220cf007ae2f09425d03fc19a18ed411153b978cb0ad655fa7a170a44ee4952348e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7AA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4240C99 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB4240C99 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xD37DB1D2 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xF6AA13F2 EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x249D39E9 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x351B14A0 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x458 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x105 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x105 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x105 PUSH3 0x201480 DUP2 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x1C6 SWAP1 PUSH2 0x2A4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0x1C6 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x264 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0x29C SWAP1 DUP4 PUSH2 0x3C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x264 DUP4 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SGT ISZERO DUP1 PUSH2 0x33C JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x35E JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x1C20 PUSH2 0x371 DUP4 TIMESTAMP PUSH2 0x65A JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH31 0xBFC92100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B4 PUSH1 0xA DUP1 PUSH2 0x751 JUMP JUMPDEST PUSH2 0x3BE SWAP1 DUP5 PUSH2 0x75D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x41C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x479 DUP7 PUSH2 0x43C JUMP JUMPDEST SWAP5 POP PUSH2 0x487 PUSH1 0x20 DUP8 ADD PUSH2 0x43C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50F DUP4 PUSH2 0x43C JUMP JUMPDEST SWAP2 POP PUSH2 0x51D PUSH1 0x20 DUP5 ADD PUSH2 0x43C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x55E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x542 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6 DUP3 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A3 DUP5 PUSH2 0x43C JUMP JUMPDEST SWAP3 POP PUSH2 0x5B1 PUSH1 0x20 DUP6 ADD PUSH2 0x43C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FC DUP7 PUSH2 0x5C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x61F PUSH1 0x80 DUP8 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x1C9 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x6A8 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x68E JUMPI PUSH2 0x68E PUSH2 0x62B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x69B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x672 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6BF JUMPI POP PUSH1 0x1 PUSH2 0x1C9 JUMP JUMPDEST DUP2 PUSH2 0x6CC JUMPI POP PUSH1 0x0 PUSH2 0x1C9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x6E2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x6EC JUMPI PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x6FD JUMPI PUSH2 0x6FD PUSH2 0x62B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1C9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x72B JUMPI POP DUP2 DUP2 EXP PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x735 DUP4 DUP4 PUSH2 0x66D JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x749 JUMPI PUSH2 0x749 PUSH2 0x62B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C9 JUMPI PUSH2 0x1C9 PUSH2 0x62B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF STOP PUSH27 0xE2F09425D03FC19A18ED411153B978CB0AD655FA7A170A44EE4952 CALLVALUE DUP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"339:1732:17:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BLOCKS_PER_YEAR_7304":{"entryPoint":null,"id":7304,"parameterSlots":0,"returnSlots":0},"@BPS_7268":{"entryPoint":null,"id":7268,"parameterSlots":0,"returnSlots":0},"@PRECISION_7271":{"entryPoint":null,"id":7271,"parameterSlots":0,"returnSlots":0},"@_contains_3207":{"entryPoint":null,"id":3207,"parameterSlots":2,"returnSlots":1},"@_length_3221":{"entryPoint":null,"id":3221,"parameterSlots":1,"returnSlots":1},"@_values_3252":{"entryPoint":992,"id":3252,"parameterSlots":1,"returnSlots":1},"@contains_3597":{"entryPoint":968,"id":3597,"parameterSlots":2,"returnSlots":1},"@getDepositedNFTCount_6617":{"entryPoint":463,"id":6617,"parameterSlots":2,"returnSlots":1},"@getDepositedNFT_6599":{"entryPoint":405,"id":6599,"parameterSlots":2,"returnSlots":1},"@getPrice_6963":{"entryPoint":699,"id":6963,"parameterSlots":1,"returnSlots":1},"@getTokenPrice_6784":{"entryPoint":511,"id":6784,"parameterSlots":1,"returnSlots":1},"@hasDepositedNFT_6580":{"entryPoint":619,"id":6580,"parameterSlots":3,"returnSlots":1},"@length_3612":{"entryPoint":689,"id":3612,"parameterSlots":1,"returnSlots":1},"@onERC721Received_6636":{"entryPoint":null,"id":6636,"parameterSlots":5,"returnSlots":1},"@values_3663":{"entryPoint":676,"id":3663,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":1084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1267,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1413,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":1112,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":1499,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint80_fromMemory":{"entryPoint":1473,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1645,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":1873,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1712,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1885,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1626,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1579,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5609:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:27","statements":[{"nodeType":"YulAssignment","src":"73:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:27"},"nodeType":"YulFunctionCall","src":"82:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:27"}]},{"body":{"nodeType":"YulBlock","src":"188:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:27"},"nodeType":"YulFunctionCall","src":"190:12:27"},"nodeType":"YulExpressionStatement","src":"190:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:27"},"nodeType":"YulFunctionCall","src":"131:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:27"},"nodeType":"YulFunctionCall","src":"121:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:27"},"nodeType":"YulFunctionCall","src":"114:73:27"},"nodeType":"YulIf","src":"111:93:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:27","type":""}],"src":"14:196:27"},{"body":{"nodeType":"YulBlock","src":"355:668:27","statements":[{"body":{"nodeType":"YulBlock","src":"402:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"411:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"414:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"404:6:27"},"nodeType":"YulFunctionCall","src":"404:12:27"},"nodeType":"YulExpressionStatement","src":"404:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"376:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"385:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"372:3:27"},"nodeType":"YulFunctionCall","src":"372:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"397:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"368:3:27"},"nodeType":"YulFunctionCall","src":"368:33:27"},"nodeType":"YulIf","src":"365:53:27"},{"nodeType":"YulAssignment","src":"427:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"456:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"437:18:27"},"nodeType":"YulFunctionCall","src":"437:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"427:6:27"}]},{"nodeType":"YulAssignment","src":"475:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"508:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"519:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"504:3:27"},"nodeType":"YulFunctionCall","src":"504:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"485:18:27"},"nodeType":"YulFunctionCall","src":"485:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"475:6:27"}]},{"nodeType":"YulAssignment","src":"532:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"570:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:27"},"nodeType":"YulFunctionCall","src":"555:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"542:12:27"},"nodeType":"YulFunctionCall","src":"542:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"532:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"583:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"625:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"610:3:27"},"nodeType":"YulFunctionCall","src":"610:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"597:12:27"},"nodeType":"YulFunctionCall","src":"597:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"587:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"638:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"648:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"642:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"702:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"705:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"695:6:27"},"nodeType":"YulFunctionCall","src":"695:12:27"},"nodeType":"YulExpressionStatement","src":"695:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"681:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"689:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"678:2:27"},"nodeType":"YulFunctionCall","src":"678:14:27"},"nodeType":"YulIf","src":"675:34:27"},{"nodeType":"YulVariableDeclaration","src":"718:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"732:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"743:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:27"},"nodeType":"YulFunctionCall","src":"728:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"722:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"798:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:27"},"nodeType":"YulFunctionCall","src":"800:12:27"},"nodeType":"YulExpressionStatement","src":"800:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"777:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"781:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"773:3:27"},"nodeType":"YulFunctionCall","src":"773:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"788:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:27"},"nodeType":"YulFunctionCall","src":"769:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"762:6:27"},"nodeType":"YulFunctionCall","src":"762:35:27"},"nodeType":"YulIf","src":"759:55:27"},{"nodeType":"YulVariableDeclaration","src":"823:30:27","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"850:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"837:12:27"},"nodeType":"YulFunctionCall","src":"837:16:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"827:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"880:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"889:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"892:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"882:6:27"},"nodeType":"YulFunctionCall","src":"882:12:27"},"nodeType":"YulExpressionStatement","src":"882:12:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"868:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"876:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"865:2:27"},"nodeType":"YulFunctionCall","src":"865:14:27"},"nodeType":"YulIf","src":"862:34:27"},{"body":{"nodeType":"YulBlock","src":"946:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"955:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"958:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"948:6:27"},"nodeType":"YulFunctionCall","src":"948:12:27"},"nodeType":"YulExpressionStatement","src":"948:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"919:2:27"},{"name":"length","nodeType":"YulIdentifier","src":"923:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"915:3:27"},"nodeType":"YulFunctionCall","src":"915:15:27"},{"kind":"number","nodeType":"YulLiteral","src":"932:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"911:3:27"},"nodeType":"YulFunctionCall","src":"911:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"937:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"908:2:27"},"nodeType":"YulFunctionCall","src":"908:37:27"},"nodeType":"YulIf","src":"905:57:27"},{"nodeType":"YulAssignment","src":"971:21:27","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"985:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:27"},"nodeType":"YulFunctionCall","src":"981:11:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"971:6:27"}]},{"nodeType":"YulAssignment","src":"1001:16:27","value":{"name":"length","nodeType":"YulIdentifier","src":"1011:6:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1001:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"289:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"300:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"312:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"320:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"328:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"336:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"344:6:27","type":""}],"src":"215:808:27"},{"body":{"nodeType":"YulBlock","src":"1127:149:27","statements":[{"nodeType":"YulAssignment","src":"1137:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1149:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1160:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1145:3:27"},"nodeType":"YulFunctionCall","src":"1145:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1137:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1179:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1194:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1202:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1190:3:27"},"nodeType":"YulFunctionCall","src":"1190:79:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1172:6:27"},"nodeType":"YulFunctionCall","src":"1172:98:27"},"nodeType":"YulExpressionStatement","src":"1172:98:27"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1096:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1107:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1118:4:27","type":""}],"src":"1028:248:27"},{"body":{"nodeType":"YulBlock","src":"1382:76:27","statements":[{"nodeType":"YulAssignment","src":"1392:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1404:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1415:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1400:3:27"},"nodeType":"YulFunctionCall","src":"1400:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1392:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1434:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1445:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1427:6:27"},"nodeType":"YulFunctionCall","src":"1427:25:27"},"nodeType":"YulExpressionStatement","src":"1427:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1351:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1362:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1373:4:27","type":""}],"src":"1281:177:27"},{"body":{"nodeType":"YulBlock","src":"1550:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"1596:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1605:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1608:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1598:6:27"},"nodeType":"YulFunctionCall","src":"1598:12:27"},"nodeType":"YulExpressionStatement","src":"1598:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1571:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1580:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1567:3:27"},"nodeType":"YulFunctionCall","src":"1567:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1592:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1563:3:27"},"nodeType":"YulFunctionCall","src":"1563:32:27"},"nodeType":"YulIf","src":"1560:52:27"},{"nodeType":"YulAssignment","src":"1621:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1650:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1631:18:27"},"nodeType":"YulFunctionCall","src":"1631:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1621:6:27"}]},{"nodeType":"YulAssignment","src":"1669:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1702:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1713:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1698:3:27"},"nodeType":"YulFunctionCall","src":"1698:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1679:18:27"},"nodeType":"YulFunctionCall","src":"1679:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1669:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1508:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1519:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1531:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1539:6:27","type":""}],"src":"1463:260:27"},{"body":{"nodeType":"YulBlock","src":"1879:481:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1889:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1899:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1893:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1910:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1928:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1939:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1924:3:27"},"nodeType":"YulFunctionCall","src":"1924:18:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1914:6:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1958:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1969:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1951:6:27"},"nodeType":"YulFunctionCall","src":"1951:21:27"},"nodeType":"YulExpressionStatement","src":"1951:21:27"},{"nodeType":"YulVariableDeclaration","src":"1981:17:27","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1992:6:27"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1985:3:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2007:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2027:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2021:5:27"},"nodeType":"YulFunctionCall","src":"2021:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2011:6:27","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2050:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"2058:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2043:6:27"},"nodeType":"YulFunctionCall","src":"2043:22:27"},"nodeType":"YulExpressionStatement","src":"2043:22:27"},{"nodeType":"YulAssignment","src":"2074:25:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2085:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2096:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2081:3:27"},"nodeType":"YulFunctionCall","src":"2081:18:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2074:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"2108:29:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2126:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2134:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:27"},"nodeType":"YulFunctionCall","src":"2122:15:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2112:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2146:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2155:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2150:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2214:120:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2235:3:27"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2246:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2240:5:27"},"nodeType":"YulFunctionCall","src":"2240:13:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2228:6:27"},"nodeType":"YulFunctionCall","src":"2228:26:27"},"nodeType":"YulExpressionStatement","src":"2228:26:27"},{"nodeType":"YulAssignment","src":"2267:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2278:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2283:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:27"},"nodeType":"YulFunctionCall","src":"2274:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2267:3:27"}]},{"nodeType":"YulAssignment","src":"2299:25:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2313:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2321:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:27"},"nodeType":"YulFunctionCall","src":"2309:15:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2299:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2176:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2179:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2173:2:27"},"nodeType":"YulFunctionCall","src":"2173:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2187:18:27","statements":[{"nodeType":"YulAssignment","src":"2189:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2198:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"2201:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2194:3:27"},"nodeType":"YulFunctionCall","src":"2194:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2189:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"2169:3:27","statements":[]},"src":"2165:169:27"},{"nodeType":"YulAssignment","src":"2343:11:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"2351:3:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2343:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1848:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1859:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1870:4:27","type":""}],"src":"1728:632:27"},{"body":{"nodeType":"YulBlock","src":"2435:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"2481:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2490:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2493:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2483:6:27"},"nodeType":"YulFunctionCall","src":"2483:12:27"},"nodeType":"YulExpressionStatement","src":"2483:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2456:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2465:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2452:3:27"},"nodeType":"YulFunctionCall","src":"2452:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2477:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2448:3:27"},"nodeType":"YulFunctionCall","src":"2448:32:27"},"nodeType":"YulIf","src":"2445:52:27"},{"nodeType":"YulAssignment","src":"2506:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2535:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2516:18:27"},"nodeType":"YulFunctionCall","src":"2516:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2506:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2401:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2412:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2424:6:27","type":""}],"src":"2365:186:27"},{"body":{"nodeType":"YulBlock","src":"2660:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"2706:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2715:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2718:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2708:6:27"},"nodeType":"YulFunctionCall","src":"2708:12:27"},"nodeType":"YulExpressionStatement","src":"2708:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2681:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2690:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2677:3:27"},"nodeType":"YulFunctionCall","src":"2677:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2702:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2673:3:27"},"nodeType":"YulFunctionCall","src":"2673:32:27"},"nodeType":"YulIf","src":"2670:52:27"},{"nodeType":"YulAssignment","src":"2731:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2741:18:27"},"nodeType":"YulFunctionCall","src":"2741:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2731:6:27"}]},{"nodeType":"YulAssignment","src":"2779:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2812:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2823:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2808:3:27"},"nodeType":"YulFunctionCall","src":"2808:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2789:18:27"},"nodeType":"YulFunctionCall","src":"2789:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2779:6:27"}]},{"nodeType":"YulAssignment","src":"2836:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2863:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2874:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2859:3:27"},"nodeType":"YulFunctionCall","src":"2859:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2846:12:27"},"nodeType":"YulFunctionCall","src":"2846:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2836:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2610:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2621:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2633:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2641:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2649:6:27","type":""}],"src":"2556:328:27"},{"body":{"nodeType":"YulBlock","src":"2984:92:27","statements":[{"nodeType":"YulAssignment","src":"2994:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3006:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3017:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3002:3:27"},"nodeType":"YulFunctionCall","src":"3002:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2994:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3036:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3061:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3054:6:27"},"nodeType":"YulFunctionCall","src":"3054:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:27"},"nodeType":"YulFunctionCall","src":"3047:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3029:6:27"},"nodeType":"YulFunctionCall","src":"3029:41:27"},"nodeType":"YulExpressionStatement","src":"3029:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2953:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2964:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2975:4:27","type":""}],"src":"2889:187:27"},{"body":{"nodeType":"YulBlock","src":"3140:120:27","statements":[{"nodeType":"YulAssignment","src":"3150:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3165:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3159:5:27"},"nodeType":"YulFunctionCall","src":"3159:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3150:5:27"}]},{"body":{"nodeType":"YulBlock","src":"3238:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3247:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3250:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3240:6:27"},"nodeType":"YulFunctionCall","src":"3240:12:27"},"nodeType":"YulExpressionStatement","src":"3240:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3194:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3205:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3212:22:27","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3201:3:27"},"nodeType":"YulFunctionCall","src":"3201:34:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3191:2:27"},"nodeType":"YulFunctionCall","src":"3191:45:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3184:6:27"},"nodeType":"YulFunctionCall","src":"3184:53:27"},"nodeType":"YulIf","src":"3181:73:27"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3119:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3130:5:27","type":""}],"src":"3081:179:27"},{"body":{"nodeType":"YulBlock","src":"3411:327:27","statements":[{"body":{"nodeType":"YulBlock","src":"3458:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3467:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3470:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3460:6:27"},"nodeType":"YulFunctionCall","src":"3460:12:27"},"nodeType":"YulExpressionStatement","src":"3460:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3441:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3428:3:27"},"nodeType":"YulFunctionCall","src":"3428:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3453:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3424:3:27"},"nodeType":"YulFunctionCall","src":"3424:33:27"},"nodeType":"YulIf","src":"3421:53:27"},{"nodeType":"YulAssignment","src":"3483:49:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3522:9:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"3493:28:27"},"nodeType":"YulFunctionCall","src":"3493:39:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3483:6:27"}]},{"nodeType":"YulAssignment","src":"3541:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3561:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3572:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3557:3:27"},"nodeType":"YulFunctionCall","src":"3557:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3551:5:27"},"nodeType":"YulFunctionCall","src":"3551:25:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3541:6:27"}]},{"nodeType":"YulAssignment","src":"3585:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3605:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3616:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3601:3:27"},"nodeType":"YulFunctionCall","src":"3601:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3595:5:27"},"nodeType":"YulFunctionCall","src":"3595:25:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3585:6:27"}]},{"nodeType":"YulAssignment","src":"3629:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3649:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3660:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3645:3:27"},"nodeType":"YulFunctionCall","src":"3645:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3639:5:27"},"nodeType":"YulFunctionCall","src":"3639:25:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3629:6:27"}]},{"nodeType":"YulAssignment","src":"3673:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3716:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3727:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3712:3:27"},"nodeType":"YulFunctionCall","src":"3712:19:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"3683:28:27"},"nodeType":"YulFunctionCall","src":"3683:49:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3673:6:27"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3345:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3356:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3368:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3376:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3384:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3392:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3400:6:27","type":""}],"src":"3265:473:27"},{"body":{"nodeType":"YulBlock","src":"3775:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3792:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3795:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3785:6:27"},"nodeType":"YulFunctionCall","src":"3785:88:27"},"nodeType":"YulExpressionStatement","src":"3785:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3889:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3892:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3882:6:27"},"nodeType":"YulFunctionCall","src":"3882:15:27"},"nodeType":"YulExpressionStatement","src":"3882:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3913:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3916:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3906:6:27"},"nodeType":"YulFunctionCall","src":"3906:15:27"},"nodeType":"YulExpressionStatement","src":"3906:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3743:184:27"},{"body":{"nodeType":"YulBlock","src":"3981:79:27","statements":[{"nodeType":"YulAssignment","src":"3991:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4003:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"4006:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3999:3:27"},"nodeType":"YulFunctionCall","src":"3999:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3991:4:27"}]},{"body":{"nodeType":"YulBlock","src":"4032:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4034:16:27"},"nodeType":"YulFunctionCall","src":"4034:18:27"},"nodeType":"YulExpressionStatement","src":"4034:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4023:4:27"},{"name":"x","nodeType":"YulIdentifier","src":"4029:1:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4020:2:27"},"nodeType":"YulFunctionCall","src":"4020:11:27"},"nodeType":"YulIf","src":"4017:37:27"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3963:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"3966:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3972:4:27","type":""}],"src":"3932:128:27"},{"body":{"nodeType":"YulBlock","src":"4129:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4139:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4154:1:27","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"4143:7:27","type":""}]},{"nodeType":"YulAssignment","src":"4164:16:27","value":{"name":"power_1","nodeType":"YulIdentifier","src":"4173:7:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4164:5:27"}]},{"nodeType":"YulAssignment","src":"4189:13:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"4197:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4189:4:27"}]},{"body":{"nodeType":"YulBlock","src":"4253:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"4298:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4300:16:27"},"nodeType":"YulFunctionCall","src":"4300:18:27"},"nodeType":"YulExpressionStatement","src":"4300:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4273:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4287:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4283:3:27"},"nodeType":"YulFunctionCall","src":"4283:6:27"},{"name":"base","nodeType":"YulIdentifier","src":"4291:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4279:3:27"},"nodeType":"YulFunctionCall","src":"4279:17:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4270:2:27"},"nodeType":"YulFunctionCall","src":"4270:27:27"},"nodeType":"YulIf","src":"4267:53:27"},{"body":{"nodeType":"YulBlock","src":"4359:29:27","statements":[{"nodeType":"YulAssignment","src":"4361:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"4374:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"4381:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4370:3:27"},"nodeType":"YulFunctionCall","src":"4370:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4361:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4340:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"4350:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4336:3:27"},"nodeType":"YulFunctionCall","src":"4336:22:27"},"nodeType":"YulIf","src":"4333:55:27"},{"nodeType":"YulAssignment","src":"4401:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4413:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"4419:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4409:3:27"},"nodeType":"YulFunctionCall","src":"4409:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4401:4:27"}]},{"nodeType":"YulAssignment","src":"4437:34:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4453:7:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"4462:8:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4449:3:27"},"nodeType":"YulFunctionCall","src":"4449:22:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"4437:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4222:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"4232:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4219:2:27"},"nodeType":"YulFunctionCall","src":"4219:21:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4241:3:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"4215:3:27","statements":[]},"src":"4211:270:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"4093:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4100:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4113:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"4120:4:27","type":""}],"src":"4065:422:27"},{"body":{"nodeType":"YulBlock","src":"4551:747:27","statements":[{"body":{"nodeType":"YulBlock","src":"4589:52:27","statements":[{"nodeType":"YulAssignment","src":"4603:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4612:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4603:5:27"}]},{"nodeType":"YulLeave","src":"4626:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4571:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4564:6:27"},"nodeType":"YulFunctionCall","src":"4564:16:27"},"nodeType":"YulIf","src":"4561:80:27"},{"body":{"nodeType":"YulBlock","src":"4674:52:27","statements":[{"nodeType":"YulAssignment","src":"4688:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4697:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4688:5:27"}]},{"nodeType":"YulLeave","src":"4711:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4660:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4653:6:27"},"nodeType":"YulFunctionCall","src":"4653:12:27"},"nodeType":"YulIf","src":"4650:76:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"4762:52:27","statements":[{"nodeType":"YulAssignment","src":"4776:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4785:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4776:5:27"}]},{"nodeType":"YulLeave","src":"4799:5:27"}]},"nodeType":"YulCase","src":"4755:59:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4760:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4830:123:27","statements":[{"body":{"nodeType":"YulBlock","src":"4865:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4867:16:27"},"nodeType":"YulFunctionCall","src":"4867:18:27"},"nodeType":"YulExpressionStatement","src":"4867:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4850:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"4860:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4847:2:27"},"nodeType":"YulFunctionCall","src":"4847:17:27"},"nodeType":"YulIf","src":"4844:43:27"},{"nodeType":"YulAssignment","src":"4900:25:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4913:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"4923:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4909:3:27"},"nodeType":"YulFunctionCall","src":"4909:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4900:5:27"}]},{"nodeType":"YulLeave","src":"4938:5:27"}]},"nodeType":"YulCase","src":"4823:130:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4828:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"4742:4:27"},"nodeType":"YulSwitch","src":"4735:218:27"},{"body":{"nodeType":"YulBlock","src":"5051:70:27","statements":[{"nodeType":"YulAssignment","src":"5065:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5078:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"5084:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5074:3:27"},"nodeType":"YulFunctionCall","src":"5074:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5065:5:27"}]},{"nodeType":"YulLeave","src":"5106:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4975:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"4981:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4972:2:27"},"nodeType":"YulFunctionCall","src":"4972:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4989:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"4999:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4986:2:27"},"nodeType":"YulFunctionCall","src":"4986:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4968:3:27"},"nodeType":"YulFunctionCall","src":"4968:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5012:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5018:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5009:2:27"},"nodeType":"YulFunctionCall","src":"5009:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5027:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"5037:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5024:2:27"},"nodeType":"YulFunctionCall","src":"5024:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5005:3:27"},"nodeType":"YulFunctionCall","src":"5005:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4965:2:27"},"nodeType":"YulFunctionCall","src":"4965:77:27"},"nodeType":"YulIf","src":"4962:159:27"},{"nodeType":"YulVariableDeclaration","src":"5130:57:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5172:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"5178:8:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"5153:18:27"},"nodeType":"YulFunctionCall","src":"5153:34:27"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"5134:7:27","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"5143:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5232:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5234:16:27"},"nodeType":"YulFunctionCall","src":"5234:18:27"},"nodeType":"YulExpressionStatement","src":"5234:18:27"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5202:7:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5219:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5215:3:27"},"nodeType":"YulFunctionCall","src":"5215:6:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"5223:6:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5211:3:27"},"nodeType":"YulFunctionCall","src":"5211:19:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5199:2:27"},"nodeType":"YulFunctionCall","src":"5199:32:27"},"nodeType":"YulIf","src":"5196:58:27"},{"nodeType":"YulAssignment","src":"5263:29:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5276:7:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"5285:6:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5272:3:27"},"nodeType":"YulFunctionCall","src":"5272:20:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5263:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4522:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4528:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4541:5:27","type":""}],"src":"4492:806:27"},{"body":{"nodeType":"YulBlock","src":"5373:61:27","statements":[{"nodeType":"YulAssignment","src":"5383:45:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5413:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"5419:8:27"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"5392:20:27"},"nodeType":"YulFunctionCall","src":"5392:36:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5383:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"5344:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5350:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5363:5:27","type":""}],"src":"5303:131:27"},{"body":{"nodeType":"YulBlock","src":"5491:116:27","statements":[{"nodeType":"YulAssignment","src":"5501:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5516:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"5519:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5512:3:27"},"nodeType":"YulFunctionCall","src":"5512:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5501:7:27"}]},{"body":{"nodeType":"YulBlock","src":"5579:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5581:16:27"},"nodeType":"YulFunctionCall","src":"5581:18:27"},"nodeType":"YulExpressionStatement","src":"5581:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5550:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5543:6:27"},"nodeType":"YulFunctionCall","src":"5543:9:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5557:1:27"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5564:7:27"},{"name":"x","nodeType":"YulIdentifier","src":"5573:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5560:3:27"},"nodeType":"YulFunctionCall","src":"5560:15:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5554:2:27"},"nodeType":"YulFunctionCall","src":"5554:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5540:2:27"},"nodeType":"YulFunctionCall","src":"5540:37:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5533:6:27"},"nodeType":"YulFunctionCall","src":"5533:45:27"},"nodeType":"YulIf","src":"5530:71:27"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5470:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"5473:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5479:7:27","type":""}],"src":"5439:168:27"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c8063b4240c991161005b578063b4240c9914610142578063d02641a014610155578063d37db1d214610168578063f6aa13f21461017257600080fd5b8063150b7a021461008d578063249d39e9146100fb578063351b14a014610113578063aaf5eb6814610133575b600080fd5b6100c561009b366004610458565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b610105620186a081565b6040519081526020016100f2565b6101266101213660046104f3565b610195565b6040516100f29190610526565b610105670de0b6b3a764000081565b6101056101503660046104f3565b6101cf565b61010561016336600461056a565b6101ff565b6101056220148081565b610185610180366004610585565b61026b565b60405190151581526020016100f2565b6001600160a01b0380831660009081526003602090815260408083209385168352929052206060906101c6906102a4565b90505b92915050565b6001600160a01b03808316600090815260036020908152604080832093851683529290529081206101c6906102b1565b6001600160a01b0381166000908152600260205260408120547501000000000000000000000000000000000000000000900460ff1661024057506000919050565b6001600160a01b0380831660009081526002602052604090205416610264816102bb565b9392505050565b6001600160a01b038084166000908152600360209081526040808320938616835292905290812061029c90836103c8565b949350505050565b60606000610264836103e0565b60006101c9825490565b6000806000806000856001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032591906105db565b94509450509350935060008313158061033c575081155b8061035e57508369ffffffffffffffffffff168169ffffffffffffffffffff16105b806103735750611c20610371834261065a565b115b156103a9576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b4600a80610751565b6103be908461075d565b9695505050505050565b600081815260018301602052604081205415156101c6565b60608160000180548060200260200160405190810160405280929190818152602001828054801561043057602002820191906000526020600020905b81548152602001906001019080831161041c575b50505050509050919050565b80356001600160a01b038116811461045357600080fd5b919050565b60008060008060006080868803121561047057600080fd5b6104798661043c565b94506104876020870161043c565b935060408601359250606086013567ffffffffffffffff808211156104ab57600080fd5b818801915088601f8301126104bf57600080fd5b8135818111156104ce57600080fd5b8960208285010111156104e057600080fd5b9699959850939650602001949392505050565b6000806040838503121561050657600080fd5b61050f8361043c565b915061051d6020840161043c565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561055e57835183529284019291840191600101610542565b50909695505050505050565b60006020828403121561057c57600080fd5b6101c68261043c565b60008060006060848603121561059a57600080fd5b6105a38461043c565b92506105b16020850161043c565b9150604084013590509250925092565b805169ffffffffffffffffffff8116811461045357600080fd5b600080600080600060a086880312156105f357600080fd5b6105fc866105c1565b945060208601519350604086015192506060860151915061061f608087016105c1565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156101c9576101c961062b565b600181815b808511156106a857816000190482111561068e5761068e61062b565b8085161561069b57918102915b93841c9390800290610672565b509250929050565b6000826106bf575060016101c9565b816106cc575060006101c9565b81600181146106e257600281146106ec57610708565b60019150506101c9565b60ff8411156106fd576106fd61062b565b50506001821b6101c9565b5060208310610133831016604e8410600b841016171561072b575081810a6101c9565b610735838361066d565b80600019048211156107495761074961062b565b029392505050565b60006101c683836106b0565b80820281158282048414176101c9576101c961062b56fea2646970667358221220cf007ae2f09425d03fc19a18ed411153b978cb0ad655fa7a170a44ee4952348e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4240C99 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB4240C99 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xD37DB1D2 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xF6AA13F2 EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x249D39E9 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x351B14A0 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x458 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x105 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x105 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x105 PUSH3 0x201480 DUP2 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x1C6 SWAP1 PUSH2 0x2A4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0x1C6 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x264 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH2 0x29C SWAP1 DUP4 PUSH2 0x3C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x264 DUP4 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SGT ISZERO DUP1 PUSH2 0x33C JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x35E JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x1C20 PUSH2 0x371 DUP4 TIMESTAMP PUSH2 0x65A JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH31 0xBFC92100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B4 PUSH1 0xA DUP1 PUSH2 0x751 JUMP JUMPDEST PUSH2 0x3BE SWAP1 DUP5 PUSH2 0x75D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x41C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x479 DUP7 PUSH2 0x43C JUMP JUMPDEST SWAP5 POP PUSH2 0x487 PUSH1 0x20 DUP8 ADD PUSH2 0x43C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50F DUP4 PUSH2 0x43C JUMP JUMPDEST SWAP2 POP PUSH2 0x51D PUSH1 0x20 DUP5 ADD PUSH2 0x43C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x55E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x542 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6 DUP3 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A3 DUP5 PUSH2 0x43C JUMP JUMPDEST SWAP3 POP PUSH2 0x5B1 PUSH1 0x20 DUP6 ADD PUSH2 0x43C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5FC DUP7 PUSH2 0x5C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x61F PUSH1 0x80 DUP8 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x1C9 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x6A8 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x68E JUMPI PUSH2 0x68E PUSH2 0x62B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x69B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x672 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6BF JUMPI POP PUSH1 0x1 PUSH2 0x1C9 JUMP JUMPDEST DUP2 PUSH2 0x6CC JUMPI POP PUSH1 0x0 PUSH2 0x1C9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x6E2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x6EC JUMPI PUSH2 0x708 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x6FD JUMPI PUSH2 0x6FD PUSH2 0x62B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1C9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x72B JUMPI POP DUP2 DUP2 EXP PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x735 DUP4 DUP4 PUSH2 0x66D JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x749 JUMPI PUSH2 0x749 PUSH2 0x62B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C9 JUMPI PUSH2 0x1C9 PUSH2 0x62B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF STOP PUSH27 0xE2F09425D03FC19A18ED411153B978CB0AD655FA7A170A44EE4952 CALLVALUE DUP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"339:1732:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:212;;;;;;:::i;:::-;2021:41;1857:212;;;;;;;;;;;1202:66:27;1190:79;;;1172:98;;1160:2;1145:18;1857:212:17;;;;;;;;92:33:25;;122:3;92:33;;;;;1427:25:27;;;1415:2;1400:18;92:33:25;1281:177:27;1487:186:17;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;177:40:25:-;;213:4;177:40;;1679:172:17;;;;;;:::i;:::-;;:::i;1340:298:18:-;;;;;;:::i;:::-;;:::i;937:49:25:-;;979:7;937:49;;1273:208:17;;;;;;:::i;:::-;;:::i;:::-;;;3054:14:27;;3047:22;3029:41;;3017:2;3002:18;1273:208:17;2889:187:27;1487:186:17;-1:-1:-1;;;;;1625:20:17;;;;;;;:13;:20;;;;;;;;:32;;;;;;;;;1590:16;;1625:41;;:39;:41::i;:::-;1618:48;;1487:186;;;;;:::o;1679:172::-;-1:-1:-1;;;;;1803:20:17;;;1773:7;1803:20;;;:13;:20;;;;;;;;:32;;;;;;;;;;;:41;;:39;:41::i;1340:298:18:-;-1:-1:-1;;;;;1429:21:18;;1399:13;1429:21;;;:14;:21;;;;;:31;;;;;;1424:46;;-1:-1:-1;1469:1:18;;1340:298;-1:-1:-1;1340:298:18:o;1424:46::-;-1:-1:-1;;;;;1549:21:18;;;1480:31;1549:21;;;:14;:21;;;;;:34;;1611:20;1549:34;1611:18;:20::i;:::-;1603:28;1340:298;-1:-1:-1;;;1340:298:18:o;1273:208:17:-;-1:-1:-1;;;;;1424:20:17;;;1401:4;1424:20;;;:13;:20;;;;;;;;:32;;;;;;;;;;;:50;;1466:7;1424:41;:50::i;:::-;1417:57;1273:208;-1:-1:-1;;;;1273:208:17:o;12671:297:15:-;12731:16;12759:22;12784:19;12792:3;12784:7;:19::i;11542:112::-;11602:7;11628:19;11636:3;4556:18;;4474:107;329:550:21;417:13;456:14;484:13;525:17;556:20;589:9;-1:-1:-1;;;;;589:25:21;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;442:174;;;;;;;;;654:1;644:6;:11;;:41;;;-1:-1:-1;671:14:21;;644:41;:80;;;;717:7;701:23;;:13;:23;;;644:80;:134;;;-1:-1:-1;259:7:21;740:27;758:9;740:15;:27;:::i;:::-;:38;644:134;627:183;;;796:14;;;;;;;;;;;;;;627:183;847:25;320:2;;847:25;:::i;:::-;829:43;;837:6;829:43;:::i;:::-;821:51;329:550;-1:-1:-1;;;;;;329:550:21:o;11317:144:15:-;11394:4;4360:21;;;:14;;;:21;;;;;;:26;;11417:37;4264:129;5581:109;5637:16;5672:3;:11;;5665:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:109;;;:::o;14:196:27:-;82:20;;-1:-1:-1;;;;;131:54:27;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:808::-;312:6;320;328;336;344;397:3;385:9;376:7;372:23;368:33;365:53;;;414:1;411;404:12;365:53;437:29;456:9;437:29;:::i;:::-;427:39;;485:38;519:2;508:9;504:18;485:38;:::i;:::-;475:48;;570:2;559:9;555:18;542:32;532:42;;625:2;614:9;610:18;597:32;648:18;689:2;681:6;678:14;675:34;;;705:1;702;695:12;675:34;743:6;732:9;728:22;718:32;;788:7;781:4;777:2;773:13;769:27;759:55;;810:1;807;800:12;759:55;850:2;837:16;876:2;868:6;865:14;862:34;;;892:1;889;882:12;862:34;937:7;932:2;923:6;919:2;915:15;911:24;908:37;905:57;;;958:1;955;948:12;905:57;215:808;;;;-1:-1:-1;215:808:27;;-1:-1:-1;989:2:27;981:11;;1011:6;215:808;-1:-1:-1;;;215:808:27:o;1463:260::-;1531:6;1539;1592:2;1580:9;1571:7;1567:23;1563:32;1560:52;;;1608:1;1605;1598:12;1560:52;1631:29;1650:9;1631:29;:::i;:::-;1621:39;;1679:38;1713:2;1702:9;1698:18;1679:38;:::i;:::-;1669:48;;1463:260;;;;;:::o;1728:632::-;1899:2;1951:21;;;2021:13;;1924:18;;;2043:22;;;1870:4;;1899:2;2122:15;;;;2096:2;2081:18;;;1870:4;2165:169;2179:6;2176:1;2173:13;2165:169;;;2240:13;;2228:26;;2309:15;;;;2274:12;;;;2201:1;2194:9;2165:169;;;-1:-1:-1;2351:3:27;;1728:632;-1:-1:-1;;;;;;1728:632:27:o;2365:186::-;2424:6;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;2556:328::-;2633:6;2641;2649;2702:2;2690:9;2681:7;2677:23;2673:32;2670:52;;;2718:1;2715;2708:12;2670:52;2741:29;2760:9;2741:29;:::i;:::-;2731:39;;2789:38;2823:2;2812:9;2808:18;2789:38;:::i;:::-;2779:48;;2874:2;2863:9;2859:18;2846:32;2836:42;;2556:328;;;;;:::o;3081:179::-;3159:13;;3212:22;3201:34;;3191:45;;3181:73;;3250:1;3247;3240:12;3265:473;3368:6;3376;3384;3392;3400;3453:3;3441:9;3432:7;3428:23;3424:33;3421:53;;;3470:1;3467;3460:12;3421:53;3493:39;3522:9;3493:39;:::i;:::-;3483:49;;3572:2;3561:9;3557:18;3551:25;3541:35;;3616:2;3605:9;3601:18;3595:25;3585:35;;3660:2;3649:9;3645:18;3639:25;3629:35;;3683:49;3727:3;3716:9;3712:19;3683:49;:::i;:::-;3673:59;;3265:473;;;;;;;;:::o;3743:184::-;3795:77;3792:1;3785:88;3892:4;3889:1;3882:15;3916:4;3913:1;3906:15;3932:128;3999:9;;;4020:11;;;4017:37;;;4034:18;;:::i;4065:422::-;4154:1;4197:5;4154:1;4211:270;4232:7;4222:8;4219:21;4211:270;;;4291:4;4287:1;4283:6;4279:17;4273:4;4270:27;4267:53;;;4300:18;;:::i;:::-;4350:7;4340:8;4336:22;4333:55;;;4370:16;;;;4333:55;4449:22;;;;4409:15;;;;4211:270;;;4215:3;4065:422;;;;;:::o;4492:806::-;4541:5;4571:8;4561:80;;-1:-1:-1;4612:1:27;4626:5;;4561:80;4660:4;4650:76;;-1:-1:-1;4697:1:27;4711:5;;4650:76;4742:4;4760:1;4755:59;;;;4828:1;4823:130;;;;4735:218;;4755:59;4785:1;4776:10;;4799:5;;;4823:130;4860:3;4850:8;4847:17;4844:43;;;4867:18;;:::i;:::-;-1:-1:-1;;4923:1:27;4909:16;;4938:5;;4735:218;;5037:2;5027:8;5024:16;5018:3;5012:4;5009:13;5005:36;4999:2;4989:8;4986:16;4981:2;4975:4;4972:12;4968:35;4965:77;4962:159;;;-1:-1:-1;5074:19:27;;;5106:5;;4962:159;5153:34;5178:8;5172:4;5153:34;:::i;:::-;5223:6;5219:1;5215:6;5211:19;5202:7;5199:32;5196:58;;;5234:18;;:::i;:::-;5272:20;;4492:806;-1:-1:-1;;;4492:806:27:o;5303:131::-;5363:5;5392:36;5419:8;5413:4;5392:36;:::i;5439:168::-;5512:9;;;5543;;5560:15;;;5554:22;;5540:37;5530:71;;5581:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"392400","executionCost":"430","totalCost":"392830"},"external":{"BLOCKS_PER_YEAR()":"239","BPS()":"218","PRECISION()":"262","getDepositedNFT(address,address)":"infinite","getDepositedNFTCount(address,address)":"infinite","getTokenPrice(address)":"infinite","hasDepositedNFT(address,address,uint256)":"infinite","onERC721Received(address,address,uint256,bytes)":"infinite"},"internal":{"_depositNFT(address,uint256)":"infinite","_withdrawNft(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{"BLOCKS_PER_YEAR()":"d37db1d2","BPS()":"249d39e9","PRECISION()":"aaf5eb68","getDepositedNFT(address,address)":"351b14a0","getDepositedNFTCount(address,address)":"b4240c99","getTokenPrice(address)":"d02641a0","hasDepositedNFT(address,address,uint256)":"f6aa13f2","onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadySupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNFT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Structs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Structs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"AddSupportedToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCKS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"getDepositedNFT\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"getDepositedNFTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasDepositedNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTPledging.sol\":\"NFTPledging\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\"},\"contracts/NFTPledging.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport {TokenSupporter} from \\\"./TokenSupporter.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"./interfaces/Structs.sol\\\";\\n\\ncontract NFTPledging is TokenSupporter, IERC721Receiver {\\n    using EnumerableSet for EnumerableSet.UintSet;\\n\\n    error InvalidNFT();\\n\\n    mapping(address user => mapping(address nft => EnumerableSet.UintSet tokenIds)) depositedNFTs;\\n\\n    function _depositNFT(address nftAddress, uint256 tokenId) internal {\\n        allowedToken(nftAddress);\\n        IERC721(nftAddress).safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            tokenId\\n        );\\n        depositedNFTs[msg.sender][nftAddress].add(tokenId);\\n    }\\n\\n    function _withdrawNft(\\n        address owner,\\n        address recipient,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) internal {\\n        if (!hasDepositedNFT(owner, nftAddress, tokenId)) revert InvalidNFT();\\n        depositedNFTs[owner][nftAddress].remove(tokenId);\\n        IERC721(nftAddress).safeTransferFrom(\\n            address(this), recipient, tokenId\\n        );\\n    }\\n\\n    function hasDepositedNFT(\\n        address owner,\\n        address nftAddress,\\n        uint256 tokenId\\n    ) public view returns (bool) {\\n        return depositedNFTs[owner][nftAddress].contains(tokenId);\\n    }\\n\\n    function getDepositedNFT(\\n        address owner,\\n        address nftAddress\\n    ) public view returns (uint256[] memory) {\\n        return depositedNFTs[owner][nftAddress].values();\\n    }\\n\\n    function getDepositedNFTCount(address owner, address nftAddress)\\n        public view returns (uint256) {\\n            return depositedNFTs[owner][nftAddress].length();\\n    }\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure override returns (bytes4) {\\n        return IERC721Receiver.onERC721Received.selector;\\n    }\\n}\",\"keccak256\":\"0x36ba932fb97912d7f6f57b522f84885c53a6b7bb82dec1d3486aa54a97e16f5a\",\"license\":\"MIT\"},\"contracts/TokenSupporter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./libraries/ChainlinkOracle.sol\\\";\\nimport \\\"./interfaces/Structs.sol\\\";\\nimport \\\"./utils/Constants.sol\\\";\\n\\ncontract TokenSupporter is Constants {\\n    using ChainlinkOracle for AggregatorV3Interface;\\n\\n    address[] internal supportedERC20s;\\n    address[] internal supportedNFTs;\\n\\n    mapping(address => Structs.SupportedToken) internal supportedToken;\\n\\n    error TokenNotSupported();\\n    error AlreadySupported();\\n    error InvalidTokenType(Structs.TokenType tokenType);\\n\\n    event AddSupportedToken(address token, Structs.TokenType tokenType);\\n\\n    function addSupportedToken(\\n        address token,\\n        address priceFeed,\\n        Structs.TokenType tokenType\\n    ) internal {\\n        if (supportedToken[token].supported) revert AlreadySupported();\\n        if (uint(tokenType) > 1) revert InvalidTokenType(tokenType);\\n\\n        supportedToken[token].usdPriceFeed = priceFeed;\\n        supportedToken[token].tokenType = tokenType;\\n        supportedToken[token].supported = true;\\n\\n        if (tokenType == Structs.TokenType.ERC721) {\\n            supportedNFTs.push(token);\\n        } else {\\n            supportedERC20s.push(token);\\n        }\\n\\n        emit AddSupportedToken(token, tokenType);\\n    }\\n\\n    function getTokenPrice(address token) public view returns (uint256 price) {\\n        if (!supportedToken[token].supported) return 0;\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            supportedToken[token].usdPriceFeed\\n        );\\n        price = priceFeed.getPrice();\\n    }\\n\\n    function allowedToken(address token) internal view {\\n        if (!supportedToken[token].supported) revert TokenNotSupported();\\n    }\\n}\",\"keccak256\":\"0x96c693e8569da696e98e63fbc6ded156d95e6f59d7f0b8c2ae4996636dcb4f11\",\"license\":\"MIT\"},\"contracts/interfaces/Structs.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface Structs {\\n    enum TokenType {\\n        ERC20,\\n        ERC721\\n    }\\n\\n    struct SupportedToken {\\n        address usdPriceFeed;\\n        TokenType tokenType;\\n        bool supported;\\n    }\\n\\n    struct AccountShares {\\n        uint256 collateral;\\n        uint256 borrow;\\n    }\\n\\n    struct Vault {\\n        uint256 amount;\\n        uint256 shares;\\n    }\\n\\n    struct TokenVault {\\n        Vault totalAsset;\\n        Vault totalBorrow;\\n        VaultInfo vaultInfo;\\n    }\\n\\n    struct VaultInfo {\\n        uint256 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 ratePerSec;\\n        uint64 lastTimestamp;\\n        uint64 lastBlock;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n\\n    struct LiquidatedWarning {\\n        address liquidator;\\n        uint64 liquidationTimestamp;\\n    }\\n\\n    struct VaultSetupParamemters {\\n        uint64 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n}\",\"keccak256\":\"0x9a6b326a06bcee7cfcef4cfd680c4afa19f98541c4463a683dad54b204245f10\",\"license\":\"MIT\"},\"contracts/libraries/ChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary ChainlinkOracle {\\n    error InvalidPrice();\\n\\n    uint256 private constant TIME_OUT = 2 hours;\\n\\n    uint256 private constant USD_ORACLE_DECIMALS = 10;\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256 price) {\\n        (\\n            uint80 roundId,\\n            int256 answer,\\n            ,\\n            uint256 updatedAt,\\n            uint80 answerInRound\\n        ) = priceFeed.latestRoundData();\\n\\n        if (\\n            answer <= 0 ||\\n            updatedAt == 0 ||\\n            answerInRound < roundId ||\\n            block.timestamp - updatedAt > TIME_OUT\\n        ) revert InvalidPrice();\\n\\n        price = uint256(answer) * 10 ** USD_ORACLE_DECIMALS;\\n    } \\n\\n    function getTimeOut(AggregatorV3Interface) public pure returns (uint256) {\\n        return TIME_OUT;\\n    }\\n}\",\"keccak256\":\"0xe1d6702a9e4cf5909ab52df90f7b5c1415bf90b436e246eb312114a13aed6231\",\"license\":\"MIT\"},\"contracts/utils/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nabstract contract Constants {\\n    uint256 public constant BPS = 1e5; //Basis point, 1e5 means 5 decimals precision\\n    uint256 public constant PRECISION = 1e18; //18 decimals \\n    uint256 internal constant MIN_HEALTH_FACTOR = 1e18;\\n    uint256 internal constant FULL_LIQUIDATION_THRESHOLD = 0.9e18;\\n    uint256 internal constant LIQUIDATION_THRESHOLD = 8e4; //80%\\n    uint256 internal constant DEFAULT_LIQUIDATION_CLOSE = 5e4; //50%\\n    uint256 internal constant LIQUIDATION_REWARD = 5e3; //5%\\n\\n    uint256 internal constant NFT_LIQUIDATION_DISCOUNT = 1e4; //10%\\n    uint256 internal constant NFT_WARNING_DELAY = 24 hours;\\n    uint256 internal constant NFT_LIQUIDATOR_DELAY = 5 minutes;\\n\\n    //default interest if borrow = 0\\n    uint64 internal constant DEFAULT_INTEREST = 158247046; //0.5% annual rate 1e18 precision \\n    uint256 internal constant MAX_PROTOCOL_FEE = 0.5e4;\\n    uint256 public constant BLOCKS_PER_YEAR = 2102400; //Average ethereum blocks per year\\n}\\n\",\"keccak256\":\"0x298cf4930b6371254d50ea8c8b7f56d5b08733c98e6a0bb96b9f6619293aad1d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6652,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"supportedERC20s","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":6655,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"supportedNFTs","offset":0,"slot":"1","type":"t_array(t_address)dyn_storage"},{"astId":6660,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"supportedToken","offset":0,"slot":"2","type":"t_mapping(t_address,t_struct(SupportedToken)6835_storage)"},{"astId":6481,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"depositedNFTs","offset":0,"slot":"3","type":"t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)3534_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(TokenType)6827":{"encoding":"inplace","label":"enum Structs.TokenType","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)3534_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => struct EnumerableSet.UintSet))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(UintSet)3534_storage)"},"t_mapping(t_address,t_struct(SupportedToken)6835_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Structs.SupportedToken)","numberOfBytes":"32","value":"t_struct(SupportedToken)6835_storage"},"t_mapping(t_address,t_struct(UintSet)3534_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct EnumerableSet.UintSet)","numberOfBytes":"32","value":"t_struct(UintSet)3534_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Set)3062_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":3057,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":3061,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"_positions","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(SupportedToken)6835_storage":{"encoding":"inplace","label":"struct Structs.SupportedToken","members":[{"astId":6829,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"usdPriceFeed","offset":0,"slot":"0","type":"t_address"},{"astId":6832,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"tokenType","offset":20,"slot":"0","type":"t_enum(TokenType)6827"},{"astId":6834,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"supported","offset":21,"slot":"0","type":"t_bool"}],"numberOfBytes":"32"},"t_struct(UintSet)3534_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":3533,"contract":"contracts/NFTPledging.sol:NFTPledging","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)3062_storage"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TokenSupporter.sol":{"TokenSupporter":{"abi":[{"inputs":[],"name":"AlreadySupported","type":"error"},{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[{"internalType":"enum Structs.TokenType","name":"tokenType","type":"uint8"}],"name":"InvalidTokenType","type":"error"},{"inputs":[],"name":"TokenNotSupported","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"enum Structs.TokenType","name":"tokenType","type":"uint8"}],"name":"AddSupportedToken","type":"event"},{"inputs":[],"name":"BLOCKS_PER_YEAR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610463806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063249d39e914610051578063aaf5eb681461006d578063d02641a01461007c578063d37db1d21461008f575b600080fd5b61005b620186a081565b60405190815260200160405180910390f35b61005b670de0b6b3a764000081565b61005b61008a366004610239565b610099565b61005b6220148081565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120547501000000000000000000000000000000000000000000900460ff166100e757506000919050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020526040902054166101188161011f565b9392505050565b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610172573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610196919061028e565b9450945050935093506000831315806101ad575081155b806101cf57508369ffffffffffffffffffff168169ffffffffffffffffffff16105b806101e45750611c206101e2834261030d565b115b1561021a576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610225600a8061040a565b61022f9084610416565b9695505050505050565b60006020828403121561024b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461011857600080fd5b805169ffffffffffffffffffff8116811461028957600080fd5b919050565b600080600080600060a086880312156102a657600080fd5b6102af8661026f565b94506020860151935060408601519250606086015191506102d26080870161026f565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610320576103206102de565b92915050565b600181815b80851115610361578160001904821115610347576103476102de565b8085161561035457918102915b93841c939080029061032b565b509250929050565b60008261037857506001610320565b8161038557506000610320565b816001811461039b57600281146103a5576103c1565b6001915050610320565b60ff8411156103b6576103b66102de565b50506001821b610320565b5060208310610133831016604e8410600b84101617156103e4575081810a610320565b6103ee8383610326565b8060001904821115610402576104026102de565b029392505050565b60006101188383610369565b8082028115828204841417610320576103206102de56fea2646970667358221220ee16034ca18b41743f4da97d486da63c67a36d0b90ee93b9685b76c0738687a164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x249D39E9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0xD37DB1D2 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x5B PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x239 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST PUSH2 0x5B PUSH3 0x201480 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE7 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x118 DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SGT ISZERO DUP1 PUSH2 0x1AD JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x1CF JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST DUP1 PUSH2 0x1E4 JUMPI POP PUSH2 0x1C20 PUSH2 0x1E2 DUP4 TIMESTAMP PUSH2 0x30D JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH31 0xBFC92100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x225 PUSH1 0xA DUP1 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x22F SWAP1 DUP5 PUSH2 0x416 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AF DUP7 PUSH2 0x26F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2D2 PUSH1 0x80 DUP8 ADD PUSH2 0x26F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x320 JUMPI PUSH2 0x320 PUSH2 0x2DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x361 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x347 JUMPI PUSH2 0x347 PUSH2 0x2DE JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x354 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x32B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x378 JUMPI POP PUSH1 0x1 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH2 0x385 JUMPI POP PUSH1 0x0 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x39B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3A5 JUMPI PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x320 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3B6 JUMPI PUSH2 0x3B6 PUSH2 0x2DE JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x320 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3E4 JUMPI POP DUP2 DUP2 EXP PUSH2 0x320 JUMP JUMPDEST PUSH2 0x3EE DUP4 DUP4 PUSH2 0x326 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x2DE JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x369 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x320 JUMPI PUSH2 0x320 PUSH2 0x2DE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE AND SUB 0x4C LOG1 DUP12 COINBASE PUSH21 0x3F4DA97D486DA63C67A36D0B90EE93B9685B76C073 DUP7 DUP8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"245:1533:18:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BLOCKS_PER_YEAR_7304":{"entryPoint":null,"id":7304,"parameterSlots":0,"returnSlots":0},"@BPS_7268":{"entryPoint":null,"id":7268,"parameterSlots":0,"returnSlots":0},"@PRECISION_7271":{"entryPoint":null,"id":7271,"parameterSlots":0,"returnSlots":0},"@getPrice_6963":{"entryPoint":287,"id":6963,"parameterSlots":1,"returnSlots":1},"@getTokenPrice_6784":{"entryPoint":153,"id":6784,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":654,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint80_fromMemory":{"entryPoint":623,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":806,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":1034,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":873,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1046,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":781,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":734,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3038:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:27","statements":[{"nodeType":"YulAssignment","src":"125:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:27"},"nodeType":"YulFunctionCall","src":"133:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:27"},"nodeType":"YulFunctionCall","src":"160:25:27"},"nodeType":"YulExpressionStatement","src":"160:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:27","type":""}],"src":"14:177:27"},{"body":{"nodeType":"YulBlock","src":"266:239:27","statements":[{"body":{"nodeType":"YulBlock","src":"312:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"321:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"324:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"314:6:27"},"nodeType":"YulFunctionCall","src":"314:12:27"},"nodeType":"YulExpressionStatement","src":"314:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"287:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"296:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"283:3:27"},"nodeType":"YulFunctionCall","src":"283:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"308:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"279:3:27"},"nodeType":"YulFunctionCall","src":"279:32:27"},"nodeType":"YulIf","src":"276:52:27"},{"nodeType":"YulVariableDeclaration","src":"337:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"363:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"350:12:27"},"nodeType":"YulFunctionCall","src":"350:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"341:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"459:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"468:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"471:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"461:6:27"},"nodeType":"YulFunctionCall","src":"461:12:27"},"nodeType":"YulExpressionStatement","src":"461:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"395:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"406:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"413:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"402:3:27"},"nodeType":"YulFunctionCall","src":"402:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"392:2:27"},"nodeType":"YulFunctionCall","src":"392:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"385:6:27"},"nodeType":"YulFunctionCall","src":"385:73:27"},"nodeType":"YulIf","src":"382:93:27"},{"nodeType":"YulAssignment","src":"484:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"494:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"484:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"232:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"243:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"255:6:27","type":""}],"src":"196:309:27"},{"body":{"nodeType":"YulBlock","src":"569:120:27","statements":[{"nodeType":"YulAssignment","src":"579:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"594:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"588:5:27"},"nodeType":"YulFunctionCall","src":"588:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"579:5:27"}]},{"body":{"nodeType":"YulBlock","src":"667:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"676:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"679:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"669:6:27"},"nodeType":"YulFunctionCall","src":"669:12:27"},"nodeType":"YulExpressionStatement","src":"669:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"623:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"641:22:27","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"630:3:27"},"nodeType":"YulFunctionCall","src":"630:34:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"620:2:27"},"nodeType":"YulFunctionCall","src":"620:45:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"613:6:27"},"nodeType":"YulFunctionCall","src":"613:53:27"},"nodeType":"YulIf","src":"610:73:27"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"548:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"559:5:27","type":""}],"src":"510:179:27"},{"body":{"nodeType":"YulBlock","src":"840:327:27","statements":[{"body":{"nodeType":"YulBlock","src":"887:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"896:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"899:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"889:6:27"},"nodeType":"YulFunctionCall","src":"889:12:27"},"nodeType":"YulExpressionStatement","src":"889:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"861:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"870:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"857:3:27"},"nodeType":"YulFunctionCall","src":"857:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"882:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"853:3:27"},"nodeType":"YulFunctionCall","src":"853:33:27"},"nodeType":"YulIf","src":"850:53:27"},{"nodeType":"YulAssignment","src":"912:49:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"951:9:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"922:28:27"},"nodeType":"YulFunctionCall","src":"922:39:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"912:6:27"}]},{"nodeType":"YulAssignment","src":"970:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"990:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1001:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"986:3:27"},"nodeType":"YulFunctionCall","src":"986:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"980:5:27"},"nodeType":"YulFunctionCall","src":"980:25:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"970:6:27"}]},{"nodeType":"YulAssignment","src":"1014:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1034:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1045:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1030:3:27"},"nodeType":"YulFunctionCall","src":"1030:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1024:5:27"},"nodeType":"YulFunctionCall","src":"1024:25:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1014:6:27"}]},{"nodeType":"YulAssignment","src":"1058:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1089:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1074:3:27"},"nodeType":"YulFunctionCall","src":"1074:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1068:5:27"},"nodeType":"YulFunctionCall","src":"1068:25:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1058:6:27"}]},{"nodeType":"YulAssignment","src":"1102:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1145:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1156:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1141:3:27"},"nodeType":"YulFunctionCall","src":"1141:19:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"1112:28:27"},"nodeType":"YulFunctionCall","src":"1112:49:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1102:6:27"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"774:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"785:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"797:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"805:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"813:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"821:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"829:6:27","type":""}],"src":"694:473:27"},{"body":{"nodeType":"YulBlock","src":"1204:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1221:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1224:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1214:6:27"},"nodeType":"YulFunctionCall","src":"1214:88:27"},"nodeType":"YulExpressionStatement","src":"1214:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1318:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1321:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1311:6:27"},"nodeType":"YulFunctionCall","src":"1311:15:27"},"nodeType":"YulExpressionStatement","src":"1311:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1342:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1345:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1335:6:27"},"nodeType":"YulFunctionCall","src":"1335:15:27"},"nodeType":"YulExpressionStatement","src":"1335:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1172:184:27"},{"body":{"nodeType":"YulBlock","src":"1410:79:27","statements":[{"nodeType":"YulAssignment","src":"1420:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1432:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"1435:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1428:3:27"},"nodeType":"YulFunctionCall","src":"1428:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"1420:4:27"}]},{"body":{"nodeType":"YulBlock","src":"1461:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1463:16:27"},"nodeType":"YulFunctionCall","src":"1463:18:27"},"nodeType":"YulExpressionStatement","src":"1463:18:27"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"1452:4:27"},{"name":"x","nodeType":"YulIdentifier","src":"1458:1:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1449:2:27"},"nodeType":"YulFunctionCall","src":"1449:11:27"},"nodeType":"YulIf","src":"1446:37:27"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1392:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"1395:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"1401:4:27","type":""}],"src":"1361:128:27"},{"body":{"nodeType":"YulBlock","src":"1558:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1568:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1583:1:27","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"1572:7:27","type":""}]},{"nodeType":"YulAssignment","src":"1593:16:27","value":{"name":"power_1","nodeType":"YulIdentifier","src":"1602:7:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1593:5:27"}]},{"nodeType":"YulAssignment","src":"1618:13:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"1626:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"1618:4:27"}]},{"body":{"nodeType":"YulBlock","src":"1682:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"1727:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1729:16:27"},"nodeType":"YulFunctionCall","src":"1729:18:27"},"nodeType":"YulExpressionStatement","src":"1729:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1702:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1716:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1712:3:27"},"nodeType":"YulFunctionCall","src":"1712:6:27"},{"name":"base","nodeType":"YulIdentifier","src":"1720:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1708:3:27"},"nodeType":"YulFunctionCall","src":"1708:17:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1699:2:27"},"nodeType":"YulFunctionCall","src":"1699:27:27"},"nodeType":"YulIf","src":"1696:53:27"},{"body":{"nodeType":"YulBlock","src":"1788:29:27","statements":[{"nodeType":"YulAssignment","src":"1790:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"1803:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"1810:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1799:3:27"},"nodeType":"YulFunctionCall","src":"1799:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1790:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1769:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"1779:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1765:3:27"},"nodeType":"YulFunctionCall","src":"1765:22:27"},"nodeType":"YulIf","src":"1762:55:27"},{"nodeType":"YulAssignment","src":"1830:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1842:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"1848:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1838:3:27"},"nodeType":"YulFunctionCall","src":"1838:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"1830:4:27"}]},{"nodeType":"YulAssignment","src":"1866:34:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"1882:7:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"1891:8:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1878:3:27"},"nodeType":"YulFunctionCall","src":"1878:22:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"1866:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1651:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"1661:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1648:2:27"},"nodeType":"YulFunctionCall","src":"1648:21:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1670:3:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"1644:3:27","statements":[]},"src":"1640:270:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"1522:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"1529:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"1542:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"1549:4:27","type":""}],"src":"1494:422:27"},{"body":{"nodeType":"YulBlock","src":"1980:747:27","statements":[{"body":{"nodeType":"YulBlock","src":"2018:52:27","statements":[{"nodeType":"YulAssignment","src":"2032:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2041:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2032:5:27"}]},{"nodeType":"YulLeave","src":"2055:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2000:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1993:6:27"},"nodeType":"YulFunctionCall","src":"1993:16:27"},"nodeType":"YulIf","src":"1990:80:27"},{"body":{"nodeType":"YulBlock","src":"2103:52:27","statements":[{"nodeType":"YulAssignment","src":"2117:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2126:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2117:5:27"}]},{"nodeType":"YulLeave","src":"2140:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2089:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2082:6:27"},"nodeType":"YulFunctionCall","src":"2082:12:27"},"nodeType":"YulIf","src":"2079:76:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2191:52:27","statements":[{"nodeType":"YulAssignment","src":"2205:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2214:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2205:5:27"}]},{"nodeType":"YulLeave","src":"2228:5:27"}]},"nodeType":"YulCase","src":"2184:59:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2189:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2259:123:27","statements":[{"body":{"nodeType":"YulBlock","src":"2294:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2296:16:27"},"nodeType":"YulFunctionCall","src":"2296:18:27"},"nodeType":"YulExpressionStatement","src":"2296:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2279:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"2289:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2276:2:27"},"nodeType":"YulFunctionCall","src":"2276:17:27"},"nodeType":"YulIf","src":"2273:43:27"},{"nodeType":"YulAssignment","src":"2329:25:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2342:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"2352:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2338:3:27"},"nodeType":"YulFunctionCall","src":"2338:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2329:5:27"}]},{"nodeType":"YulLeave","src":"2367:5:27"}]},"nodeType":"YulCase","src":"2252:130:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2257:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"2171:4:27"},"nodeType":"YulSwitch","src":"2164:218:27"},{"body":{"nodeType":"YulBlock","src":"2480:70:27","statements":[{"nodeType":"YulAssignment","src":"2494:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2507:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"2513:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"2503:3:27"},"nodeType":"YulFunctionCall","src":"2503:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2494:5:27"}]},{"nodeType":"YulLeave","src":"2535:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2404:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2410:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2401:2:27"},"nodeType":"YulFunctionCall","src":"2401:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2418:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"2428:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2415:2:27"},"nodeType":"YulFunctionCall","src":"2415:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2397:3:27"},"nodeType":"YulFunctionCall","src":"2397:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2441:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2447:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2438:2:27"},"nodeType":"YulFunctionCall","src":"2438:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2456:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"2466:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2453:2:27"},"nodeType":"YulFunctionCall","src":"2453:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2434:3:27"},"nodeType":"YulFunctionCall","src":"2434:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2394:2:27"},"nodeType":"YulFunctionCall","src":"2394:77:27"},"nodeType":"YulIf","src":"2391:159:27"},{"nodeType":"YulVariableDeclaration","src":"2559:57:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2601:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"2607:8:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"2582:18:27"},"nodeType":"YulFunctionCall","src":"2582:34:27"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"2563:7:27","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"2572:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2661:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2663:16:27"},"nodeType":"YulFunctionCall","src":"2663:18:27"},"nodeType":"YulExpressionStatement","src":"2663:18:27"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"2631:7:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2648:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2644:3:27"},"nodeType":"YulFunctionCall","src":"2644:6:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"2652:6:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2640:3:27"},"nodeType":"YulFunctionCall","src":"2640:19:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2628:2:27"},"nodeType":"YulFunctionCall","src":"2628:32:27"},"nodeType":"YulIf","src":"2625:58:27"},{"nodeType":"YulAssignment","src":"2692:29:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"2705:7:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"2714:6:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2701:3:27"},"nodeType":"YulFunctionCall","src":"2701:20:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2692:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"1951:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"1957:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"1970:5:27","type":""}],"src":"1921:806:27"},{"body":{"nodeType":"YulBlock","src":"2802:61:27","statements":[{"nodeType":"YulAssignment","src":"2812:45:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2842:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"2848:8:27"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"2821:20:27"},"nodeType":"YulFunctionCall","src":"2821:36:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2812:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"2773:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2779:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2792:5:27","type":""}],"src":"2732:131:27"},{"body":{"nodeType":"YulBlock","src":"2920:116:27","statements":[{"nodeType":"YulAssignment","src":"2930:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2945:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"2948:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2941:3:27"},"nodeType":"YulFunctionCall","src":"2941:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"2930:7:27"}]},{"body":{"nodeType":"YulBlock","src":"3008:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3010:16:27"},"nodeType":"YulFunctionCall","src":"3010:18:27"},"nodeType":"YulExpressionStatement","src":"3010:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2979:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2972:6:27"},"nodeType":"YulFunctionCall","src":"2972:9:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2986:1:27"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"2993:7:27"},{"name":"x","nodeType":"YulIdentifier","src":"3002:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2989:3:27"},"nodeType":"YulFunctionCall","src":"2989:15:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2983:2:27"},"nodeType":"YulFunctionCall","src":"2983:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2969:2:27"},"nodeType":"YulFunctionCall","src":"2969:37:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2962:6:27"},"nodeType":"YulFunctionCall","src":"2962:45:27"},"nodeType":"YulIf","src":"2959:71:27"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2899:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"2902:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2908:7:27","type":""}],"src":"2868:168:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c8063249d39e914610051578063aaf5eb681461006d578063d02641a01461007c578063d37db1d21461008f575b600080fd5b61005b620186a081565b60405190815260200160405180910390f35b61005b670de0b6b3a764000081565b61005b61008a366004610239565b610099565b61005b6220148081565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600260205260408120547501000000000000000000000000000000000000000000900460ff166100e757506000919050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020526040902054166101188161011f565b9392505050565b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610172573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610196919061028e565b9450945050935093506000831315806101ad575081155b806101cf57508369ffffffffffffffffffff168169ffffffffffffffffffff16105b806101e45750611c206101e2834261030d565b115b1561021a576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610225600a8061040a565b61022f9084610416565b9695505050505050565b60006020828403121561024b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461011857600080fd5b805169ffffffffffffffffffff8116811461028957600080fd5b919050565b600080600080600060a086880312156102a657600080fd5b6102af8661026f565b94506020860151935060408601519250606086015191506102d26080870161026f565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610320576103206102de565b92915050565b600181815b80851115610361578160001904821115610347576103476102de565b8085161561035457918102915b93841c939080029061032b565b509250929050565b60008261037857506001610320565b8161038557506000610320565b816001811461039b57600281146103a5576103c1565b6001915050610320565b60ff8411156103b6576103b66102de565b50506001821b610320565b5060208310610133831016604e8410600b84101617156103e4575081810a610320565b6103ee8383610326565b8060001904821115610402576104026102de565b029392505050565b60006101188383610369565b8082028115828204841417610320576103206102de56fea2646970667358221220ee16034ca18b41743f4da97d486da63c67a36d0b90ee93b9685b76c0738687a164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x249D39E9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0xD37DB1D2 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x5B PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x239 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST PUSH2 0x5B PUSH3 0x201480 DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE7 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x118 DUP2 PUSH2 0x11F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST SWAP5 POP SWAP5 POP POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP4 SGT ISZERO DUP1 PUSH2 0x1AD JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x1CF JUMPI POP DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST DUP1 PUSH2 0x1E4 JUMPI POP PUSH2 0x1C20 PUSH2 0x1E2 DUP4 TIMESTAMP PUSH2 0x30D JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH31 0xBFC92100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x225 PUSH1 0xA DUP1 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x22F SWAP1 DUP5 PUSH2 0x416 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AF DUP7 PUSH2 0x26F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2D2 PUSH1 0x80 DUP8 ADD PUSH2 0x26F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x320 JUMPI PUSH2 0x320 PUSH2 0x2DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x361 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x347 JUMPI PUSH2 0x347 PUSH2 0x2DE JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x354 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x32B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x378 JUMPI POP PUSH1 0x1 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH2 0x385 JUMPI POP PUSH1 0x0 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x39B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3A5 JUMPI PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x320 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3B6 JUMPI PUSH2 0x3B6 PUSH2 0x2DE JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x320 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3E4 JUMPI POP DUP2 DUP2 EXP PUSH2 0x320 JUMP JUMPDEST PUSH2 0x3EE DUP4 DUP4 PUSH2 0x326 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x2DE JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x369 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x320 JUMPI PUSH2 0x320 PUSH2 0x2DE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE AND SUB 0x4C LOG1 DUP12 COINBASE PUSH21 0x3F4DA97D486DA63C67A36D0B90EE93B9685B76C073 DUP7 DUP8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"245:1533:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:33:25;;122:3;92:33;;;;;160:25:27;;;148:2;133:18;92:33:25;;;;;;;177:40;;213:4;177:40;;1340:298:18;;;;;;:::i;:::-;;:::i;937:49:25:-;;979:7;937:49;;1340:298:18;1429:21;;;1399:13;1429:21;;;:14;:21;;;;;:31;;;;;;1424:46;;-1:-1:-1;1469:1:18;;1340:298;-1:-1:-1;1340:298:18:o;1424:46::-;1549:21;;;;1480:31;1549:21;;;:14;:21;;;;;:34;;1611:20;1549:34;1611:18;:20::i;:::-;1603:28;1340:298;-1:-1:-1;;;1340:298:18:o;329:550:21:-;417:13;456:14;484:13;525:17;556:20;589:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;442:174;;;;;;;;;654:1;644:6;:11;;:41;;;-1:-1:-1;671:14:21;;644:41;:80;;;;717:7;701:23;;:13;:23;;;644:80;:134;;;-1:-1:-1;259:7:21;740:27;758:9;740:15;:27;:::i;:::-;:38;644:134;627:183;;;796:14;;;;;;;;;;;;;;627:183;847:25;320:2;;847:25;:::i;:::-;829:43;;837:6;829:43;:::i;:::-;821:51;329:550;-1:-1:-1;;;;;;329:550:21:o;196:309:27:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;363:9;350:23;413:42;406:5;402:54;395:5;392:65;382:93;;471:1;468;461:12;510:179;588:13;;641:22;630:34;;620:45;;610:73;;679:1;676;669:12;610:73;510:179;;;:::o;694:473::-;797:6;805;813;821;829;882:3;870:9;861:7;857:23;853:33;850:53;;;899:1;896;889:12;850:53;922:39;951:9;922:39;:::i;:::-;912:49;;1001:2;990:9;986:18;980:25;970:35;;1045:2;1034:9;1030:18;1024:25;1014:35;;1089:2;1078:9;1074:18;1068:25;1058:35;;1112:49;1156:3;1145:9;1141:19;1112:49;:::i;:::-;1102:59;;694:473;;;;;;;;:::o;1172:184::-;1224:77;1221:1;1214:88;1321:4;1318:1;1311:15;1345:4;1342:1;1335:15;1361:128;1428:9;;;1449:11;;;1446:37;;;1463:18;;:::i;:::-;1361:128;;;;:::o;1494:422::-;1583:1;1626:5;1583:1;1640:270;1661:7;1651:8;1648:21;1640:270;;;1720:4;1716:1;1712:6;1708:17;1702:4;1699:27;1696:53;;;1729:18;;:::i;:::-;1779:7;1769:8;1765:22;1762:55;;;1799:16;;;;1762:55;1878:22;;;;1838:15;;;;1640:270;;;1644:3;1494:422;;;;;:::o;1921:806::-;1970:5;2000:8;1990:80;;-1:-1:-1;2041:1:27;2055:5;;1990:80;2089:4;2079:76;;-1:-1:-1;2126:1:27;2140:5;;2079:76;2171:4;2189:1;2184:59;;;;2257:1;2252:130;;;;2164:218;;2184:59;2214:1;2205:10;;2228:5;;;2252:130;2289:3;2279:8;2276:17;2273:43;;;2296:18;;:::i;:::-;-1:-1:-1;;2352:1:27;2338:16;;2367:5;;2164:218;;2466:2;2456:8;2453:16;2447:3;2441:4;2438:13;2434:36;2428:2;2418:8;2415:16;2410:2;2404:4;2401:12;2397:35;2394:77;2391:159;;;-1:-1:-1;2503:19:27;;;2535:5;;2391:159;2582:34;2607:8;2601:4;2582:34;:::i;:::-;2652:6;2648:1;2644:6;2640:19;2631:7;2628:32;2625:58;;;2663:18;;:::i;:::-;2701:20;;1921:806;-1:-1:-1;;;1921:806:27:o;2732:131::-;2792:5;2821:36;2848:8;2842:4;2821:36;:::i;2868:168::-;2941:9;;;2972;;2989:15;;;2983:22;;2969:37;2959:71;;3010:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"224600","executionCost":"269","totalCost":"224869"},"external":{"BLOCKS_PER_YEAR()":"227","BPS()":"161","PRECISION()":"183","getTokenPrice(address)":"infinite"},"internal":{"addSupportedToken(address,address,enum Structs.TokenType)":"infinite","allowedToken(address)":"infinite"}},"methodIdentifiers":{"BLOCKS_PER_YEAR()":"d37db1d2","BPS()":"249d39e9","PRECISION()":"aaf5eb68","getTokenPrice(address)":"d02641a0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadySupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Structs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Structs.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"AddSupportedToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCKS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenSupporter.sol\":\"TokenSupporter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/TokenSupporter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./libraries/ChainlinkOracle.sol\\\";\\nimport \\\"./interfaces/Structs.sol\\\";\\nimport \\\"./utils/Constants.sol\\\";\\n\\ncontract TokenSupporter is Constants {\\n    using ChainlinkOracle for AggregatorV3Interface;\\n\\n    address[] internal supportedERC20s;\\n    address[] internal supportedNFTs;\\n\\n    mapping(address => Structs.SupportedToken) internal supportedToken;\\n\\n    error TokenNotSupported();\\n    error AlreadySupported();\\n    error InvalidTokenType(Structs.TokenType tokenType);\\n\\n    event AddSupportedToken(address token, Structs.TokenType tokenType);\\n\\n    function addSupportedToken(\\n        address token,\\n        address priceFeed,\\n        Structs.TokenType tokenType\\n    ) internal {\\n        if (supportedToken[token].supported) revert AlreadySupported();\\n        if (uint(tokenType) > 1) revert InvalidTokenType(tokenType);\\n\\n        supportedToken[token].usdPriceFeed = priceFeed;\\n        supportedToken[token].tokenType = tokenType;\\n        supportedToken[token].supported = true;\\n\\n        if (tokenType == Structs.TokenType.ERC721) {\\n            supportedNFTs.push(token);\\n        } else {\\n            supportedERC20s.push(token);\\n        }\\n\\n        emit AddSupportedToken(token, tokenType);\\n    }\\n\\n    function getTokenPrice(address token) public view returns (uint256 price) {\\n        if (!supportedToken[token].supported) return 0;\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            supportedToken[token].usdPriceFeed\\n        );\\n        price = priceFeed.getPrice();\\n    }\\n\\n    function allowedToken(address token) internal view {\\n        if (!supportedToken[token].supported) revert TokenNotSupported();\\n    }\\n}\",\"keccak256\":\"0x96c693e8569da696e98e63fbc6ded156d95e6f59d7f0b8c2ae4996636dcb4f11\",\"license\":\"MIT\"},\"contracts/interfaces/Structs.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface Structs {\\n    enum TokenType {\\n        ERC20,\\n        ERC721\\n    }\\n\\n    struct SupportedToken {\\n        address usdPriceFeed;\\n        TokenType tokenType;\\n        bool supported;\\n    }\\n\\n    struct AccountShares {\\n        uint256 collateral;\\n        uint256 borrow;\\n    }\\n\\n    struct Vault {\\n        uint256 amount;\\n        uint256 shares;\\n    }\\n\\n    struct TokenVault {\\n        Vault totalAsset;\\n        Vault totalBorrow;\\n        VaultInfo vaultInfo;\\n    }\\n\\n    struct VaultInfo {\\n        uint256 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 ratePerSec;\\n        uint64 lastTimestamp;\\n        uint64 lastBlock;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n\\n    struct LiquidatedWarning {\\n        address liquidator;\\n        uint64 liquidationTimestamp;\\n    }\\n\\n    struct VaultSetupParamemters {\\n        uint64 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n}\",\"keccak256\":\"0x9a6b326a06bcee7cfcef4cfd680c4afa19f98541c4463a683dad54b204245f10\",\"license\":\"MIT\"},\"contracts/libraries/ChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary ChainlinkOracle {\\n    error InvalidPrice();\\n\\n    uint256 private constant TIME_OUT = 2 hours;\\n\\n    uint256 private constant USD_ORACLE_DECIMALS = 10;\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256 price) {\\n        (\\n            uint80 roundId,\\n            int256 answer,\\n            ,\\n            uint256 updatedAt,\\n            uint80 answerInRound\\n        ) = priceFeed.latestRoundData();\\n\\n        if (\\n            answer <= 0 ||\\n            updatedAt == 0 ||\\n            answerInRound < roundId ||\\n            block.timestamp - updatedAt > TIME_OUT\\n        ) revert InvalidPrice();\\n\\n        price = uint256(answer) * 10 ** USD_ORACLE_DECIMALS;\\n    } \\n\\n    function getTimeOut(AggregatorV3Interface) public pure returns (uint256) {\\n        return TIME_OUT;\\n    }\\n}\",\"keccak256\":\"0xe1d6702a9e4cf5909ab52df90f7b5c1415bf90b436e246eb312114a13aed6231\",\"license\":\"MIT\"},\"contracts/utils/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nabstract contract Constants {\\n    uint256 public constant BPS = 1e5; //Basis point, 1e5 means 5 decimals precision\\n    uint256 public constant PRECISION = 1e18; //18 decimals \\n    uint256 internal constant MIN_HEALTH_FACTOR = 1e18;\\n    uint256 internal constant FULL_LIQUIDATION_THRESHOLD = 0.9e18;\\n    uint256 internal constant LIQUIDATION_THRESHOLD = 8e4; //80%\\n    uint256 internal constant DEFAULT_LIQUIDATION_CLOSE = 5e4; //50%\\n    uint256 internal constant LIQUIDATION_REWARD = 5e3; //5%\\n\\n    uint256 internal constant NFT_LIQUIDATION_DISCOUNT = 1e4; //10%\\n    uint256 internal constant NFT_WARNING_DELAY = 24 hours;\\n    uint256 internal constant NFT_LIQUIDATOR_DELAY = 5 minutes;\\n\\n    //default interest if borrow = 0\\n    uint64 internal constant DEFAULT_INTEREST = 158247046; //0.5% annual rate 1e18 precision \\n    uint256 internal constant MAX_PROTOCOL_FEE = 0.5e4;\\n    uint256 public constant BLOCKS_PER_YEAR = 2102400; //Average ethereum blocks per year\\n}\\n\",\"keccak256\":\"0x298cf4930b6371254d50ea8c8b7f56d5b08733c98e6a0bb96b9f6619293aad1d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6652,"contract":"contracts/TokenSupporter.sol:TokenSupporter","label":"supportedERC20s","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":6655,"contract":"contracts/TokenSupporter.sol:TokenSupporter","label":"supportedNFTs","offset":0,"slot":"1","type":"t_array(t_address)dyn_storage"},{"astId":6660,"contract":"contracts/TokenSupporter.sol:TokenSupporter","label":"supportedToken","offset":0,"slot":"2","type":"t_mapping(t_address,t_struct(SupportedToken)6835_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(TokenType)6827":{"encoding":"inplace","label":"enum Structs.TokenType","numberOfBytes":"1"},"t_mapping(t_address,t_struct(SupportedToken)6835_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Structs.SupportedToken)","numberOfBytes":"32","value":"t_struct(SupportedToken)6835_storage"},"t_struct(SupportedToken)6835_storage":{"encoding":"inplace","label":"struct Structs.SupportedToken","members":[{"astId":6829,"contract":"contracts/TokenSupporter.sol:TokenSupporter","label":"usdPriceFeed","offset":0,"slot":"0","type":"t_address"},{"astId":6832,"contract":"contracts/TokenSupporter.sol:TokenSupporter","label":"tokenType","offset":20,"slot":"0","type":"t_enum(TokenType)6827"},{"astId":6834,"contract":"contracts/TokenSupporter.sol:TokenSupporter","label":"supported","offset":21,"slot":"0","type":"t_bool"}],"numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/FlashLoanReceiverInterface.sol":{"FlashLoanReceiverInterface":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address[]","name":"token","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"fees","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"onFlashLoan(address,address[],uint256[],uint256[],bytes)":{"params":{"amounts":"so tien vay","data":"user-defined parameters","fees":"phi vay","initiator":"ng bat dau khoan vay","token":"token vay"},"returns":{"_0":"bool success or not"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onFlashLoan(address,address[],uint256[],uint256[],bytes)":"64573d02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"token\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"fees\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address[],uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"so tien vay\",\"data\":\"user-defined parameters\",\"fees\":\"phi vay\",\"initiator\":\"ng bat dau khoan vay\",\"token\":\"token vay\"},\"returns\":{\"_0\":\"bool success or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/FlashLoanReceiverInterface.sol\":\"FlashLoanReceiverInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/FlashLoanReceiverInterface.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface FlashLoanReceiverInterface {\\n    /**\\n     * @param initiator ng bat dau khoan vay\\n     * @param token token vay\\n     * @param amounts so tien vay\\n     * @param fees phi vay\\n     * @param data user-defined parameters\\n     * @return bool success or not\\n     */\\n    function onFlashLoan(\\n        address initiator,\\n        address[] calldata token,\\n        uint256[] calldata amounts,\\n        uint256[] calldata fees,\\n        bytes calldata data\\n    ) external returns (bool);\\n}\",\"keccak256\":\"0xc7a4dd97d41558c2611071f39fe801763e8ef521130c39112d35469ec26ad978\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/Structs.sol":{"Structs":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Structs.sol\":\"Structs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/Structs.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface Structs {\\n    enum TokenType {\\n        ERC20,\\n        ERC721\\n    }\\n\\n    struct SupportedToken {\\n        address usdPriceFeed;\\n        TokenType tokenType;\\n        bool supported;\\n    }\\n\\n    struct AccountShares {\\n        uint256 collateral;\\n        uint256 borrow;\\n    }\\n\\n    struct Vault {\\n        uint256 amount;\\n        uint256 shares;\\n    }\\n\\n    struct TokenVault {\\n        Vault totalAsset;\\n        Vault totalBorrow;\\n        VaultInfo vaultInfo;\\n    }\\n\\n    struct VaultInfo {\\n        uint256 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 ratePerSec;\\n        uint64 lastTimestamp;\\n        uint64 lastBlock;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n\\n    struct LiquidatedWarning {\\n        address liquidator;\\n        uint64 liquidationTimestamp;\\n    }\\n\\n    struct VaultSetupParamemters {\\n        uint64 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n}\",\"keccak256\":\"0x9a6b326a06bcee7cfcef4cfd680c4afa19f98541c4463a683dad54b204245f10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/ChainlinkOracle.sol":{"ChainlinkOracle":{"abi":[{"inputs":[],"name":"InvalidPrice","type":"error"},{"inputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"AggregatorV3Interface"}],"name":"getTimeOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60cd610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063c03e0fd7146038575b600080fd5b604a6043366004605c565b50611c2090565b60405190815260200160405180910390f35b600060208284031215606d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114609057600080fd5b939250505056fea264697066735822122029685f7fde26e4006f0e953e76598ffd5affe9ce678b9a6dee46c54e71be879364736f6c63430008140033","opcodes":"PUSH1 0xCD PUSH2 0x39 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC03E0FD7 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4A PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5C JUMP JUMPDEST POP PUSH2 0x1C20 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH1 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH9 0x5F7FDE26E4006F0E95 RETURNDATACOPY PUSH23 0x598FFD5AFFE9CE678B9A6DEE46C54E71BE879364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"166:827:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;166:827:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getTimeOut_6974":{"entryPoint":null,"id":6974,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_contract$_AggregatorV3Interface_$45":{"entryPoint":92,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:543:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:239:27","statements":[{"body":{"nodeType":"YulBlock","src":"158:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"167:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"170:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:27"},"nodeType":"YulFunctionCall","src":"160:12:27"},"nodeType":"YulExpressionStatement","src":"160:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:27"},"nodeType":"YulFunctionCall","src":"129:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:27"},"nodeType":"YulFunctionCall","src":"125:32:27"},"nodeType":"YulIf","src":"122:52:27"},{"nodeType":"YulVariableDeclaration","src":"183:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"209:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"196:12:27"},"nodeType":"YulFunctionCall","src":"196:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"187:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"305:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"314:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"307:6:27"},"nodeType":"YulFunctionCall","src":"307:12:27"},"nodeType":"YulExpressionStatement","src":"307:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"241:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"252:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"259:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"248:3:27"},"nodeType":"YulFunctionCall","src":"248:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"238:2:27"},"nodeType":"YulFunctionCall","src":"238:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"231:6:27"},"nodeType":"YulFunctionCall","src":"231:73:27"},"nodeType":"YulIf","src":"228:93:27"},{"nodeType":"YulAssignment","src":"330:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"340:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"330:6:27"}]}]},"name":"abi_decode_tuple_t_contract$_AggregatorV3Interface_$45","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"78:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"89:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"101:6:27","type":""}],"src":"14:337:27"},{"body":{"nodeType":"YulBlock","src":"465:76:27","statements":[{"nodeType":"YulAssignment","src":"475:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"487:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"498:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"483:3:27"},"nodeType":"YulFunctionCall","src":"483:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"475:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"528:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"510:6:27"},"nodeType":"YulFunctionCall","src":"510:25:27"},"nodeType":"YulExpressionStatement","src":"510:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"434:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"445:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"456:4:27","type":""}],"src":"356:185:27"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_AggregatorV3Interface_$45(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063c03e0fd7146038575b600080fd5b604a6043366004605c565b50611c2090565b60405190815260200160405180910390f35b600060208284031215606d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114609057600080fd5b939250505056fea264697066735822122029685f7fde26e4006f0e953e76598ffd5affe9ce678b9a6dee46c54e71be879364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC03E0FD7 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4A PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5C JUMP JUMPDEST POP PUSH2 0x1C20 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH1 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH9 0x5F7FDE26E4006F0E95 RETURNDATACOPY PUSH23 0x598FFD5AFFE9CE678B9A6DEE46C54E71BE879364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"166:827:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;886:105;;;;;;:::i;:::-;-1:-1:-1;259:7:21;;886:105;;;;510:25:27;;;498:2;483:18;886:105:21;;;;;;;14:337:27;101:6;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;209:9;196:23;259:42;252:5;248:54;241:5;238:65;228:93;;317:1;314;307:12;228:93;340:5;14:337;-1:-1:-1;;;14:337:27:o"},"gasEstimates":{"creation":{"codeDepositCost":"41000","executionCost":"124","totalCost":"41124"},"external":{"getTimeOut(AggregatorV3Interface)":"258"},"internal":{"getPrice(contract AggregatorV3Interface)":"infinite"}},"methodIdentifiers":{"getTimeOut(AggregatorV3Interface)":"c03e0fd7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"AggregatorV3Interface\"}],\"name\":\"getTimeOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ChainlinkOracle.sol\":\"ChainlinkOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/libraries/ChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary ChainlinkOracle {\\n    error InvalidPrice();\\n\\n    uint256 private constant TIME_OUT = 2 hours;\\n\\n    uint256 private constant USD_ORACLE_DECIMALS = 10;\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256 price) {\\n        (\\n            uint80 roundId,\\n            int256 answer,\\n            ,\\n            uint256 updatedAt,\\n            uint80 answerInRound\\n        ) = priceFeed.latestRoundData();\\n\\n        if (\\n            answer <= 0 ||\\n            updatedAt == 0 ||\\n            answerInRound < roundId ||\\n            block.timestamp - updatedAt > TIME_OUT\\n        ) revert InvalidPrice();\\n\\n        price = uint256(answer) * 10 ** USD_ORACLE_DECIMALS;\\n    } \\n\\n    function getTimeOut(AggregatorV3Interface) public pure returns (uint256) {\\n        return TIME_OUT;\\n    }\\n}\",\"keccak256\":\"0xe1d6702a9e4cf5909ab52df90f7b5c1415bf90b436e246eb312114a13aed6231\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/Helper.sol":{"Helper":{"abi":[{"inputs":[],"name":"TransferFailed","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0232cb1a741c2cd1bd0500e860284baa51a080623f63c3979cb5b3e64e3aa4264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x23 0x2C 0xB1 0xA7 COINBASE 0xC2 0xCD SHL 0xD0 POP 0xE DUP7 MUL DUP5 0xBA 0xA5 BYTE ADDMOD MOD 0x23 0xF6 EXTCODECOPY CODECOPY PUSH26 0xCB5B3E64E3AA4264736F6C634300081400330000000000000000 ","sourceMap":"166:620:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;166:620:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0232cb1a741c2cd1bd0500e860284baa51a080623f63c3979cb5b3e64e3aa4264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x23 0x2C 0xB1 0xA7 COINBASE 0xC2 0xCD SHL 0xD0 POP 0xE DUP7 MUL DUP5 0xBA 0xA5 BYTE ADDMOD MOD 0x23 0xF6 EXTCODECOPY CODECOPY PUSH26 0xCB5B3E64E3AA4264736F6C634300081400330000000000000000 ","sourceMap":"166:620:22:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"tokenDecimals(address)":"infinite","transferERC20(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Helper.sol\":\"Helper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/libraries/Helper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport {IERC20, IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nlibrary  Helper {\\n    error TransferFailed();\\n    \\n    function tokenDecimals(\\n        address token\\n    ) internal view returns (uint8 decimals) {\\n        decimals = IERC20Metadata(token).decimals();\\n    }\\n\\n    function transferERC20(\\n        address _token,\\n        address _from,\\n        address  _to,\\n        uint256 _amount\\n    ) internal {\\n        bool success;\\n        if (_from == address(this)) {\\n            success = IERC20(_token).transfer(_to, _amount);\\n        } else {\\n            success = IERC20(_token).transferFrom(_from, _to, _amount);\\n        }\\n        if (!success) revert TransferFailed();\\n    }\\n}\",\"keccak256\":\"0x5b6ca12b7937a44e1b58a93dda13f53787ebbb9706c8c9701baad3cffbada927\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/InterestRate.sol":{"InterestRate":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a4d6408f3998709c7c166dcff71959619fe1a854eb6b8af93cd2a831d1f3d5864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0x4D PUSH5 0x8F3998709 0xC7 0xC1 PUSH7 0xDCFF71959619FE BYTE DUP6 0x4E 0xB6 0xB8 0xAF SWAP4 0xCD 0x2A DUP4 SAR 0x1F RETURNDATASIZE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"96:987:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;96:987:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201a4d6408f3998709c7c166dcff71959619fe1a854eb6b8af93cd2a831d1f3d5864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0x4D PUSH5 0x8F3998709 0xC7 0xC1 PUSH7 0xDCFF71959619FE BYTE DUP6 0x4E 0xB6 0xB8 0xAF SWAP4 0xCD 0x2A DUP4 SAR 0x1F RETURNDATASIZE PC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"96:987:23:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getInterestRate(struct Structs.VaultInfo memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/InterestRate.sol\":\"InterestRate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/Structs.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface Structs {\\n    enum TokenType {\\n        ERC20,\\n        ERC721\\n    }\\n\\n    struct SupportedToken {\\n        address usdPriceFeed;\\n        TokenType tokenType;\\n        bool supported;\\n    }\\n\\n    struct AccountShares {\\n        uint256 collateral;\\n        uint256 borrow;\\n    }\\n\\n    struct Vault {\\n        uint256 amount;\\n        uint256 shares;\\n    }\\n\\n    struct TokenVault {\\n        Vault totalAsset;\\n        Vault totalBorrow;\\n        VaultInfo vaultInfo;\\n    }\\n\\n    struct VaultInfo {\\n        uint256 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 ratePerSec;\\n        uint64 lastTimestamp;\\n        uint64 lastBlock;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n\\n    struct LiquidatedWarning {\\n        address liquidator;\\n        uint64 liquidationTimestamp;\\n    }\\n\\n    struct VaultSetupParamemters {\\n        uint64 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n}\",\"keccak256\":\"0x9a6b326a06bcee7cfcef4cfd680c4afa19f98541c4463a683dad54b204245f10\",\"license\":\"MIT\"},\"contracts/libraries/InterestRate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"../interfaces/Structs.sol\\\";\\n\\nlibrary InterestRate {\\n    uint256 internal constant RATE_PRECISION = 1e18;\\n\\n    function getInterestRate(\\n        Structs.VaultInfo memory _interestRateInfo,\\n        uint256 utilization\\n    ) internal pure returns (uint256 newRate) {\\n        uint256 optimalUtilization = _interestRateInfo.optimalUtilization;\\n        uint256 baseRate = uint256(_interestRateInfo.baseRate);\\n        uint256 slope1 = uint256(_interestRateInfo.slope1);\\n        uint256 slope2 = uint256(_interestRateInfo.slope2);\\n\\n        if (utilization <= optimalUtilization) {\\n            uint256 rate = (utilization * slope1) / optimalUtilization;\\n            newRate = baseRate + rate;\\n        } else {\\n            uint256 delta = utilization - optimalUtilization;\\n            uint256 excessUtilizationRate = \\n                (delta * RATE_PRECISION) / (RATE_PRECISION - optimalUtilization);\\n            newRate = baseRate + slope1 + (excessUtilizationRate * slope2)\\n                / RATE_PRECISION;\\n        }\\n    }\\n}\",\"keccak256\":\"0x0ed1069701529c6016943238a8e70f961be7f802b47f2f5ce51d747b99e92fbd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/VaultAccounting.sol":{"VaultAccounting":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fa854b5efc004f0bb8a48c553a223c1708f74d9ad6e2d7b7cbcbea08c87f2c064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xA8 SLOAD 0xB5 0xEF 0xC0 DIV CREATE 0xBB DUP11 BASEFEE 0xC5 MSTORE8 LOG2 0x23 0xC1 PUSH17 0x8F74D9AD6E2D7B7CBCBEA08C87F2C06473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"95:898:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;95:898:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fa854b5efc004f0bb8a48c553a223c1708f74d9ad6e2d7b7cbcbea08c87f2c064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xA8 SLOAD 0xB5 0xEF 0xC0 DIV CREATE 0xBB DUP11 BASEFEE 0xC5 MSTORE8 LOG2 0x23 0xC1 PUSH17 0x8F74D9AD6E2D7B7CBCBEA08C87F2C06473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"95:898:24:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toAmount(struct Structs.Vault memory,uint256,bool)":"infinite","toShares(struct Structs.Vault memory,uint256,bool)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/VaultAccounting.sol\":\"VaultAccounting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/Structs.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ninterface Structs {\\n    enum TokenType {\\n        ERC20,\\n        ERC721\\n    }\\n\\n    struct SupportedToken {\\n        address usdPriceFeed;\\n        TokenType tokenType;\\n        bool supported;\\n    }\\n\\n    struct AccountShares {\\n        uint256 collateral;\\n        uint256 borrow;\\n    }\\n\\n    struct Vault {\\n        uint256 amount;\\n        uint256 shares;\\n    }\\n\\n    struct TokenVault {\\n        Vault totalAsset;\\n        Vault totalBorrow;\\n        VaultInfo vaultInfo;\\n    }\\n\\n    struct VaultInfo {\\n        uint256 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 ratePerSec;\\n        uint64 lastTimestamp;\\n        uint64 lastBlock;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n\\n    struct LiquidatedWarning {\\n        address liquidator;\\n        uint64 liquidationTimestamp;\\n    }\\n\\n    struct VaultSetupParamemters {\\n        uint64 reserveRatio;\\n        uint64 feeToProtocolRate;\\n        uint64 flashFeeRate;\\n        uint64 baseRate;\\n        uint64 slope1;\\n        uint64 slope2;\\n        uint256 optimalUtilization;\\n    }\\n}\",\"keccak256\":\"0x9a6b326a06bcee7cfcef4cfd680c4afa19f98541c4463a683dad54b204245f10\",\"license\":\"MIT\"},\"contracts/libraries/VaultAccounting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"../interfaces/Structs.sol\\\";\\n\\nlibrary VaultAccounting {\\n    function toShares(\\n        Structs.Vault memory total,\\n        uint256 amount,\\n        bool roundUp\\n    ) internal pure returns (uint256 shares) {\\n        if(total.amount == 0) {\\n            shares = amount;\\n        } else {\\n            shares = (amount * total.shares) / total.amount;\\n            if (roundUp && (shares * total.amount) / total.shares < amount) {\\n                shares = shares + 1;\\n            }\\n        }\\n    }\\n\\n    function toAmount(\\n        Structs.Vault memory total,\\n        uint256 shares,\\n        bool roundUp\\n    ) internal pure returns (uint256 amount) {\\n        if(total.shares == 0) {\\n            amount = shares;\\n        } else {\\n            amount = (shares * total.amount) / total.shares;\\n            if (roundUp && (amount * total.shares) / total.amount < shares) {\\n                amount = amount + 1;\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0xe14f04e2eccd9d2cf38d50ce10d20b463bc9c4ee336e54f09301b960163904ce\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/utils/Constants.sol":{"Constants":{"abi":[{"inputs":[],"name":"BLOCKS_PER_YEAR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"BLOCKS_PER_YEAR()":"d37db1d2","BPS()":"249d39e9","PRECISION()":"aaf5eb68"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BLOCKS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Constants.sol\":\"Constants\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nabstract contract Constants {\\n    uint256 public constant BPS = 1e5; //Basis point, 1e5 means 5 decimals precision\\n    uint256 public constant PRECISION = 1e18; //18 decimals \\n    uint256 internal constant MIN_HEALTH_FACTOR = 1e18;\\n    uint256 internal constant FULL_LIQUIDATION_THRESHOLD = 0.9e18;\\n    uint256 internal constant LIQUIDATION_THRESHOLD = 8e4; //80%\\n    uint256 internal constant DEFAULT_LIQUIDATION_CLOSE = 5e4; //50%\\n    uint256 internal constant LIQUIDATION_REWARD = 5e3; //5%\\n\\n    uint256 internal constant NFT_LIQUIDATION_DISCOUNT = 1e4; //10%\\n    uint256 internal constant NFT_WARNING_DELAY = 24 hours;\\n    uint256 internal constant NFT_LIQUIDATOR_DELAY = 5 minutes;\\n\\n    //default interest if borrow = 0\\n    uint64 internal constant DEFAULT_INTEREST = 158247046; //0.5% annual rate 1e18 precision \\n    uint256 internal constant MAX_PROTOCOL_FEE = 0.5e4;\\n    uint256 public constant BLOCKS_PER_YEAR = 2102400; //Average ethereum blocks per year\\n}\\n\",\"keccak256\":\"0x298cf4930b6371254d50ea8c8b7f56d5b08733c98e6a0bb96b9f6619293aad1d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/utils/Pausing.sol":{"Pausing":{"abi":[{"inputs":[],"name":"isNotPaused","type":"error"},{"inputs":[],"name":"isPaused","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"state","type":"bool"}],"name":"SystemPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"bool","name":"state","type":"bool"}],"name":"VaultPaused","type":"event"},{"inputs":[],"name":"globalPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"name":"pausedStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setPausedStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_1583":{"entryPoint":null,"id":1583,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":50,"id":157,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040526000805460ff60a01b1916600160a01b17905534801561002357600080fd5b5061002d33610032565b610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610436806100916000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100bd578063b6812c99146100d8578063f2fde38b146100eb57600080fd5b80631d81944f1461007757806361a552dc1461008c578063715018a6146100b5575b600080fd5b61008a6100853660046103a2565b6100fe565b005b6000546100a090600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61008a6101e4565b6000546040516001600160a01b0390911681526020016100ac565b6100a06100e63660046103de565b6101f8565b61008a6100f93660046103de565b61022f565b6101066102c4565b6001600160a01b0382166101885760008054821515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff9091161790556040517f59617e84cd4a4d47c34c76f190da73d3a6a0236e0770dcba41851db53f336f579061017c90831515815260200190565b60405180910390a15050565b6001600160a01b038216600081815260016020908152604091829020805460ff19168515159081179091558251938452908301527ff0158690f9b0f41fc31e96038d36f6b6517557ebe2d3202408966ef3c616f5b6910161017c565b6101ec6102c4565b6101f6600061031e565b565b60008054600160a01b900460ff168061022957506001600160a01b03821660009081526001602052604090205460ff165b92915050565b6102376102c4565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c18161031e565b50565b6000546001600160a01b031633146101f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461039d57600080fd5b919050565b600080604083850312156103b557600080fd5b6103be83610386565b9150602083013580151581146103d357600080fd5b809150509250929050565b6000602082840312156103f057600080fd5b6103f982610386565b939250505056fea26469706673582212208fa0cf185d0deec20fe4c1ae71099515cc9a638558a7d7fe725167a640f8996a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D CALLER PUSH2 0x32 JUMP JUMPDEST PUSH2 0x82 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x436 DUP1 PUSH2 0x91 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xB6812C99 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D81944F EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST PUSH2 0x8A PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH2 0x106 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x59617E84CD4A4D47C34C76F190DA73D3A6A0236E0770DCBA41851DB53F336F57 SWAP1 PUSH2 0x17C SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xF0158690F9B0F41FC31E96038D36F6B6517557EBE2D3202408966EF3C616F5B6 SWAP2 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x0 PUSH2 0x31E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x229 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x31E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BE DUP4 PUSH2 0x386 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F9 DUP3 PUSH2 0x386 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 LOG0 0xCF XOR 0x5D 0xD 0xEE 0xC2 0xF 0xE4 0xC1 0xAE PUSH18 0x99515CC9A638558A7D7FE725167A640F899 PUSH11 0x64736F6C63430008140033 ","sourceMap":"112:1010:26:-:0;;;147:31;;;-1:-1:-1;;;;147:31:26;-1:-1:-1;;;147:31:26;;;112:1010;;;;;;;;;-1:-1:-1;936:32:1;735:10:9;936:18:1;:32::i;:::-;112:1010:26;;2426:187:1;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;112:1010:26:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":708,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_1583":{"entryPoint":null,"id":1583,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":798,"id":157,"parameterSlots":1,"returnSlots":0},"@globalPaused_7313":{"entryPoint":null,"id":7313,"parameterSlots":0,"returnSlots":0},"@owner_86":{"entryPoint":null,"id":86,"parameterSlots":0,"returnSlots":1},"@pausedStatus_7375":{"entryPoint":504,"id":7375,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":484,"id":114,"parameterSlots":0,"returnSlots":0},"@setPausedStatus_7413":{"entryPoint":254,"id":7413,"parameterSlots":2,"returnSlots":0},"@transferOwnership_137":{"entryPoint":559,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":930,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2258:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:27","statements":[{"nodeType":"YulAssignment","src":"73:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:27"},"nodeType":"YulFunctionCall","src":"82:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:27"}]},{"body":{"nodeType":"YulBlock","src":"188:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:27"},"nodeType":"YulFunctionCall","src":"190:12:27"},"nodeType":"YulExpressionStatement","src":"190:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:27"},"nodeType":"YulFunctionCall","src":"131:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:27"},"nodeType":"YulFunctionCall","src":"121:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:27"},"nodeType":"YulFunctionCall","src":"114:73:27"},"nodeType":"YulIf","src":"111:93:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:27","type":""}],"src":"14:196:27"},{"body":{"nodeType":"YulBlock","src":"299:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"345:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"354:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"357:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"347:6:27"},"nodeType":"YulFunctionCall","src":"347:12:27"},"nodeType":"YulExpressionStatement","src":"347:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"320:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"329:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"316:3:27"},"nodeType":"YulFunctionCall","src":"316:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"341:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"312:3:27"},"nodeType":"YulFunctionCall","src":"312:32:27"},"nodeType":"YulIf","src":"309:52:27"},{"nodeType":"YulAssignment","src":"370:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"399:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"380:18:27"},"nodeType":"YulFunctionCall","src":"380:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"370:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"418:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"448:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"444:3:27"},"nodeType":"YulFunctionCall","src":"444:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"431:12:27"},"nodeType":"YulFunctionCall","src":"431:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"422:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"516:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:27"},"nodeType":"YulFunctionCall","src":"518:12:27"},"nodeType":"YulExpressionStatement","src":"518:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"506:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"499:6:27"},"nodeType":"YulFunctionCall","src":"499:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"492:6:27"},"nodeType":"YulFunctionCall","src":"492:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"482:2:27"},"nodeType":"YulFunctionCall","src":"482:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"475:6:27"},"nodeType":"YulFunctionCall","src":"475:40:27"},"nodeType":"YulIf","src":"472:60:27"},{"nodeType":"YulAssignment","src":"541:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"551:5:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"541:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"257:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"268:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"280:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"288:6:27","type":""}],"src":"215:347:27"},{"body":{"nodeType":"YulBlock","src":"662:92:27","statements":[{"nodeType":"YulAssignment","src":"672:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"684:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"695:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"680:3:27"},"nodeType":"YulFunctionCall","src":"680:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"672:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"714:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"739:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"732:6:27"},"nodeType":"YulFunctionCall","src":"732:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"725:6:27"},"nodeType":"YulFunctionCall","src":"725:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"707:6:27"},"nodeType":"YulFunctionCall","src":"707:41:27"},"nodeType":"YulExpressionStatement","src":"707:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"631:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"642:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"653:4:27","type":""}],"src":"567:187:27"},{"body":{"nodeType":"YulBlock","src":"860:125:27","statements":[{"nodeType":"YulAssignment","src":"870:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"882:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"893:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"878:3:27"},"nodeType":"YulFunctionCall","src":"878:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"870:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"912:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"927:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"935:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"923:3:27"},"nodeType":"YulFunctionCall","src":"923:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"905:6:27"},"nodeType":"YulFunctionCall","src":"905:74:27"},"nodeType":"YulExpressionStatement","src":"905:74:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"829:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"840:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"851:4:27","type":""}],"src":"759:226:27"},{"body":{"nodeType":"YulBlock","src":"1060:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"1106:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1115:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1118:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1108:6:27"},"nodeType":"YulFunctionCall","src":"1108:12:27"},"nodeType":"YulExpressionStatement","src":"1108:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1081:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1090:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1077:3:27"},"nodeType":"YulFunctionCall","src":"1077:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1102:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1073:3:27"},"nodeType":"YulFunctionCall","src":"1073:32:27"},"nodeType":"YulIf","src":"1070:52:27"},{"nodeType":"YulAssignment","src":"1131:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1160:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1141:18:27"},"nodeType":"YulFunctionCall","src":"1141:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1131:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1026:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1037:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1049:6:27","type":""}],"src":"990:186:27"},{"body":{"nodeType":"YulBlock","src":"1304:184:27","statements":[{"nodeType":"YulAssignment","src":"1314:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1337:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:27"},"nodeType":"YulFunctionCall","src":"1322:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1314:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1356:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1371:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1379:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1367:3:27"},"nodeType":"YulFunctionCall","src":"1367:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1349:6:27"},"nodeType":"YulFunctionCall","src":"1349:74:27"},"nodeType":"YulExpressionStatement","src":"1349:74:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1443:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1454:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1439:3:27"},"nodeType":"YulFunctionCall","src":"1439:18:27"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1473:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1466:6:27"},"nodeType":"YulFunctionCall","src":"1466:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1459:6:27"},"nodeType":"YulFunctionCall","src":"1459:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1432:6:27"},"nodeType":"YulFunctionCall","src":"1432:50:27"},"nodeType":"YulExpressionStatement","src":"1432:50:27"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1265:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1276:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1284:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1295:4:27","type":""}],"src":"1181:307:27"},{"body":{"nodeType":"YulBlock","src":"1667:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1684:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1695:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1677:6:27"},"nodeType":"YulFunctionCall","src":"1677:21:27"},"nodeType":"YulExpressionStatement","src":"1677:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1718:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1729:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1714:3:27"},"nodeType":"YulFunctionCall","src":"1714:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"1734:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1707:6:27"},"nodeType":"YulFunctionCall","src":"1707:30:27"},"nodeType":"YulExpressionStatement","src":"1707:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1768:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:27"},"nodeType":"YulFunctionCall","src":"1753:18:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"1773:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1746:6:27"},"nodeType":"YulFunctionCall","src":"1746:62:27"},"nodeType":"YulExpressionStatement","src":"1746:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1828:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1839:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1824:3:27"},"nodeType":"YulFunctionCall","src":"1824:18:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"1844:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1817:6:27"},"nodeType":"YulFunctionCall","src":"1817:36:27"},"nodeType":"YulExpressionStatement","src":"1817:36:27"},{"nodeType":"YulAssignment","src":"1862:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1885:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1870:3:27"},"nodeType":"YulFunctionCall","src":"1870:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1862:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1644:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1658:4:27","type":""}],"src":"1493:402:27"},{"body":{"nodeType":"YulBlock","src":"2074:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2091:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2102:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2084:6:27"},"nodeType":"YulFunctionCall","src":"2084:21:27"},"nodeType":"YulExpressionStatement","src":"2084:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2125:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2136:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2121:3:27"},"nodeType":"YulFunctionCall","src":"2121:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"2141:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2114:6:27"},"nodeType":"YulFunctionCall","src":"2114:30:27"},"nodeType":"YulExpressionStatement","src":"2114:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2164:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2175:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2160:3:27"},"nodeType":"YulFunctionCall","src":"2160:18:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2180:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2153:6:27"},"nodeType":"YulFunctionCall","src":"2153:62:27"},"nodeType":"YulExpressionStatement","src":"2153:62:27"},{"nodeType":"YulAssignment","src":"2224:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2236:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2247:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2232:3:27"},"nodeType":"YulFunctionCall","src":"2232:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2224:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2051:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2065:4:27","type":""}],"src":"1900:356:27"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100bd578063b6812c99146100d8578063f2fde38b146100eb57600080fd5b80631d81944f1461007757806361a552dc1461008c578063715018a6146100b5575b600080fd5b61008a6100853660046103a2565b6100fe565b005b6000546100a090600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b61008a6101e4565b6000546040516001600160a01b0390911681526020016100ac565b6100a06100e63660046103de565b6101f8565b61008a6100f93660046103de565b61022f565b6101066102c4565b6001600160a01b0382166101885760008054821515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff9091161790556040517f59617e84cd4a4d47c34c76f190da73d3a6a0236e0770dcba41851db53f336f579061017c90831515815260200190565b60405180910390a15050565b6001600160a01b038216600081815260016020908152604091829020805460ff19168515159081179091558251938452908301527ff0158690f9b0f41fc31e96038d36f6b6517557ebe2d3202408966ef3c616f5b6910161017c565b6101ec6102c4565b6101f6600061031e565b565b60008054600160a01b900460ff168061022957506001600160a01b03821660009081526001602052604090205460ff165b92915050565b6102376102c4565b6001600160a01b0381166102b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c18161031e565b50565b6000546001600160a01b031633146101f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461039d57600080fd5b919050565b600080604083850312156103b557600080fd5b6103be83610386565b9150602083013580151581146103d357600080fd5b809150509250929050565b6000602082840312156103f057600080fd5b6103f982610386565b939250505056fea26469706673582212208fa0cf185d0deec20fe4c1ae71099515cc9a638558a7d7fe725167a640f8996a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0xB6812C99 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D81944F EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST PUSH2 0x8A PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH2 0x106 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x59617E84CD4A4D47C34C76F190DA73D3A6A0236E0770DCBA41851DB53F336F57 SWAP1 PUSH2 0x17C SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xF0158690F9B0F41FC31E96038D36F6B6517557EBE2D3202408966EF3C616F5B6 SWAP2 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x1F6 PUSH1 0x0 PUSH2 0x31E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x229 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x31E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BE DUP4 PUSH2 0x386 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F9 DUP3 PUSH2 0x386 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 LOG0 0xCF XOR 0x5D 0xD 0xEE 0xC2 0xF 0xE4 0xC1 0xAE PUSH18 0x99515CC9A638558A7D7FE725167A640F899 PUSH11 0x64736F6C63430008140033 ","sourceMap":"112:1010:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:360;;;;;;:::i;:::-;;:::i;:::-;;147:31;;;;;-1:-1:-1;;;147:31:26;;;;;;;;;732:14:27;;725:22;707:41;;695:2;680:18;147:31:26;;;;;;;;1824:101:1;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:1;;;905:74:27;;893:2;878:18;1201:85:1;759:226:27;632:122:26;;;;;;:::i;:::-;;:::i;2074:198:1:-;;;;;;:::i;:::-;;:::i;760:360:26:-;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;846:19:26;::::1;842:272;;940:12;:21:::0;;;::::1;;-1:-1:-1::0;;;940:21:26::1;::::0;;;::::1;;::::0;;980:20:::1;::::0;::::1;::::0;::::1;::::0;955:6;732:14:27;725:22;707:41;;695:2;680:18;;567:187;980:20:26::1;;;;;;;;760:360:::0;;:::o;842:272::-:1;-1:-1:-1::0;;;;;1031:18:26;::::1;;::::0;;;:11:::1;:18;::::0;;;;;;;;:27;;-1:-1:-1;;1031:27:26::1;::::0;::::1;;::::0;;::::1;::::0;;;1077:26;;1349:74:27;;;1439:18;;;1432:50;1077:26:26::1;::::0;1322:18:27;1077:26:26::1;1181:307:27::0;1824:101:1;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;632:122:26:-;690:4;713:12;;-1:-1:-1;;;713:12:26;;;;;:34;;-1:-1:-1;;;;;;729:18:26;;;;;;:11;:18;;;;;;;;713:34;706:41;632:122;-1:-1:-1;;632:122:26:o;2074:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:1;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:1;;1695:2:27;2154:73:1::1;::::0;::::1;1677:21:27::0;1734:2;1714:18;;;1707:30;1773:34;1753:18;;;1746:62;1844:8;1824:18;;;1817:36;1870:19;;2154:73:1::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;735:10:9;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;2102:2:27;1414:68:1;;;2084:21:27;;;2121:18;;;2114:30;2180:34;2160:18;;;2153:62;2232:18;;1414:68:1;1900:356:27;2426:187:1;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:1;;;;;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:196:27:-;82:20;;-1:-1:-1;;;;;131:54:27;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:347::-;280:6;288;341:2;329:9;320:7;316:23;312:32;309:52;;;357:1;354;347:12;309:52;380:29;399:9;380:29;:::i;:::-;370:39;;459:2;448:9;444:18;431:32;506:5;499:13;492:21;485:5;482:32;472:60;;528:1;525;518:12;472:60;551:5;541:15;;;215:347;;;;;:::o;990:186::-;1049:6;1102:2;1090:9;1081:7;1077:23;1073:32;1070:52;;;1118:1;1115;1108:12;1070:52;1141:29;1160:9;1141:29;:::i;:::-;1131:39;990:186;-1:-1:-1;;;990:186:27:o"},"gasEstimates":{"creation":{"codeDepositCost":"215600","executionCost":"50334","totalCost":"265934"},"external":{"globalPaused()":"2339","owner()":"2301","pausedStatus(address)":"4730","renounceOwnership()":"infinite","setPausedStatus(address,bool)":"28241","transferOwnership(address)":"28362"},"internal":{"WhenNotPaused(address)":"infinite","WhenPaused(address)":"infinite"}},"methodIdentifiers":{"globalPaused()":"61a552dc","owner()":"8da5cb5b","pausedStatus(address)":"b6812c99","renounceOwnership()":"715018a6","setPausedStatus(address,bool)":"1d81944f","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"isNotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"isPaused\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SystemPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"VaultPaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"globalPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"pausedStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPausedStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Pausing.sol\":\"Pausing\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/utils/Pausing.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Pausing is Ownable {\\n\\n    bool public globalPaused = true;\\n\\n    mapping (address vaulToken => bool status) vaultPaused;\\n\\n    error isPaused();\\n    error isNotPaused();\\n\\n    event SystemPaused(bool state);\\n    event VaultPaused(address vault, bool state);\\n\\n    function WhenPaused(address vault) internal view {\\n        if (!globalPaused && !vaultPaused[vault]) revert isNotPaused();\\n    }\\n\\n    function WhenNotPaused(address vault) internal view {\\n        if (pausedStatus(vault)) revert isPaused();\\n    }\\n\\n    function pausedStatus(address vault) public view returns (bool) {\\n        return globalPaused || vaultPaused[vault];\\n    }\\n\\n    function setPausedStatus(address vault, bool status) external onlyOwner {\\n        if (vault == address(0)) {\\n            // pass address(0) to pause/unpause all vaults\\n            globalPaused = status;\\n            emit SystemPaused(status);\\n        } else {\\n            vaultPaused[vault] = status;\\n            emit VaultPaused(vault, status);\\n        }\\n    }\\n}\",\"keccak256\":\"0x81a2b30a3beb064cef10f2a20b13a0ec0aba68330157592f49f95582d7d9d14c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/utils/Pausing.sol:Pausing","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":7313,"contract":"contracts/utils/Pausing.sol:Pausing","label":"globalPaused","offset":20,"slot":"0","type":"t_bool"},{"astId":7317,"contract":"contracts/utils/Pausing.sol:Pausing","label":"vaultPaused","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}